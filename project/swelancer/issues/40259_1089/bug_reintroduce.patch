diff --git a/src/libs/OptionsListUtils.ts b/src/libs/OptionsListUtils.ts
index 51db5a693f9..45ddd46fa53 100644
--- a/src/libs/OptionsListUtils.ts
+++ b/src/libs/OptionsListUtils.ts
@@ -1560,7 +1560,8 @@ function createOptionList(personalDetails: OnyxEntry<PersonalDetailsList>, repor
 }
 
 function createOptionFromReport(report: Report, personalDetails: OnyxEntry<PersonalDetailsList>) {
-    const accountIDs = ReportUtils.getParticipantsAccountIDsForDisplay(report);
+
+    const accountIDs = report.participantAccountIDs ?? [];
 
     return {
         item: report,
@@ -1921,7 +1922,9 @@ function getOptions(
         allPersonalDetailsOptions = lodashOrderBy(allPersonalDetailsOptions, [(personalDetail) => personalDetail.text?.toLowerCase()], 'asc');
     }
 
-    const optionsToExclude: Option[] = [];
+
+    // Exclude the current user from the personal details list
+    const optionsToExclude: Option[] = [{login: currentUserLogin}, {login: CONST.EMAIL.NOTIFICATIONS}];
 
     // If we're including selected options from the search results, we only want to exclude them if the search input is empty
     // This is because on certain pages, we show the selected options at the top when the search input is empty
@@ -2022,14 +2025,14 @@ function getOptions(
         }
     }
 
-    const personalDetailsOptionsToExclude = [...optionsToExclude, {login: currentUserLogin}];
     // Next loop over all personal details removing any that are selectedUsers or recentChats
     for (const personalDetailOption of allPersonalDetailsOptions) {
-        if (personalDetailsOptionsToExclude.some((optionToExclude) => optionToExclude.login === personalDetailOption.login)) {
+        if (optionsToExclude.some((optionToExclude) => optionToExclude.login === personalDetailOption.login)) {
             continue;
         }
         personalDetailOption.isBold = shouldBoldTitleByDefault;
 
+
         personalDetailsOptions.push(personalDetailOption);
     }
 
diff --git a/src/pages/NewChatPage.tsx b/src/pages/NewChatPage.tsx
index 15263441220..18d454177f7 100755
--- a/src/pages/NewChatPage.tsx
+++ b/src/pages/NewChatPage.tsx
@@ -67,11 +67,8 @@ function useOptions({isGroupChat}: NewChatPageProps) {
             {},
             [],
             true,
-            undefined,
-            undefined,
-            0,
-            undefined,
             true,
+
         );
         return filteredOptions;
     }, [betas, isGroupChat, listOptions.personalDetails, listOptions.reports, selectedOptions]);
@@ -206,10 +203,6 @@ function NewChatPage({isGroupChat}: NewChatPageProps) {
      */
     const createChat = useCallback(
         (option?: OptionsListUtils.Option) => {
-            if (option?.isSelfDM) {
-                Navigation.dismissModal(option.reportID);
-                return;
-            }
             let login = '';
 
             if (option?.login) {
@@ -228,9 +221,10 @@ function NewChatPage({isGroupChat}: NewChatPageProps) {
 
     const itemRightSideComponent = useCallback(
         (item: ListItem & OptionsListUtils.Option, isFocused?: boolean) => {
-            if (!!item.isSelfDM || (item.accountID && CONST.NON_ADDABLE_ACCOUNT_IDS.includes(item.accountID))) {
+            if (item.accountID && CONST.NON_ADDABLE_ACCOUNT_IDS.includes(item.accountID)) {
                 return null;
             }
+
             /**
              * Removes a selected option from list if already selected. If not already selected add this option to the list.
              * @param  option
