{
    "id": "6fa267fe-5014-4fc2-b49f-2758b0cf3545",
    "requirements": "The paper \"What Will My Model Forget? Forecasting Forgotten Examples in Language Model Refinement\" has been replicated.",
    "weight": 1,
    "sub_tasks": [
        {
            "id": "c63b2b38-5ad5-4f1f-9ff2-3514ba5de4a4",
            "requirements": "The pre-training dataset $D_{PT}$ has been created, as described in Section 4.1 Training and Evaluation Setup under the \"Base PTLMs and Datasets\" sub-header.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "96a4dbe2-3a62-4f5a-a419-0befc986ab38",
                    "requirements": "Code has been implemented for creating the the pre-training dataset $D_{PT}$, as described in Section 4.1 Training and Evaluation Setup under the \"Base PTLMs and Datasets\" sub-header.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "f1d4b756-ea03-4caa-8e74-50883d9d8960",
                            "requirements": "Code has been implemented for creating the pre-training dataset $D_{PT}$ so that it is composed of 36 tasks from the training split of the Public Pool of Prompts (P3) dataset.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "fdf8791a-22a1-493c-a399-c9702d753196",
                            "requirements": "Code has been implemented for creating the pre-training dataset $D_{PT}$, such that each task in the pre-training dataset $D_{PT}$ will contain 100 examples randomly drawn from the original task in the P3 train split.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "afd0d576-03ab-4108-8cf4-dff15a649c1e",
                            "requirements": "The 36 tasks used are: glue-mrpc, glue-qqp, paws_x-en, kilt_tasks-hotpotqa, wiki_qa, adversarial_qa-dbert, adversarial_qa-dbidaf, adversarial_qa-droberta, duorc-SelfRC, duorc-ParaphraseRC, ropes, quoref, cos_e-v1.11, cosmos_qa, dream, qasc, quail, quartz, sciq, social_i_qa, wiki_hop-original, wiqa, amazon_polarity, app_reviews, imdb, rotten_tomatoes, yelp_review_full, common_gen, wiki_bio, cnn_dailymail-3.0.0, gigaword, multi_news, samsum, xsum, ag_news and dbpedia_14.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "062f5441-a237-4158-b527-4e0c6d057423",
                    "requirements": "The pre-training dataset $D_{PT}$ has been created, as described in Section 4.1 Training and Evaluation Setup under the \"Base PTLMs and Datasets\" sub-header.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "475b2e49-6ecc-4f44-a240-c6edc0dcdb60",
                            "requirements": "The pre-training dataset $D_{PT}$ has been created such that it contains 36 tasks from the training split of the Public Pool of Prompts (P3) dataset.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "a18c17c2-7e04-479c-a021-63b57e774ea7",
                            "requirements": "The pre-training dataset $D_{PT}$ has been created such that each task in the pre-training dataset $D_{PT}$ contains 100 examples randomly drawn from the original task in the P3 train split.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Data Processing & Preparation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "207fe185-3912-457e-a944-de35d60af47c",
            "requirements": "Table 1 has been replicated.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "473280aa-d73d-4a6a-aad7-25fe8a0fdfdd",
                    "requirements": "Code has been written to evaluate the frequency-threshold based forecasting method on all model, dataset and fine-tuning configurations present in Table 1.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "8a07ee06-93a0-472f-9df0-32a0b25e5245",
                            "requirements": "Code has been written to evaluate the frequency-threshold based forecasting method using BART0_{Large}, the P3 test set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "abb6cc09-e53c-4976-9839-b477bf5aeb5b",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "71d18331-f966-4747-b448-19a92c0dd0b9",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ad7e2c72-facf-4ff1-9e92-d1198cc94479",
                                    "requirements": "Code has been written to fine-tune the head of BART0_{Large} on each $(x_i, y_i)$ in $D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", keeping the remaining parameters fixed, thereby creating $| D_R^{train} |$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "977c1044-ff82-4697-9669-8a6f27008fa5",
                                    "requirements": "Code has been written to compute the ground-truth forgetting binary indicator $z_{ij}$ by fine-tuning a copy of BART0_{Large} on each $(x_i, y_i) \\in D_R^{\text{train}}$, querying it on the $j$th sample from $\\hat{D}{PT}$, and grading the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a2e25c2c-dc83-4dee-b026-ef880b63256d",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximises the F1-score, as described in Section 3.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "ddcf5aab-6855-483d-8bed-e17f29725a68",
                                    "requirements": "Code has been written to fine-tune the head of BART0_{Large} on each $(x_i, y_i)$ in $D_R^{test}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", keeping the remaining parameters fixed, thereby creating $| D_R^{test} |$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "0744d171-bc12-49f0-b339-3664534e4822",
                                    "requirements": "Code has been written to query the frequency-threshold based forecasting function $g$ for every sample $(x_i, y_i) \\in D_R^{test}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ and grade it using the Exact Match score, producing a prediction $\\hat{z}_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6fa84b8c-069a-44df-a86d-9f3e1daa4c9b",
                                    "requirements": "Code has been written to fine-tune a copy of BART0_{Large} on $(x_i, y_i) \\in D_R^{test}$, query it on the $j$th sample from the filtered pre-training dataset $(x_j, y_j) \\in \\hat{D}_{PT}$, and grade it using the Exact Match score, producing a ground-truth forgetting binary indicator $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "dcc82c9a-58ba-41d3-a02a-b1d24af29c1a",
                                    "requirements": "Code has been written to compute the F1-score of the frequency-threshold based forecasting function $g$ on $D_R^{test}$ using the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "df900ee6-4194-46ce-a50e-a3b52ad4c8dd",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "504a0bf7-45f2-49ff-ad24-7fa7f07af414",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "d39373af-6169-4000-9887-434bd2c6bc29",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "5c9e03d9-ff76-4907-8be6-512b473f5cba",
                            "requirements": "Code has been written to evaluate the frequency-threshold based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "4d08d775-2b93-4932-86c6-f7c7ce0d8702",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1f0cccce-1a13-4996-ba6e-9326a6785f91",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7ba72065-8842-44f7-b6a2-1010543b707c",
                                    "requirements": "Code has been written to fine-tune the entire BART0_{Large} model on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", altering all parameters, thereby creating $|D_R^{train}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "862a28f8-5236-4dfa-a55a-0fbc6385bf70",
                                    "requirements": "Code has been written to compute the ground-truth forgetting binary indicator $z_{ij}$ for all pairs $(x_i, y_i) \\in D_R^{\\text{train}}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ by evaluating the copy of BART0_{Large} fine-tuned on each $(x_i, y_i)$ on the corresponding $j$th sample from $\\hat{D}_{PT}$ and grading the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "67375e9a-26b4-4518-beea-7d6f038529b5",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "ebcfb981-d9bf-4d17-b437-f8e499dc2be6",
                                    "requirements": "Code has been written to fine-tune the entire BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", altering all parameters, thereby creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "e430e631-4d78-4fd9-9df5-f6f56f33d7dd",
                                    "requirements": "Code has been written to query the frequency-threshold based forecasting function $g$ for every sample $(x_i, y_i) \\in D_R^{test}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ to produce a prediction $\\hat{z}_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "14f81679-15fd-4bc0-bd29-033cf86300bd",
                                    "requirements": "Code has been written to query the copy of BART0_{Large} fully fine-tuned on $(x_i, y_i) \\in D_R^{test}$ on the $j^\\text{th}$ sample from the filtered pre-training dataset $(x_j, y_j) \\in \\hat{D}_{PT}$ and graded using the Exact Match score, producing a ground-truth forgetting binary indicator $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "592813ae-175a-4a89-a922-7db5ad124b66",
                                    "requirements": "Code has been written to compute the F1-score of the frequency-threshold based forecasting function $g$ on $D_R^{test}$ using the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "941fadae-db21-4b59-a019-c1b866ea3ca4",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "d48f8290-dd41-4d50-a106-f78a50ffbf2b",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "518dc07d-5fd9-49e4-ba93-78347a4a50cc",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "3fc3ea62-56de-4e1a-b7bc-e646f9c6a5f1",
                            "requirements": "Code has been written to evaluate the frequency-threshold based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "8968eba8-f72b-4526-ab7f-220eafad6680",
                                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1 -- Training and Evaluation of the Forecasting Model $g$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "85ee3b38-7b8b-4d5b-982a-cb8c2dff54e0",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2b2f6bc3-6da8-412a-ba51-cdb6a71741ca",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{Large} on each $(x_i, y_i)$ in $D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", keeping the remaining parameters fixed, thereby creating $| D_R^{train} |$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "afa92ef1-f129-4cc3-8ee0-84cac44baaba",
                                    "requirements": "Code has been developed to compute the ground-truth forgetting binary indicator $z_{ij}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i) \\in D_R^{train}$ on the $j$th sample from the filtered pre-training dataset $(x_j, y_j) \\in \\hat{D}_{PT}$ and grading it using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "247fe90c-6519-4b13-82ce-071ed4732e9c",
                                    "requirements": "Code has been developed to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ that maximises the F1-score, as described in Section 3.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "664b7083-d11a-43a2-9b96-789b5002226a",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{Large} on each $(x_i, y_i)$ in $D_R^{test}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", keeping the remaining parameters fixed, thereby creating $| D_R^{test} |$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "5f0f5bd7-6980-42f1-9cd1-46e68d8c41e2",
                                    "requirements": "Code has been written to query the frequency-threshold based forecasting function $g$ for every sample $(x_i, y_i) \\in D_R^{test}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ to produce a prediction $\\hat{z}_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "fb45886a-feab-41b5-868a-0151fb1f2030",
                                    "requirements": "Code has been written to query the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i) \\in D_R^{test}$ on the $j$th sample from the filtered pre-training dataset $(x_j, y_j) \\in \\hat{D}_{PT}$ and grade it using the Exact Match score, producing a ground-truth forgetting binary indicator $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e31eaa4d-9c25-4a80-bbdf-1801f93f49c6",
                                    "requirements": "Code has been written to compute the F1-score of the frequency-threshold based forecasting function $g$ on $D_R^{test}$ using the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b1553c35-f612-46bd-a7f8-33dc6a25b504",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "ec2c9cc9-f548-4a96-bb29-a101c4cf5e8a",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "513eae23-b191-4b6c-940b-70ad0d36e6e6",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "605f9224-183d-409f-8978-c8f14ef88f07",
                            "requirements": "Code has been written to evaluate the frequency-threshold based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "31e58c35-b95a-4b74-a4b1-e38bf584ccdf",
                                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "569ee723-3214-4f1a-aa0a-a91756799694",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ed1a3e41-2948-4918-961c-bf2c6f9d6bf8",
                                    "requirements": "Code has been written to fine-tune FLAN-T5_{Large} with LoRA on each $(x_i, y_i)$ in $D_R^{train}$ using the hyperparameters in Section 4.1, modifying only LoRA parameters, thereby creating $|D_R^{train}|$ separate updated models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "050963db-9905-4962-9c49-3aa1774a5771",
                                    "requirements": "Code has been developed to compute the ground-truth forgetting binary indicator $z_{ij}$ by evaluating each LoRA-updated copy of FLAN-T5_{Large}, fine-tuned on $(x_i, y_i) \\in D_R^{train}$, on the $j$th sample from the filtered pre-training dataset $(x_j, y_j) \\in \\hat{D}_{PT}$ and grading it using Exact Match.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a4d33abb-6681-47b5-bffa-4cb75682b145",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$ to determine a value for $\\gamma$ that maximizes the F1-score, as described in Section 3.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2e386f4d-0c44-4b4d-bbae-73f68acf0ba8",
                                    "requirements": "Code has been written to fine-tune FLAN-T5_{Large} with LoRA on each $(x_i, y_i)$ in $D_R^{test}$ using the hyperparameters in Section 4.1, modifying only LoRA parameters, thereby creating $|D_R^{test}|$ separate updated models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "6b3ec7c4-16f3-4459-9e0a-b5eed97384d0",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "9a4f8f2b-f9db-4d64-85cd-a6e2e2dcb7e8",
                                    "requirements": "Code has been written to apply the frequency-threshold based forecasting function $g$ to every sample $(x_i, y_i) \\in D_R^{test}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$, producing a predicted forgetting indicator $\\hat{z}_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c5da973c-f197-426d-92ec-0a657f6109ce",
                                    "requirements": "Code has been developed to evaluate each LoRA-updated copy of FLAN-T5_{Large}, fine-tuned on $(x_i, y_i) \\in D_R^{test}$, on the $j$th sample from the filtered pre-training dataset $(x_j, y_j) \\in \\hat{D}_{PT}$ using Exact Match, producing a ground-truth forgetting binary indicator $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3de1c01f-646f-405d-a044-8759cd636e64",
                                    "requirements": "Code has been written to compute the F1-score of the frequency-threshold based forecasting function $g$ on $D_R^{test}$ by comparing the predicted forgetting binary indicators $\\hat{z}_{ij}^{test}$ with the ground-truth indicators $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d7781295-a6f3-4c81-90fa-a6671b604258",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "c1f669b6-9ea1-478d-904a-43c83d4f70e9",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "58d951f8-8873-4b3e-9312-e74454af14aa",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "b13afcad-2778-4236-bec4-ab7093fc9208",
                            "requirements": "Code has been written to evaluate the frequency-threshold based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "fc454662-52b0-430e-a86c-1a873f877410",
                                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c3f068fb-0e24-4e1c-9c4c-d16fdd8cc5cc",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "cecd49d7-d327-4a34-b43f-6fd7ed97154d",
                                    "requirements": "Code has been developed to fine-tune the entire FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", altering all parameters, thereby creating $|D_R^{train}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "d7048f8f-433d-45ba-b20e-efb77a5a4056",
                                    "requirements": "Code has been developed to compute the ground-truth forgetting binary indicator $z_{ij}$ by evaluating each fully fine-tuned copy of FLAN-T5_{Large} on $(x_j, y_j) \\in \\hat{D}_{PT}$ using the Exact Match score, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9c786e50-cbef-4729-b4bf-a8ef968c1e5b",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "ae16276e-f272-4a08-bb18-6fe1077d49d0",
                                    "requirements": "Code has been developed to fine-tune the entire FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", altering all parameters, thereby creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "5208cf5e-b1c9-45e4-ae35-1c517a4c48f5",
                                    "requirements": "Code has been written to apply the frequency-threshold based forecasting function $g$ to each sample $(x_i, y_i) \\in D_R^{test}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ to produce a prediction $\\hat{z}_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8e4d8393-6d3f-4a9f-818c-cc6cb8f5d4a1",
                                    "requirements": "Code has been developed to evaluate each fully fine-tuned copy of FLAN-T5_{Large}, trained on $(x_i, y_i) \\in D_R^{test}$, on $(x_j, y_j) \\in \\hat{D}_{PT}$ using the Exact Match score, producing the ground-truth forgetting binary indicator $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "76dd0c51-105e-421c-86f3-9d150e315b9e",
                                    "requirements": "Code has been written to compute the F1-score of the frequency-threshold based forecasting function $g$ on $D_R^{test}$ using the predicted forgetting binary indicators $\\hat{z}_{ij}^{test}$ and the ground-truth indicators $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e523c21a-9ac2-4cf0-b9a9-cb3640b56e39",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "cb7888cf-5902-40e9-8dd8-3fb6a0360f35",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "4ce74906-994c-49cc-a9a2-3b809ae66650",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "c0b42f6a-c546-4c82-bf0b-3b96a2828a52",
                            "requirements": "Code has been written to evaluate the frequency-threshold based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "3d97590d-02e1-4dad-a5de-9bb67e6db61a",
                                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{3B} and evaluated with the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described under Section 4.1 -- Training and Evaluation Setup.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3c3f9e27-34d2-4eae-82ab-52a0955e75a4",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded with the Exact Match score to create the dataset of correct pre-training samples $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1ca94ce6-f3a9-46e4-ab56-c42fb840ad3e",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{3B} on each $(x_i, y_i) \\in D_R^{train}$ using the specified hyperparameters in Section 4.1, keeping other parameters fixed, thereby creating $|D_R^{train}|$-many models; one for each train example.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "cc9033d3-e75b-4459-af66-39db61f2b69c",
                                    "requirements": "For each fine-tuned model on $(x_i, y_i) \\in D_R^{train}$, code has been written to compute the ground-truth forgetting indicator $z_{ij}$ by evaluating on each sample $(x_j, y_j) \\in \\hat{D}_{PT}$ using the Exact Match score, as described in Section 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4647cc68-8081-43e8-a1d2-4cd8a643ed8c",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicators $z_{ij}$ to find an optimal value of $\\gamma$ that maximizes the F1-score, as described in Section 3.1 -- Frequency-Threshold Based Forecasting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "633e2fd9-381e-4dba-9f4b-e0103f2ddb2c",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{3B} on each $(x_i, y_i) \\in D_R^{test}$ using the specified hyperparameters in Section 4.1, keeping other parameters fixed, thereby creating $|D_R^{test}|$-many models; one for each test example.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "ecd5625f-2320-452e-9fb5-9d0afba49599",
                                    "requirements": "Code has been written to apply the frequency-threshold based forecasting function $g$ to each sample pair $(x_i, y_i) \\in D_R^{test}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$, producing a predicted forgetting indicator $\\hat{z}_{ij}^{test}$ for each pair.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d1213300-363b-467b-a262-17eee6c8072b",
                                    "requirements": "Code has been developed to evaluate the FLAN-T5_{3B} model fine-tuned on $(x_i, y_i) \\in D_R^{test}$ on each $(x_j, y_j) \\in \\hat{D}_{PT}$ using the Exact Match score, producing the ground-truth forgetting indicator $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c7f9626e-8b6b-43d9-abd9-cfe55be477ea",
                                    "requirements": "Code has been written to compute the F1-score for the frequency-threshold based forecasting method $g$ on $D_R^{test}$ by comparing the predicted forgetting indicators $\\hat{z}_{ij}^{test}$ with the ground-truth indicators $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "fb9a248b-e72c-4297-9dc3-5cabdf6a84cc",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "374d8588-f266-4c29-8154-678c7122ccaf",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "ae26b638-4880-4336-8bb0-91868c792323",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "758112fe-3a0a-454a-8965-b2aedf085f4e",
                            "requirements": "Code has been written to evaluate the frequency-threshold based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "da8ba158-a013-4bf2-aa4a-a433a55c07c2",
                                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{3B} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ca8d1897-1a31-402e-a537-20e6afc33a95",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a1aba794-8741-412d-9c9c-846b11e655a6",
                                    "requirements": "Code has been written to fine-tune FLAN-T5_{3B} with LoRA on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in Section 4.1, modifying only LoRA parameters, thereby creating $|D_R^{train}|$ separate updated models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "812a1fce-bdc9-425f-ad5d-bbea9b5a14ea",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "dae7c516-d30e-4115-a50c-233a49843304",
                                    "requirements": "Code has been written to compute the ground-truth forgetting binary indicator $z_{ij}$ by evaluating the LoRA-updated copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i) \\in D_R^{train}$ on the $j^\\text{th}$ sample from the filtered pre-training dataset $(x_j, y_j) \\in \\hat{D}_{PT}$ and grading it using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "216b1eef-64a3-4608-a118-a29d393ed4cd",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$ to determine a value for $\\gamma$ that maximizes the F1-score, as described in Section 3.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "9b7fffab-9fc8-40e4-8a2f-439c2bf1f135",
                                    "requirements": "Code has been written to fine-tune FLAN-T5_{3B} with LoRA on each $(x_i, y_i) \\in D_R^{test}$ using the hyperparameters in Section 4.1, modifying only LoRA parameters, thereby creating $|D_R^{test}|$ separate updated models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "e9f2c0bb-19d5-46c8-a4cd-364a81008625",
                                    "requirements": "Code has been written to apply the frequency-threshold based forecasting function $g$ to every sample $(x_i, y_i) \\in D_R^{test}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$, producing a predicted forgetting indicator $\\hat{z}_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2323f3fd-7c18-45eb-ab31-1417d3950cc0",
                                    "requirements": "Code has been written to evaluate each LoRA-updated copy of FLAN-T5_{3B}, fine-tuned on $(x_i, y_i) \\in D_R^{test}$, on the $j^\\text{th}$ sample from the filtered pre-training dataset $(x_j, y_j) \\in \\hat{D}_{PT}$ using Exact Match, producing a ground-truth forgetting binary indicator $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e7bc5616-150a-493a-b021-ef301a8eae47",
                                    "requirements": "Code has been written to compute the F1-score of the frequency-threshold based forecasting function $g$ on $D_R^{test}$ by comparing the predicted forgetting binary indicators $\\hat{z}_{ij}^{test}$ with the ground-truth indicators $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e1a0c0da-7371-4f57-ac29-905beb646406",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "e795de8f-f158-4648-8cd5-ec9b4a6bda14",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "495b2f92-044b-467f-9484-bcb55bf14b40",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "8e2b5109-be86-4072-9915-b9377ac37795",
                    "requirements": "Code has been written to evaluate the fixed-logit based forecasting method on all model, dataset and fine-tuning configurations present in Table 1.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "25bad3c1-c6df-4562-acf5-484a8558587e",
                            "requirements": "Code has been developed to evaluate the fixed-logit based forecasting method using BART0_{Large}, the P3 test set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "b9da911e-6df4-4968-8cbd-46d687121408",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "bac36a09-c57f-44d7-908b-ab0e70aea6dc",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "fa8fb85d-73d8-41da-b551-085cb3479f8d",
                                    "requirements": "Code has been written to fine-tune the head of BART0_{Large} on each $(x_i, y_i) \\in D_R^{test}$, keeping the remaining parameters fixed, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "1d7f7602-c30c-494e-a19e-3b72c553cbb2",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the logit-based forecasting model as described in Algorithm 2, where the encoding function $h$ is the final layer of the base BART0_{Large} model and $f_0$ is the base BART0_{Large} model, as described in Section 4.2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "3b02483b-6ccc-4d7b-8d55-3f2700b76fd0",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of BART0_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ae6ee867-6020-490a-b545-3686259d46de",
                                    "requirements": "Code has been written to compute the F1-score for the fixed-logit based forecasting method and BART0_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6ef0d9d7-b4a7-4ce1-a4b2-c6b69642af87",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "98ad5974-b78d-467c-9d91-5621347bb21e",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "6572edc0-4120-468a-b153-4cd16d588c3f",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "e77c118b-ca31-4dad-be2c-7f771c1ade8f",
                            "requirements": "Code has been developed to evaluate the fixed-logit based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "b4c462f0-4fed-447b-8aad-5c066352da56",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3ed62cd1-74f5-41cb-9147-4e746de81962",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6a33e8b2-b16a-4a42-afe0-1465fac30302",
                                    "requirements": "Code has been written to fine-tune BART0_{Large} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models, with all parameters being updated (i.e. none are frozen).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "84389cf1-c54e-4d6a-9056-f5b94025690c",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the logit-based forecasting model as described in Algorithm 2, where the encoding function $h$ is the final layer of the base BART0_{Large} model and $f_0$ is the base BART0_{Large} model, as described in Section 4.2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "746d6ff4-50d6-41e9-ad69-41ecdf5e0a53",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of BART0_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d513c27e-1bbe-4697-85de-ad494fd3ab27",
                                    "requirements": "Code has been written to compute the F1-score for the fixed-logit based forecasting method and BART0_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "50c69e68-9a30-4337-90b4-63c014ddc812",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "b9a9ece2-e8c4-4770-8041-ef041d208783",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "45637175-8a67-4482-bfd5-a7a6ffdb5b38",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "7dc225cb-747e-4738-9f8c-5f75c4dbe6af",
                            "requirements": "Code has been developed to evaluate the fixed-logit based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "846ecad6-6cf8-47cb-8c1e-ba31e5b57f82",
                                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{Large} and evaluated with the Exact Match score to create the dataset $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "aae7d581-a42d-4af2-841c-553a0531a275",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded with the Exact Match score to create the dataset of correct pre-training samples $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "334991f3-c87c-4cee-9092-f21103310d36",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{Large} on each $(x_i, y_i) \\in D_R^{test}$ using the hyperparameters specified in \"Section 4.1 -- Hyperparameters\", thereby creating $|D_R^{test}|$ updated models with only the heads parameters altered.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "f6f63fc9-e405-4906-a356-698343aaaa1d",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the logit-based forecasting model as described in Algorithm 2, where the encoding function $h$ is the final layer of the base FLAN-T5_{Large} model and $f_0$ is the base FLAN-T5_{Large} model, as described in Section 4.2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "978f6dc3-335d-4934-a634-c5cd24b59b85",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5c4608b0-ae19-48b6-865f-42526151e894",
                                    "requirements": "Code has been written to compute the F1-score for the fixed-logit based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "82c8aa04-3a87-486c-a729-4ce98ff32280",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "43bf6604-8bb0-4fc8-b809-a2aa00e73d6d",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "94650465-a011-42d8-92df-f6914a5e26f5",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "6800ac49-caf7-4099-bb80-afc879761776",
                            "requirements": "Code has been written to evaluate the fixed-logit based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "f053e70d-4634-4719-b9d8-9c1b1448ccc4",
                                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{Large} and evaluated with the Exact Match score to create the dataset $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "edf48032-0a2b-4b25-91a2-dab7b4d40345",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded with the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "de476f91-2cd2-4a9d-bae0-67c7c3db27b3",
                                    "requirements": "Code has been developed to fine-tune FLAN-T5_{Large} with LoRA on each $(x_i, y_i) \\in D_R^{test}$ using the specified hyperparameters in Section 4.1, to create separate updated models for each test example while only adjusting LoRA-specific parameters.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "35d51993-fa63-4189-ba15-2e33fc9bc019",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "fbae7478-32c8-45a9-8c86-1eda3d1a1110",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the logit-based forecasting model as described in Algorithm 2, where the encoding function $h$ is the final layer of the base FLAN-T5_{Large} model and $f_0$ is the base FLAN-T5_{Large} model, as described in Section 4.2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "1e9c8c93-28e6-4e5e-ac20-419cf5f487c3",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the FLAN-T5_{Large} model fine-tuned with LoRA on $(x_i, y_i)$ against $(x_j, y_j)$, and scoring with the Exact Match metric.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2695bb5f-712d-4263-9aa0-f01d4e1faa2f",
                                    "requirements": "Code has been written to compute the F1-score for the fixed-logit based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f2fd46d1-624c-4996-96eb-7d9edfa06260",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "4a8cd2ef-f3e3-4d32-8ed3-392e66816865",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "e8e80750-6feb-47ab-bccb-b4a023d49c5a",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "aaebc8b1-c380-49a7-8800-7682038cbf9d",
                            "requirements": "Code has been developed to evaluate the fixed-logit based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "5f146d19-5f0a-4839-867f-65453c35f949",
                                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{Large} and evaluate them with the Exact Match score to produce $D_R^{test}$, following the details in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d88aabf3-7613-4d8b-98e9-8da84794ee60",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large}, evaluating them with the Exact Match score to create the filtered dataset of correct pre-training samples, $\\hat{D}_{PT}$, as detailed in Section 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "0f6ce5ce-9784-4344-a51d-cb5cbc3aa1dd",
                                    "requirements": "Code has been developed to fine-tune the entire FLAN-T5_{Large} model on each $(x_i, y_i)$ in $D_R^{test}$ using the full fine-tuning approach described in Section 4.1, creating $|D_R^{test}|$ updated models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "c0294ff3-ddf6-4921-8b02-4af6a799b76b",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting indicator $\\hat{z}_{ij}^{test}$ using the fixed-logit based forecasting model as described in Algorithm 2, with the final layer of the base FLAN-T5_{Large} model serving as the encoding function $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "080e3fda-5d33-469c-9591-d5c963ea3c73",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$, and scoring with the Exact Match metric.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c80dd0b7-7074-442e-8cf7-0a09846f02e0",
                                    "requirements": "Code has been written to compute the F1-score for the fixed-logit based forecasting method with FLAN-T5_{Large} under full fine-tuning using the predicted and ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6cf949ba-e340-4507-8e24-06aa01037452",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "97a86919-cf1f-4dc4-9d80-71304535b021",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "0df21893-b2f4-433d-a8c4-24ed26f4322a",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "9e51e8fc-a2cf-4b33-bfe9-31195e773c5f",
                            "requirements": "Code has been written to evaluate the fixed-logit based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "e209131f-6910-46eb-a050-09e69a870887",
                                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{3B} and evaluated with the Exact Match score to create the dataset $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b9dfbe59-5b92-4ec9-ab6a-349fc0f3a43a",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded with the Exact Match score to create the dataset of correct pre-training samples $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ba41bec6-2023-4c2c-90bd-a1bde60c7bba",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{3B} on each $(x_i, y_i)$ in $D_{R}^{test}$ using the specified hyperparameters in \"Section 4.1 -- Hyperparameters\", freezing all other parameters, and thereby creating $|D_R^{test}|$-many separate models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "afdb6afc-8cd7-44a0-b988-e1011fb004a8",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the logit-based forecasting model as described in Algorithm 2. The encoding function $h$ is the final layer representation of the base FLAN-T5_{3B} model, as described in Section 3.2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "619f34b6-cd0e-4c9e-b761-9ef9bb0959ef",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting indicator $\\hat{z}_{ij}^{test}$ using the fixed-logit based forecasting model as described in Algorithm 2, with the final layer of the base FLAN-T5_{3B} model serving as the encoding function $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "b46bad55-1c68-47bb-acbd-e5c9a82e4119",
                                    "requirements": "Code has been written to compute the F1-score for the fixed-logit based forecasting method with FLAN-T5_{3B} under full fine-tuning using the predicted and ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e1dc81ce-b61c-4a56-8df9-0771e4a26735",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "4b6ee1a9-a50c-4866-8f0b-ee130cb73b09",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "7ae76633-2044-4458-811a-631799f27b9d",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "bf17c1f0-0ea8-4d29-b8f7-ef4ef79f48e3",
                            "requirements": "Code has been written to evaluate the fixed-logit based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "55fbeecf-8795-49b3-b8b3-a9af9e16e880",
                                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{3B} and evaluate them with the Exact Match score to produce $D_R^{test}$, following the details in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "bad62d40-a5dc-4afe-803e-783a4a0fa876",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B}, evaluating them with the Exact Match score to create the filtered dataset of correct pre-training samples, $\\hat{D}_{PT}$, as detailed in Section 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "cf0aa19d-12d8-4587-94ca-a2f6344a163a",
                                    "requirements": "Code has been developed to fine-tune FLAN-T5_{3B} with LoRA $(x_i, y_i)$ in $D_R^{test}$ as described in Section 4.1, creating $|D_R^{test}|$ updated models with only the LoRA parameters updated.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "838dad0b-eee7-4430-918b-4d968f0b716d",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "723ada6b-d58c-4d20-a62a-bfb146424f88",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting indicator $\\hat{z}_{ij}^{test}$ using the fixed-logit based forecasting model as described in Algorithm 2, with the final layer of the base FLAN-T5_{3B} model serving as the encoding function $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "bc747911-97e0-414a-8734-e3454efb0ee4",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$, and scoring with the Exact Match metric.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7015d677-3936-41e6-92ed-7bcac5c4af76",
                                    "requirements": "Code has been written to compute the F1-score for the fixed-logit based forecasting method with FLAN-T5_{3B} with only LoRA parameters updated using the predicted and ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "36539c8e-23e5-4750-bf4e-94ef7d5bcd37",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "fb8a9377-8b96-47b0-9720-df82f7baddb4",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "6e80a2b0-5d99-444d-9736-b09fac2951ca",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "54859896-df31-4912-a252-a165ce5e0e70",
                    "requirements": "Code has been written to evaluate the trainable logit based forecasting method on all model, dataset and fine-tuning configurations present in Table 1.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "57aa46f8-ffb4-411d-a7ee-ba2211a70a26",
                            "requirements": "Code has been developed to evaluate the trainable logit based forecasting method using BART0_{Large}, the P3 test set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "f27ffa70-bffa-45c0-9421-8d4d4d7eb18b",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ac9b7299-c71c-4e84-b2f8-ce1411bdb090",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "500108d6-51d2-444b-a617-7f1fcb5c839f",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "42305fe2-bf2f-4fd3-8448-85c4ff71117e",
                                    "requirements": "Code has been developed to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "c4ee6107-35dd-4f64-9644-27a7c441a4b4",
                                    "requirements": "Code has been written to fine-tune the head of BART0_{Large} on each $(x_i, y_i) \\in D_R^{test}$, keeping the remaining parameters fixed, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "d5f0be79-1af6-4585-8e29-b3db281ce39a",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "fc2de1d5-e896-442a-b601-9c2d6e3e3c87",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of BART0_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "cff8e9a1-bf96-4473-83ee-8fbda323ffb4",
                                    "requirements": "Code has been written to compute the F1-score for the trainable logit based forecasting method and BART0_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "83ea13ee-f8d5-4502-8274-fc586741cf0b",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "b8794e88-4e0c-41f6-bcf0-5d5e0ab344f2",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "bceed80b-62fc-47ad-9318-a50eecfef62b",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "d65b7001-5641-4733-b313-7384cec94c9f",
                            "requirements": "Code has been developed to evaluate the trainable logit based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "17824cf1-807f-4126-8def-430ab4d1c79c",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9a283ea6-2053-4429-8df8-2c1765d911ad",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9f0bcde1-1dca-42b0-b5a9-8140740e713b",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1fc4211f-515b-46b5-b81e-ac4d4e9151bb",
                                    "requirements": "Code has been developed to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "45125811-250d-4772-ae77-38f1ab68abed",
                                    "requirements": "Code has been written to fine-tune the entirety of BART0_{Large} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "9e028f66-cf6b-4889-8f51-48c8e33bca43",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2abcae14-795e-4c2d-bf5d-3f296c36bb2d",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of BART0_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4d0b29b6-7578-45e0-b409-3c0f0f3ce6f1",
                                    "requirements": "Code has been written to compute the F1-score for the trainable logit based forecasting method and BART0_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "92475709-0399-43ec-b1e8-1996219fb6c5",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "787b5787-4491-41a7-8ee0-db24ef65fb41",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "66563e30-bf2c-4842-a3fa-9604a4aeb26b",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "342afd8c-869d-4187-88ca-7989c7a406b5",
                            "requirements": "Code has been developed to evaluate the trainable logit based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "e0f644bd-f166-4dcb-9b24-b47ceb2a29e1",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "211fce06-637c-48e5-8dc0-7fc95fcd95c6",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "cf2d3672-3fda-4049-93c1-f878dc949dc6",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "aabe3c2c-7588-407a-ac0a-99c2bb535179",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "ca3afa12-1cfa-4b9c-9731-136c71a34b7f",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{Large} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "da66880b-d4e7-47b4-9d3e-f9895265cde2",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "9b2f3b3d-6f16-40d7-b91b-83d72bc45aa9",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b71f50c9-a3c1-4db5-8334-060a5690f052",
                                    "requirements": "Code has been written to compute the F1-score for the trainable logit based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4bce647e-1c7b-4f32-b885-37dc0f8c33d0",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "4344d14e-d49f-41b1-80be-c4bd7495cb42",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "8d872a02-e4b3-4633-a46a-ece418a5aed1",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "97039a3f-df76-42fd-bc69-452273b5ecf8",
                            "requirements": "Code has been developed to evaluate the trainable logit based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "22a21012-ec86-4f86-ab74-d009ea1cba58",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "de6e7d9b-5d08-4fe9-9dad-3f0e4b14784d",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7d34963b-0219-46f2-9782-fe27945a6673",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d82b66ce-412e-452c-a444-57349b104df5",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "e17bd065-8ee3-4a4b-bdca-f7cbcb79aea9",
                                    "requirements": "Code has been developed to fine-tune FLAN-T5_{Large} on each $(x_i, y_i) \\in D_R^{test}$ using the LoRA adaptation to model parameters, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "884236f3-00f5-4a3a-af14-910de658e11b",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2a872b27-0b80-42fc-811d-b884a79ab07b",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "3f9fb8e3-861b-43e1-8231-4163790d4423",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c0ab94d8-e6a1-4680-b9d6-83fbe4da056c",
                                    "requirements": "Code has been written to compute the F1-score for the trainable logit based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f413a3b1-f4a8-4779-8251-4de3684d5977",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "79469f47-610a-4024-9bda-e0bdb2d53e02",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "c1ca4fce-0b03-4294-9309-171d5610187d",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "0805f7c8-badb-4334-a754-0dfd2d8c7924",
                            "requirements": "Code has been developed to evaluate the trainable logit based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "6e17b020-9c97-4b17-bc46-d569a706d097",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "16d8741a-66ed-4f2c-bb25-0d6eccc4de4f",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "07caba9e-481b-4353-ae0b-219bc5807d90",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2efd9093-545c-4c33-89ec-8e3f25c2fe66",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "4d7d66c1-4295-49c8-82ec-2c8fe292c731",
                                    "requirements": "Code has been written to fine-tune the entirety of FLAN-T5_{Large} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "be8df16c-1971-47ed-b189-f69d0a039b86",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "60808cdc-c5bf-467f-a571-12db1f47381e",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1920f82f-c7b9-450f-9b35-eaf2dd7592f4",
                                    "requirements": "Code has been written to compute the F1-score for the trainable logit based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6bae429d-cfc9-4f28-abd3-0fb4ff806df2",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "c4919796-190a-42dc-b51a-d9277dc1baa4",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "9b7b723d-1152-4e88-8469-cbad0874906b",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "3757cc82-bc3d-452a-ab91-67f7711d2b1e",
                            "requirements": "Code has been developed to evaluate the trainable logit based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "e78b32fb-c776-405d-928a-de12caa772fb",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{3B} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "06856a86-c063-47d8-bca5-6c7bee7235bf",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8e82d920-461c-410a-9a74-1fa12d940c30",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4b3ed262-de8b-4568-be6d-92b45fec6ee3",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "c4330280-52f9-438b-86bb-cb62510694dd",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{3B} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "e8d503f4-a060-489f-ac85-d37dc518d199",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "cb7b00f6-5f81-46ec-a68e-54d997763301",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "dcf6ee4c-93c5-4cb8-8d3e-ccc373420bc0",
                                    "requirements": "Code has been written to compute the F1-score for the trainable logit based forecasting method and FLAN-T5_{3B} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "32968e39-2644-4568-b44f-2814acbab7b7",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "74178f66-e84b-4551-8e28-817fbda60012",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "ecbcf181-5941-4b18-9f5d-acf94218542f",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "4e514475-7b1b-4596-9a01-16a35c4eaac2",
                            "requirements": "Code has been developed to evaluate the trainable logit based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "8792d15b-25e4-4777-b5e3-61f28f88ed9e",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{3B} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "82bfcff1-66af-4061-ad13-5da6f0895880",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "40d11a81-42a3-4c0a-95f0-401fcde73f2e",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2541e67b-6a49-4a5a-af08-3c9700575c27",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "320e6cc4-8036-48ab-b9d4-40adf0768089",
                                    "requirements": "Code has been developed to fine-tune FLAN-T5_{3B} on each $(x_i, y_i) \\in D_R^{test}$ using the LoRA adaptation to model parameters, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "912f6664-ef7d-4052-9fb9-4b99bd7a8d6a",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "161bbe48-17f9-471f-84d3-e932788ff642",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8e1ee458-4c40-40ca-afa2-879c2fb72398",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "45b0cace-2885-42a7-bf2b-bd8948f98b5a",
                                    "requirements": "Code has been written to compute the F1-score for the trainable logit based forecasting method and FLAN-T5_{3B} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b053a9e8-8aee-4b20-815e-dbe8ca49e44a",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "1a0450ac-48a1-471a-ab1a-01d936fabe8a",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "5c5ef034-4795-4174-9622-bdbe61c5b0c0",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "529b794e-c4ba-477c-8f63-6cde9a9f8377",
                    "requirements": "Code has been developed to evaluate the representation based forecasting method on all model, dataset and fine-tuning configurations present in Table 1.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "d1079f1b-778f-4c25-8b88-065ade025c65",
                            "requirements": "Code has been developed to evaluate the representation based forecasting method using BART0_{Large}, the P3 test set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "87cee42e-29cd-4a2d-8041-38de4624c221",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4b3bcf6e-4a24-40b6-a36b-5add495f4101",
                                    "requirements": "Code has been written to fine-tune the head of BART0_{Large} on each $(x_i, y_i) \\in D_R^{test}$, keeping the remaining parameters fixed, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "a3c47bb2-2dce-4e31-be88-3672405d01c2",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e086b968-69fc-4550-9b7b-208890bd1e60",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of BART0_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "22368542-ce9f-492a-91af-48e2bcc591a8",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "efdfced2-6624-4784-9fdc-f8a6330c61e2",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "03436229-eae5-448f-a2bd-42c0a39c4764",
                                    "requirements": "Code has been developed to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2945f439-bad1-4cfb-ad95-b229e1ebdd5c",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the representation forecasting model as described in Algorithm 4 and the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "1a7e4b7f-9e8c-400a-bb13-a9bc2ffa92ed",
                                    "requirements": "Code has been written to compute the F1-score for the representation based forecasting method and BART0_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3b4bd412-b7a2-4e8b-816f-95efe9fb5b19",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "8a0852c0-879c-4c01-baf1-c1ae5dde4ecd",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "1132c8b2-d890-45f6-9097-9370de47b867",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "56f3fd40-dfaa-473f-9fc4-cdbf815e1ff6",
                            "requirements": "Code has been developed to evaluate the representation based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "9e9f8a57-b914-4e9c-acb1-312ed505032b",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "234ab267-fb24-45ec-b538-c5ab073444d2",
                                    "requirements": "Code has been written to fine-tune the entirety of BART0_{Large} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "d06f7ce9-7daa-4d5a-a4ba-f9b481cbda99",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of BART0_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "63a8380a-13ef-4c0f-8e04-d5bbaf18577c",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "afba0931-4303-45f3-af6d-c441f8bd4709",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c3170323-347b-4c25-ae38-482bc26acabb",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "bfe35a39-16bc-41d1-b856-788b5e143bb5",
                                    "requirements": "Code has been developed to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "87404145-140f-4233-b1b1-35ab2173c20b",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ by implementing the representation forecasting model as described in Algorithm 4 using the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "d329ca84-346c-4614-a59e-0513e6eb923c",
                                    "requirements": "Code has been written to compute the F1-score for the representation based forecasting method and BART0_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3576ff2c-aa02-49b6-a9fe-b59dfcf4e237",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "fb859942-8f9e-4240-8f85-0d1907f33d3f",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "daa9b56e-a4da-44d9-b6e9-a128c7b6b8cc",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "fcd920c2-d61b-42a0-a255-f1968bb26533",
                            "requirements": "Code has been developed to evaluate the representation based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "18cc5bde-766f-47f9-99e1-673a59a88490",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c2c626f2-3bb6-406c-8618-d8515342455d",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{Large} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "67fd08da-20ac-4467-b7c7-401d55007537",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "75dc26c3-0478-43b0-94fb-40057dc18d80",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "17dd529d-df49-4d42-af97-5a7dbdac7611",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "26b144ee-fb28-4c54-aa2f-9025c33ef5c1",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "07e551cf-dc3e-4a65-9c64-6b2c10d755a1",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "18cd87bc-7b28-4827-b548-c87deb89903e",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ by implementing the representation forecasting model as described in Algorithm 4 using the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "0e369b7c-3c17-47b9-9c9a-cf71c19dc7ba",
                                    "requirements": "Code has been written to compute the F1-score for the representation based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "06ff2e56-b8e4-49e2-a55e-00a08df3e4f8",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "9e78c5c1-8224-48e9-b285-264f140c7d68",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "a834f0ee-e1ad-4936-b660-16fe0297ca4c",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "b0b2f5e2-448c-4606-9775-22d2ecb3a4d3",
                            "requirements": "Code has been developed to evaluate the representation based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "9c2d1ac4-a3f9-40ae-bf49-f25f4e376316",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d0d8c6a3-477f-4e4a-9e7d-c783f1d9712c",
                                    "requirements": "Code has been developed to fine-tune FLAN-T5_{Large} on each $(x_i, y_i) \\in D_R^{test}$ using the LoRA adaptation to model parameters, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "06406544-f297-4e01-8981-16dec5b0f99c",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "05a1be46-3f8a-43fd-aa52-1fab65cfc587",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "33aed2ef-af78-4b8a-9448-8c8819dff569",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ef9d8d75-b51d-49d7-bb22-b32709183f11",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c2552ea4-9ade-4b0c-9a1b-696b72d9d163",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2227fe4c-7b57-42d5-8303-d778d39db3de",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "70c71479-8a4a-4d76-a276-7bcf228f4913",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ by implementing the representation forecasting model as described in Algorithm 4 using the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "3fc9f83b-2c04-4407-9d17-be09be90991a",
                                    "requirements": "Code has been written to compute the F1-score for the representation based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7418a0e8-904c-4710-8ae0-4602623b2498",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "025df226-c25d-4516-914a-bb4d721e8f5e",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "8a250fa7-c9aa-4639-895f-252b44e3137e",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "5c69965c-3309-4028-9a53-59dfd8c24b53",
                            "requirements": "Code has been developed to evaluate the representation based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "46cfe617-7dca-4754-bdfa-576abfdf4aff",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b48f6689-081c-4f6c-9d25-384bfd5c371c",
                                    "requirements": "Code has been written to fine-tune the entirety of FLAN-T5_{Large} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "370c87c6-94da-45a7-bd86-6c0328bcfc02",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "20dde124-2c23-42a6-9600-02c16fa8116f",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "128bfaef-93b9-443a-9053-e079fc6bed99",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "10adb80d-6568-472a-8762-48ee498af4e1",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "05fc0593-2186-47ae-be57-a8b85cfe61e7",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "68fa1652-3dc1-4073-8f3f-e6710928ca5d",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the representation forecasting model as described in Algorithm 4 and the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "964edbae-e585-4baa-b899-1dff4ff4a697",
                                    "requirements": "Code has been written to compute the F1-score for the representation based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "bb1676c6-e5f0-40a3-98a3-4209500e8ffa",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "8a8e2979-3a7b-4f2a-a366-8721b2170612",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "ebb8ca52-cab8-4b1f-b5d3-2cb8e689f3a9",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "54f89d36-f158-44c7-9dcf-54e620910090",
                            "requirements": "Code has been developed to evaluate the representation based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "ea96d790-b30c-467b-89d7-cb86564ddc5e",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{3B} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ce9ba178-3185-44e3-a0cb-f604ac865297",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{3B} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "4b36fa4c-f5f2-440b-b84b-c747c5af8f0c",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "39f45fbe-6df3-48d3-9f53-71f65a11549e",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d67e736e-52b3-404a-9c01-9998d4e62396",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "702b36ce-16eb-4c64-99d1-0b21256aefb5",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "da085143-5b4f-4b57-9ed1-44708b910013",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "9a9fb048-fbc2-4401-bca4-d908b714c2f8",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ by implementing the representation forecasting model as described in Algorithm 4 using the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2c56e8c4-0c05-4083-a79b-93ac825df9c9",
                                    "requirements": "Code has been written to compute the F1-score for the representation based forecasting method and FLAN-T5_{3B} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ccfb1ee4-aeb5-4722-a1dc-1f4f22530d19",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "e3b6de07-7775-4dd7-9380-ab321b356aa7",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "e53b2542-905b-49a0-8bad-266ee66ad0fb",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "cd696c5c-890f-4edc-896f-9bae4cbe04c4",
                            "requirements": "Code has been developed to evaluate the representation based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "5bb66e33-37e7-4f03-8069-3c9164131638",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{3B} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "54c359b4-1701-4016-84e9-cb1de188c93d",
                                    "requirements": "Code has been written to fine-tune FLAN-T5_{3B} on each $(x_i, y_i) \\in D_R^{test}$ using the LoRA adaptation to model parameters, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "ce2bdd3a-dcb1-4f2c-9272-8ae16bc88bd0",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "26003fa4-4f57-4e13-b51b-fb5dd3ac140a",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f69d9d70-22b0-476a-89e1-8450c9114e93",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b98aed0f-8d3b-409a-8a33-244b56af6b73",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b5968b1c-bd33-4e1b-8cc9-2214bacf8550",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "9131a08e-ad38-4b29-aa93-987657ff4070",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "b124446f-d27f-4d81-9631-bbf503043071",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ by implementing the representation forecasting model as described in Algorithm 4 using the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "a62843fe-91fa-46b2-b7c8-902bd4179cd1",
                                    "requirements": "Code has been written to compute the F1-score for the representation based forecasting method and FLAN-T5_{3B} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "760b9d8a-1244-4690-8bea-06dbcbce755c",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "b173c0cf-7768-4a82-a697-ddf5f14a450b",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "d6e9c182-de66-4400-a811-0a376c2cdddf",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "3d6f0000-781c-44d3-b898-cf9eef7e462b",
                    "requirements": "Code has been developed to evaluate the prior-free representation based forecasting on all model, dataset and fine-tuning configurations present in Table 1.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "6aa26d51-417f-4628-8cb2-eeac7df8e7f0",
                            "requirements": "Code has been developed to evaluate the prior-free representation based forecasting method using BART0_{Large}, the P3 test set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "d0d51b0b-d689-46ce-9780-3c45f0edb222",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3294c5ea-2c7c-4363-ab58-3742ef8ba3c3",
                                    "requirements": "Code has been written to fine-tune the head of BART0_{Large} on each $(x_i, y_i) \\in D_R^{test}$, keeping the remaining parameters fixed, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "37cc2b5f-a0c6-4425-9779-d999b2888938",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of BART0_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a8acf39d-a711-47c0-ac6a-5a6220c531a3",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e5a4c777-d9bd-46d3-9bbe-d3c40bb2c734",
                                    "requirements": "Code has been written to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F, though without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "bde68381-264f-4a9f-bea5-dda7ec5a5db2",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the prior-free representation forecasting model as described in Algorithm 4 using the learned encoder $h$ and without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "b8f4f845-2da0-41ad-88a7-8acc81251a9d",
                                    "requirements": "Code has been written to compute the F1-score for the prior-free representation based forecasting method and BART0_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3fe6b400-f90e-4c5f-a90a-f3d5d8dec6c1",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "3f7d8e6a-d551-46ea-aa90-c5f5c78ca790",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "e969ba1d-2310-4e02-b731-95ae1278a6b0",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "0a68f8bf-20f3-4e4a-8e54-69ca3022f7de",
                            "requirements": "Code has been developed to evaluate the prior-free representation based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "65957caa-a6a9-4f48-9133-d7e3a41b0b09",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b17ec18c-a17c-4805-9f64-79e4914fb160",
                                    "requirements": "Code has been written to fine-tune the entirety of BART0_{Large} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "70598095-6493-41e2-a4b0-bb8c9974b790",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of BART0_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c6c521e9-769d-4382-ba81-197409c86d21",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "14a499b1-66c7-4d83-8c1d-d5e43b42c6c7",
                                    "requirements": "Code has been written to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix, though without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2ff83e17-0dab-4104-af72-0d0021e625b3",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the prior-free representation forecasting model as described in Algorithm 4 using the learned encoder $h$ and without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "b16ebf02-9413-44d8-96bf-a550c6857a78",
                                    "requirements": "Code has been written to compute the F1-score for the prior-free representation based forecasting method and BART0_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "105303ed-52c5-4a95-916a-3b4aeb61613b",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "8f819b53-2278-461b-8d5f-e99f8cc1c81d",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "351f4a92-3819-48bc-b5e5-87cfe8b64683",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "0bb1ed7d-dd63-44fa-840c-a58628b6b675",
                            "requirements": "Code has been developed to evaluate the prior-free representation based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "013f84cf-41a5-4eb5-92e9-7fc8aeb84a31",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c2216682-79b3-43ce-8cb0-bd7d2852b048",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{Large} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "c5f31493-5876-458a-8f92-bd7ffade6d3b",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8af6822b-1dc7-4228-b248-bccb30f7b2bb",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "cb26630e-5657-417f-b9d1-0badb9fe6556",
                                    "requirements": "Code has been written to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F, though without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "ee0315a5-01a9-4664-b083-4d6d4faedd0f",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the prior-free representation forecasting model as described in Algorithm 4 using the learned encoder $h$ and without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "8feb9575-35a2-41b8-a059-123df6b08c0a",
                                    "requirements": "Code has been written to compute the F1-score for the prior-free representation based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f33aac44-11a8-42a5-babc-38dcc4fe6288",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "1b552c52-6051-47be-bf19-4029438e4a2c",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "8d18730b-f63c-4c73-8a08-027185b4f4f0",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "b582af06-5c76-4f51-97c3-9bd38cb82e2d",
                            "requirements": "Code has been developed to evaluate the prior-free representation based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "d0ff95b6-fe8c-41f5-9276-36a87897098b",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1e3f51cb-7c6a-4608-8bbe-d0701eee659e",
                                    "requirements": "Code has been developed to fine-tune FLAN-T5_{Large} on each $(x_i, y_i) \\in D_R^{test}$ using the LoRA adaptation to model parameters, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "530139c3-dec2-4995-9220-abd70433da77",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "c8f30ae2-689e-4ef2-9a51-68b7f0996bc6",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d728839d-53c9-4d64-9caf-2009e9177831",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "bdca81d2-542c-442d-b81f-6203b1c5b057",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F, though without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "d4a6677b-e075-4460-beff-9aab4b65c513",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the prior-free representation forecasting model as described in Algorithm 4 using the learned encoder $h$ and without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "7a4f577e-4b5f-453d-bc98-cf13ee96bba9",
                                    "requirements": "Code has been written to compute the F1-score for the prior-free representation based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "856291d8-f1a9-4cef-bd42-451f851e34d5",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "7c4e38d6-a926-4ffe-87ca-ffeb6fd3637d",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "9af8ec57-42b4-4c87-812b-dbf7929ee347",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "79d5f925-c459-4166-883d-9fc985595efa",
                            "requirements": "Code has been developed to evaluate the prior-free representation based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "0ef5d18e-3018-4d33-b712-55a6c2821352",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d17d2a39-7cee-4aca-9fc3-5cc303aa2cdd",
                                    "requirements": "Code has been developed to fine-tune the entirety of FLAN-T5_{Large} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "1294ac14-7a5f-4c45-be96-0b1053cf389f",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "da3b1c88-c843-4b4a-a34a-c4c8ec42b908",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5e10455a-c362-4039-bb03-279e2f90c906",
                                    "requirements": "Code has been written to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F, though without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "b0659e93-9112-4a2d-8e78-7a32e487e42e",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the prior-free representation forecasting model as described in Algorithm 4 using the learned encoder $h$ and without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "f8d09d08-b88a-4c26-8116-9570c5abf3ba",
                                    "requirements": "Code has been written to compute the F1-score for the prior-free representation based forecasting method and FLAN-T5_{Large} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1858a069-31db-420c-9914-6456755f5256",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "b23610a8-7341-4775-a23f-e20adc179f18",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "fb53b556-bbaf-4331-b84f-2da103b1b4cc",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "b4c326d6-e677-4f38-b695-bf9f75e027d2",
                            "requirements": "Code has been developed to evaluate the prior-free representation based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the head-only fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "fb5b99b1-597a-4424-a00e-1b42e614cbe4",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{3B} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3a22e846-d40a-44ba-a1cd-10430eeedd76",
                                    "requirements": "Code has been written to fine-tune the head of FLAN-T5_{3B} on each $(x_i, y_i) \\in D_R^{test}$, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "9dbefa4d-92dd-4296-8ede-a83ef34bf917",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "74515d6c-d6f6-4391-b9cb-07d8920790bf",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "0c1e1c80-f73e-4495-a16b-b94bd1d25199",
                                    "requirements": "Code has been written to train the encoding function $h$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F, though without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "8aeafacd-658d-467f-88ab-ef2c89e3b38c",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the prior-free representation forecasting model as described in Algorithm 4 using the learned encoder $h$ and without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2b0392f5-be04-4b26-9385-8b051860f6a1",
                                    "requirements": "Code has been written to compute the F1-score for the prior-free representation based forecasting method and FLAN-T5_{3B} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "01194e0a-666e-4ec9-af49-fbe32dfea1bc",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "5822cb07-fb1c-4ac1-8e32-777a25eb3495",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "79d46f4d-0fd9-49c9-b0a5-bb60e238017f",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "91b1b5de-f7f0-47aa-a0e1-bbea8e9b502e",
                            "requirements": "Code has been developed to evaluate the prior-free representation based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "958eba68-515a-4dd7-a2e6-3232071af901",
                                    "requirements": "Code has been written to generate predictions on the test set of the MMLU dataset using FLAN-T5_{3B} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f100d158-8396-4707-8d35-12f0cc1abaea",
                                    "requirements": "Code has been written to fine-tune FLAN-T5_{3B} on each $(x_i, y_i) \\in D_R^{test}$ using the LoRA adaptation to model parameters, creating $|D_R^{test}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "cd2e0b25-85e4-4777-9b75-7a15e2031d75",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "7ea3194e-cb99-481d-ba62-4af4316b80ca",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a956566b-6762-4e19-a4d3-21a57eba82f5",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a5dbb412-beda-4b13-b6c9-6618b3a01416",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F, though without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "35cf58a8-4f44-40ad-bda9-b09834ab1d53",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the prior-free representation forecasting model as described in Algorithm 4 using the learned encoder $h$ and without the bias term $b_j$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "6570d5d2-8ea4-459d-9a49-efb59c48109e",
                                    "requirements": "Code has been written to compute the F1-score for the prior-free representation based forecasting method and FLAN-T5_{3B} using the predicted and the ground-truth forgetting indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f5a49a4c-9cab-40e9-9a56-8511985582fa",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "2c371d3a-2299-4d86-bea8-38b3514658fa",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "2b7a75ff-d655-455d-90fd-a8dfb72d1f88",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "83a4f7cb-340c-461c-85c0-d7ccdc5f0953",
                    "requirements": "All code necessary to reproduce the results shown in Table 1 has been executed and the F1-scores for all model, dataset and fine-tuning configurations have been recorded.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "78c3588a-60a8-4932-857e-3e49b02f5063",
                            "requirements": "The code to evaluate the frequency-threshold based forecasting method on all model, dataset and fine-tuning configurations present in Table 1 has been executed and the F1-scores have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "c1c05bb0-74f1-41aa-9217-2c0ab7d05a4c",
                            "requirements": "The code to evaluate the fixed-logit based forecasting method on all model, dataset and fine-tuning configurations present in Table 1 has been executed and the F1-scores have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "6287ddc2-cce8-4ff2-b24a-2e3ab1de81e1",
                            "requirements": "The code to evaluate the trainable logit based forecasting method on all model, dataset and fine-tuning configurations present in Table 1 has been executed and the F1-scores have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "58142e07-7a09-4e88-8f6d-dbba05dff9c4",
                            "requirements": "The code to evaluate the representation based forecasting method on all model, dataset and fine-tuning configurations present in Table 1 has been executed and the F1-scores have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "f57935fb-5c1e-405e-93b1-8511dcb5bf6d",
                            "requirements": "The code to evaluate the prior-free representation based forecasting method on all model, dataset and fine-tuning configurations present in Table 1 has been executed and the F1-scores have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "6de1c6b2-9fef-4417-81ed-a1d3788bae85",
                    "requirements": "The recorded F1-scores match those presented in Table 1.",
                    "weight": 2,
                    "sub_tasks": [
                        {
                            "id": "347247f5-4fd3-4f10-9de6-90389da50239",
                            "requirements": "The recorded F1-scores show that the representation based method has the highest F1-score for all models, dataset and fine-tuning setups, except for the head of FLAN-T5_{Large} fine-tuned on MMLU, where the fixed logit based forecasting method performs best.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Logging, Analysis & Presentation"
                        },
                        {
                            "id": "9d19418f-ad74-4bcc-8817-7a8c0acfcbb4",
                            "requirements": "The recorded F1-scores show that removing the frequency prior term from the representation based forecasting method reduces the average F1-score for all model, dataset and fine-tuning setups.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "897473fd-a20b-4750-8102-6a861b7fc9d6",
                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using the BART0_{Large}, FLAN-T5_{Large} and FLAN-T5_{3B} models.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "1f7db427-1522-4d80-9098-1ea8004c37f4",
                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using the FLAN-T5_{Large} and FLAN-T5_{3B} models.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "a2aef4a4-c7a1-47d2-b110-6af531c92547",
                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "8643827f-c673-445a-a9a7-f5b756b33b73",
                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$ sets for each model.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "2c03ad09-0e6c-4189-8b05-d0bcad64986a",
            "requirements": "Figure 3 has been replicated.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "10717b81-59ea-40fb-a095-075802e66ec9",
                    "requirements": "Code has been written to generate predictions on the MMLU validation set using FLAN-T5_{Large} and graded using the Exact Match score to create the datasets $D_R^{train}$ and $D_R^{test}$, as described in Section 4.1.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "a245f773-1462-4f44-a461-449f9d78ee1e",
                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "7950e842-b097-447e-89da-95853f866cd7",
                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "8c442be2-44bb-4357-b68f-c0c016a4f38d",
                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "2723c720-6cc7-4abb-b191-3c554a09b81b",
                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "9a70d6c0-8911-4453-8e00-2c7c2443fbd9",
                    "requirements": "Predictions have been generated on the MMLU validation set and graded using Exact Match score to create $D_R^{train}$ and $D_R^{test}$. Predictions have been generated on $D_{PT}$ and graded to create $\\hat{D}_{PT}$.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Execution",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "a23d9d0e-d0bf-4292-9105-43f127fa8b89",
                    "requirements": "Code has been developed to fine-tune the entire FLAN-T5_{Large} model on a random subset of $D_R^{test}$ of at least 40 samples using the hyperparameters in \"Section 4.1 -- Hyperparameters\", altering all parameters and fine-tuning on one sample at a time.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Experimental Setup"
                },
                {
                    "id": "13f431f2-8e41-4cf3-a370-d11ddaf65c49",
                    "requirements": "Code has been developed to evaluate the copy of FLAN-T5_{Large} trained on $t$-many samples from $D_R^{test}$ on $(x_j, y_j) \\in \\hat{D}_{PT}$ using the Exact Match score, producing the ground-truth forgetting binary indicator at each time step $t$: $z^{t}_{ij}^{test}$.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "8b5a0232-b699-4b70-90a8-87929dca33b6",
                    "requirements": "The FLAN-T5 model has been fine-tuned on a subset of $D_R^{\\text{test}}$ with at least 40 samples, and the forgetting binary indicators $z_{ij}$ have been computed by evaluating fine-tuned model copies on $\\hat{D}_{PT}$",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Execution",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "c63d89a7-91ec-488b-96c9-3beddd75135f",
                    "requirements": "Code has been implemented for reproducing the results of Figure 3 for the frequency-threshold based forecasting method",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "4e2f910c-564f-49e1-b8ce-525159a033c5",
                            "requirements": "The frequency-threshold based forecasting function $g$ has been developed, as described in Section 3.1.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "1c0c6161-e14f-4882-be7f-0685f68d2239",
                                    "requirements": "Code has been written to fine-tune the entire FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", altering all parameters, thereby creating $|D_R^{train}|$-many models.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "9bc4392b-86be-4283-9c79-faa9eb1f9091",
                                    "requirements": "Code has been written to compute the ground-truth forgetting binary indicator $z_{ij}$ by evaluating each fully fine-tuned copy of FLAN-T5_{Large} on $(x_j, y_j) \\in \\hat{D}_{PT}$ using the Exact Match score, as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e14969cd-5ac6-4364-887f-f1a2a0ffbc21",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "7d71d787-eeed-446f-9bbf-7d968d460dbf",
                            "requirements": "Code has been written to apply the frequency-threshold based forecasting function $g$ to each sample $(x_i, y_i) \\in D_R^{test}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ to produce a prediction $\\hat{z}_{ij}^{test}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "eb488a54-1b9a-4859-ac97-6679e8b545a3",
                            "requirements": "Code has been written to compute the average F1-score for each time step using $\\hat{z}_{ij}^{test}$ and $z^{t}_{ij}^{test}$, and by computing the running average with $\\frac{1}{T} \\sum_{t=0}^{T} \\text{F1-score}_t$ where $T$ is the current time step.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "26324783-507a-4938-ade7-c7f9bf0b8f35",
                            "requirements": "Code has been written to compute the average precision for each time step using $\\hat{z}_{ij}^{test}$ and $z^{t}_{ij}^{test}$, and by computing the running average with $\\frac{1}{T} \\sum_{t=0}^{T} \\text{Precision}_t$ where $T$ is the current time step.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "dd9d5e82-8577-43bf-9a03-429837f8bc26",
                            "requirements": "Code has been written to compute the average recall for each time step using $\\hat{z}_{ij}^{test}$ and $z^{t}_{ij}^{test}$, and by computing the running average with $\\frac{1}{T} \\sum_{t=0}^{T} \\text{Recall}_t$ where $T$ is the current time step.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "b18e51eb-fe59-4ca6-847e-95af64550cc2",
                    "requirements": "Code has been implemented for reproducing the results of Figure 3 for the trainable logit based forecasting method.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "eca38b73-9c36-4769-83c9-e0f0e1483411",
                            "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "0d5cda97-83aa-4998-acb6-60b822068604",
                            "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "38df20bf-4ad8-4a1b-81e2-6ce8fedb814e",
                            "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "c1ffc8e0-d94f-4ea7-9e34-b5f70bbdfd1e",
                            "requirements": "Code has been written to compute the average F1-score for each time step using $\\hat{z}_{ij}^{test}$ and $z^{t}_{ij}^{test}$, and by computing the running average with $\\frac{1}{T} \\sum_{t=0}^{T} \\text{F1-score}_t$ where $T$ is the current time step.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "53bd90ee-9c0f-42fd-be5f-f44acde5aae3",
                            "requirements": "Code has been written to compute the average precision for each time step using $\\hat{z}_{ij}^{test}$ and $z^{t}_{ij}^{test}$, and by computing the running average with $\\frac{1}{T} \\sum_{t=0}^{T} \\text{Precision}_t$ where $T$ is the current time step.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "939264d2-05cb-435c-b8f6-dc94a7ba0fe7",
                            "requirements": "Code has been written to compute the average recall for each time step using $\\hat{z}_{ij}^{test}$ and $z^{t}_{ij}^{test}$, and by computing the running average with $\\frac{1}{T} \\sum_{t=0}^{T} \\text{Recall}_t$ where $T$ is the current time step.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "44c300d0-38f1-43f0-a612-bfb1ec67cf55",
                    "requirements": "Code has been implemented for reproducing the results of Figure 3 for the representation based forecasting method.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "5ce6f8b7-e14a-41ad-8119-6fd916dc3fa1",
                            "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "f8bbf8fd-b52a-4a96-98fa-b4c5dab38627",
                            "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "0068d95f-c9a8-4598-9a54-35e2cdef7b4b",
                            "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "4d85d494-8bd5-4297-9510-99bf1a59ecf2",
                            "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the representation forecasting model as described in Algorithm 4 and the learned encoder $h$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "d4e696f2-996c-432a-89bf-dca0417291d3",
                            "requirements": "Code has been written to compute the average F1-score for each time step using $\\hat{z}_{ij}^{test}$ and $z^{t}_{ij}^{test}$, and by computing the running average with $\\frac{1}{T} \\sum_{t=0}^{T} \\text{F1-score}_t$ where $T$ is the current time step.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "e3d1b0cc-36bf-4447-a997-b28ed8444ef5",
                            "requirements": "Code has been written to compute the average precision for each time step using $\\hat{z}_{ij}^{test}$ and $z^{t}_{ij}^{test}$, and by computing the running average with $\\frac{1}{T} \\sum_{t=0}^{T} \\text{Precision}_t$ where $T$ is the current time step.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "97bdee8b-084c-4af3-b855-ed15e28b1052",
                            "requirements": "Code has been written to compute the average recall for each time step using $\\hat{z}_{ij}^{test}$ and $z^{t}_{ij}^{test}$, and by computing the running average with $\\frac{1}{T} \\sum_{t=0}^{T} \\text{Recall}_t$ where $T$ is the current time step.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "aa20fe19-5494-45c2-8d51-5120bc95afc4",
                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting models using the FLAN-T5_{Large} model.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "15743e41-ab32-4723-ae12-2c03070d097a",
                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using the FLAN-T5_{Large} model.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "5ea077d2-a232-4f30-aab9-54b8ae2849e9",
                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "869c0d87-f9a9-42fc-b295-59dc3ddbe32a",
                    "requirements": "The running average of the F1-score, recall and precision has been computed and recorded for each time step using $z_{ij}^{t,\\text{test}}$ for the frequency-threshold, logit-based and representation-based forecasting methods. For a given time step $T$, the running average is defined as $\\frac{1}{T} \\sum_{t=0}^{T} \\text{Metric}_t$ where $\\text{Metric}_t$.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Execution",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "87afe526-6182-43a7-8282-8af82a2173a0",
                    "requirements": "The recorded F1-score, recall and precision metrics match those presented in Figure 3.",
                    "weight": 2,
                    "sub_tasks": [
                        {
                            "id": "3f8ed9c9-84f3-4fba-ac6b-27b59763e60f",
                            "requirements": "The recorded running average F1-score decreases over time for the frequency-threshold, logit-based and representation-based forecasting methods.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Logging, Analysis & Presentation"
                        },
                        {
                            "id": "cca26cd1-2627-44a3-b715-ada1d46dbc9c",
                            "requirements": "The recorded running average precision roughly increases over time, peaks, then is relatively stable over time thereafter (i.e. all deviations from the peak are < 0.1 in magnitude) for the frequency-threshold, logit-based and representation-based forecasting methods.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "b4d7d077-9259-42e4-af70-7fb89a4da08b",
                            "requirements": "The recorded running average recall decreases over time for the frequency-threshold, logit-based and representation-based forecasting methods.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "3cf87482-d8d6-4b95-9f4a-aa34236ac7b4",
                            "requirements": "The recorded running F1-scores show that the representation-based forecasting method achieves the highest running F1-score for most time steps, followed by the threshold-based method, while the trainable logit method performs the worst.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "3a61b24f-dc61-49e5-babd-35a81445f5f6",
            "requirements": "Table 2 has been replicated.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "8cef6ab2-dbb0-4d31-b0b8-fa79bf6a9edd",
                    "requirements": "The P3-Test dataset has been split into P3-Test_{ID} and P3-Test_{OOD}.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "cbbb9b88-3d14-4961-a0e2-7c890fba1b30",
                            "requirements": "Code for splitting the P3-test dataset into ID and OOD splits has been implemented as outlined in Appendix B",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "e46e7287-50d4-4dc7-a09c-5d36be43d814",
                                    "requirements": "The code is implemented such that The P3-Test_{ID} dataset will be comprised of the test splits of the SuperGlue-Cb, SuperGlue-RTE, SuperGLUE-wsc.fixed, SuperGlue-Copa and SuperGlue-wic tasks from the P3 dataset.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "ff13f96a-93b0-4ddb-975c-83801cef3d04",
                                    "requirements": "The code is implemented such that The P3-Test_{OOD} dataset will be comprised of the test splits of the storycloze, hellaswag, anli, winograde-xl tasks from the P3-Test dataset.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "4d8e4aee-6396-4c20-bbdf-0e02b221200b",
                            "requirements": "The P3-Test dataset has been split into P3-Test_{ID} and P3-Test_{OOD} as outlined in Appendix B",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Data Processing & Preparation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "e1705f3c-740e-493c-8057-64bddd71ee6c",
                    "requirements": "Code has been written to generate predictions for all samples in P3-Test_{ID} and P3-Test_{OOD} using BART0_{Large}.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "b6a67a5a-f269-4659-90ca-8ab99bc3db5b",
                    "requirements": "Code has been written to grade the predictions generated by BART0_{Large} on P3-Test_{ID} using the Exact Match score to create the dataset $D_R^{train}$, as described in Section 4.1.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "1d54d6a6-13e1-4a41-a820-314c83aa76d8",
                    "requirements": "Code has been written to grade the predictions generated by BART0_{Large} on P3-Test_{OOD} using the Exact Match score to create the dataset $D_R^{test}$, as described in Section 4.1.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "71657d95-55fd-4d27-8e5a-4a805b917f0b",
                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "2c535d88-5266-4209-b966-d9bb80c93d93",
                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "e9eff70e-ac4a-48cb-ac7e-bed44f46e894",
                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "86bb2fa3-f585-4392-95a5-689c6d85417f",
                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "3412d69e-7222-40a0-8242-40c1e7873887",
                    "requirements": "The $D_R^{train}$, $D_R^{test}$ and $D_{PT}$ datasets required for Table 2 have been generated.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Execution",
                    "finegrained_task_category": "Data Processing & Preparation"
                },
                {
                    "id": "2052b2c4-a173-40fb-9efc-a3c65c975160",
                    "requirements": "Code has been written to fine-tune all parameters of BART0_{Large} on each $(x_i, y_i)$ in $D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", thereby creating $| D_R^{train} |$-many models.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Experimental Setup"
                },
                {
                    "id": "b019e4ce-bf4d-406f-9e92-5eec16369dfe",
                    "requirements": "Code has been written to compute the ground-truth forgetting binary indicator $z_{ij}$ by fine-tuning a copy of BART0_{Large} on each $(x_i, y_i) \\in D_R^{\text{train}}$, querying it on the $j$th sample from $\\hat{D}{PT}$, and grading the output using the Exact Match score.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "78edb4b3-01b7-48c3-a5bf-3329e9a2665e",
                    "requirements": "Code has been written to fine-tune all parameters of BART0_{Large} on each $(x_i, y_i)$ in $D_R^{test}$ using the hyperparameters in Section 4.1 -- Hyperparameters, thereby creating $| D_R^{test} |$-many models.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Experimental Setup"
                },
                {
                    "id": "97da0fad-8bbe-4189-8156-57ba0134be87",
                    "requirements": "Code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{\\text{test}}$ by fine-tuning a copy of BART0_{Large} on each $(x_i, y_i) \\in D_R^{\\text{test}}$, querying it on the $j$th sample from $\\hat{D}{PT}$, and grading the output using the Exact Match score.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "1aaf8c40-d81d-484a-955d-3b240ae53726",
                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                },
                {
                    "id": "2a79b4c9-4aaa-45b0-aa4c-f56bf018fe8b",
                    "requirements": "Code has been written to evaluate the frequency-threshold based forecasting method using BART0_{Large}, and the datasets $D_R^{train}$ and $D_R^{test}$.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "00a29abe-6215-4eea-9b9f-c5034a40b213",
                            "requirements": "Code has been developed to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximises the F1-score, as described in Section 3.1.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "748c3c9f-2562-4f08-acd8-98da5e5e2f08",
                            "requirements": "Code has been written to query the frequency-threshold based forecasting function $g$ for every sample $(x_i, y_i) \\in D_R^{train}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ and grade it using the Exact Match score, producing a prediction $\\hat{z}_{ij}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "7f6554be-8652-4f54-82e0-44ce3f557ead",
                            "requirements": "Code has been written to query the frequency-threshold based forecasting function $g$ for every sample $(x_i, y_i) \\in D_R^{test}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ and grade it using the Exact Match score, producing a prediction $\\hat{z}_{ij}^{test}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "f7010c33-fd70-4e37-bad4-67aa940f39e8",
                            "requirements": "Code has been written to compute the F1-score of the frequency-threshold based forecasting function $g$ for P3-Test_{ID} using $D_R^{train}$ and the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}$ and $z_{ij}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "3cc3ed3f-4516-415c-bd86-828fc0f457d6",
                            "requirements": "Code has been written to compute the F1-score of the frequency-threshold based forecasting function $g$ for P3-Test_{OOD} using $D_R^{test}$ and the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "484da823-55fc-4497-9a9b-818602131149",
                    "requirements": "Code has been developed to evaluate the trainable logit based forecasting method using BART0_{Large}, and the datasets $D_R^{train}$ and $D_R^{test}$.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "3654f3c3-2105-4b23-a279-c418a3abf4cf",
                            "requirements": "Code has been developed to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "6ce414e3-63d1-41d7-9aa7-a217e54c7510",
                            "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "3928aec6-0de2-4c0e-8a23-5c30000187bf",
                            "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{train} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "949a3a66-cb91-4804-a45f-a6d1e8148a32",
                            "requirements": "Code has been written to compute the F1-score of the trainable logit based forecasting function $g$ for P3-Test_{ID} using $D_R^{train}$ and the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}$ and $z_{ij}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "7e89f779-7e89-492c-8ad5-7607b57aa13b",
                            "requirements": "Code has been written to compute the F1-score of the trainable logit based forecasting function $g$ for P3-Test_{OOD} using $D_R^{test}$ and the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "e840b30a-8574-4952-94cc-7e8939b50aab",
                    "requirements": "Code has been developed to evaluate the representation based forecasting method using BART0_{Large}, and the datasets $D_R^{train}$ and $D_R^{test}$.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "128b0a20-e3cd-47a4-b8ca-a6de58a501be",
                            "requirements": "Code has been developed to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "292ca92f-ab86-4598-a993-d0d5a29bc0f8",
                            "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{train} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}$ by implementing the representation forecasting model as described in Algorithm 4 using the learned encoder $h$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "ca18a282-48a9-4e55-8695-82f0c3d93832",
                            "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the representation forecasting model as described in Algorithm 4 and the learned encoder $h$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "a1c7cea1-ccad-4ddf-bdc0-652ae53399da",
                            "requirements": "Code has been written to compute the F1-score of the representation based forecasting function $g$ for P3-Test_{ID} using $D_R^{train}$ and the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}$ and $z_{ij}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "517d7cc5-2e6d-45b2-b0c1-85c121040d23",
                            "requirements": "Code has been written to compute the F1-score of the representation based forecasting function $g$ for P3-Test_{OOD} using $D_R^{test}$ and the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "6fd3f83d-46bb-4ba6-9a11-b8a6f416a898",
                    "requirements": "Code has been developed to evaluate the prior-free representation based forecasting method using BART0_{Large}, and the datasets $D_R^{train}$ and $D_R^{test}$.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "920f9a28-6c1f-4b67-ab40-8ccc7198dde2",
                            "requirements": "Code has been written to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F, though without the bias term $b_j$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "7e224e2b-4a9d-41b8-9dcf-04b733da5bfe",
                            "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{train} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}$ by implementing the prior-free representation forecasting model as described in Algorithm 4 using the learned encoder $h$  and without the bias term $b_j$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "21866885-0b73-4a9f-a8c7-b371d279cb59",
                            "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the prior-free representation forecasting model as described in Algorithm 4 using the learned encoder $h$  and without the bias term $b_j$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "6b1ba9e8-cf35-43c6-a897-a56fd8462d17",
                            "requirements": "Code has been written to compute the F1-score of the prior-free representation based forecasting function $g$ for P3-Test_{ID} using $D_R^{train}$ and the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}$ and $z_{ij}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "16b8435a-62f7-47c3-8275-eb982e537f55",
                            "requirements": "Code has been written to compute the F1-score of the prior-free representation based forecasting function $g$ for P3-Test_{OOD} using $D_R^{test}$ and the predicted and ground-truth forgetting binary indicators $\\hat{z}_{ij}^{test}$ and $z_{ij}^{test}$.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "f69c22d5-8cfa-4e40-aa6d-8181bfc8fb72",
                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using the BART0_{Large}.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "1a95776d-57cd-4564-b1c5-77abe15dd78e",
                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "1f66b2ac-671d-47e6-bfbf-6437c6dcbc84",
                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$ sets for each model.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "dca9f0a3-6c4f-4785-acc7-2d17f4557899",
                    "requirements": "All code necessary to reproduce the results shown in Table 2 has been executed and the F1-scores for both the P3-Test_{ID} and P3-Test_{OOD} configurations using BART0_{Large} have been recorded.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "7fbfdf8f-4cf1-4e11-92d2-46336e784f13",
                            "requirements": "The code to evaluate the frequency-threshold based forecasting method for both the P3-Test_{ID} and P3-Test_{OOD} configurations using BART0_{Large} has been executed and the F1-scores have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "04e08ca1-b200-4d36-9064-11f7bd9ad4fa",
                            "requirements": "The code to evaluate the trainable logit based forecasting method for both the P3-Test_{ID} and P3-Test_{OOD} configurations using BART0_{Large} has been executed and the F1-scores have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "7f9f4674-5977-46d3-adcb-1f1e4f0e9b26",
                            "requirements": "The code to evaluate the representation based forecasting method for both the P3-Test_{ID} and P3-Test_{OOD} configurations using BART0_{Large} has been executed and the F1-scores have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "fe98edb8-9229-49a0-9d50-b0cd262bdae7",
                            "requirements": "The code to evaluate the prior-free representation based forecasting method for both the P3-Test_{ID} and P3-Test_{OOD} configurations using BART0_{Large} has been executed and the F1-scores have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "67f55aa0-108d-496e-9c39-b52d07d06052",
                    "requirements": "The recorded F1-scores match those presented in Table 2.",
                    "weight": 2,
                    "sub_tasks": [
                        {
                            "id": "e4def2cb-ecf6-4bf3-9be5-2b0ab1cd885c",
                            "requirements": "The recorded F1-scores for the ID/OOD experiment show that the representation-based method has the highest F1-score for the in-domain splits of the P3 test set.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "2d04ac62-941a-4cad-a5b0-bab0e00059a2",
                            "requirements": "The recorded F1-scores for the ID/OOD experiment show that the representation-based method has the highest F1-score for out-of-domain splits of the P3 test set.",
                            "weight": 3,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "7d2158d9-30ba-4401-b0bc-9b1bf2e30bd4",
                            "requirements": "The recorded F1-scores for the ID/OOD experiment show that removing the bias term from the representation-based method reduces the F1-score for the in-domain splits of the P3 test set.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "14ad0b81-884b-401a-bf3e-8728b6e9c332",
                            "requirements": "The recorded F1-scores for the ID/OOD experiment show that removing the bias term from the representation-based method reduces the F1-score for the out-of-domain splits of the P3 test set.",
                            "weight": 3,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "59ebcbe5-1996-4df2-b802-e741f4bae72e",
                            "requirements": "The recorded F1-scores for the ID/OOD experiment show that the threshold frequency-based method performs worst on the in-domain P3 test split.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "2f35a2cc-2389-46cd-a930-7e97e84db3c9",
                            "requirements": "The recorded F1-scores for the ID/OOD experiment show that the threshold frequency-based method performs second best (beaten by the representation-based method) on the out-of-domain P3 test split.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "33e2e767-8694-4d15-abd7-c94156af8efb",
            "requirements": "Table 3 has been replicated.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "aa3d9f03-fcd9-45aa-8a69-b8e691e91734",
                    "requirements": "Code has been written to evaluate the vanilla fine-tune method on all model, dataset and fine-tuning configurations present in Table 3.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "16ba5672-68e0-4788-8c6f-235f77479866",
                            "requirements": "Code has been written to evaluate the vanilla fine-tune method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "4f59468c-ea43-4aa7-9a54-f670a47abd05",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "97eadfa1-6d74-4bda-bf4f-c956a41c0554",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "51ea69d7-3704-4d3e-9270-104e7e1168cd",
                                    "requirements": "Code has been developed to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "d8234acf-7cd1-49ec-91bb-81c19edb58fd",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5768b984-0d54-4f76-a5a4-3ebe1ec29021",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e8d66e9a-83a5-428c-9f90-b55984199296",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "7200fbfb-ee3b-442c-8af2-f712dd6bbe34",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "99eaaaab-a67e-4a6e-92c7-84ca0d36ce12",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "c64ed5ac-e8aa-47f8-9217-655a7b23a634",
                            "requirements": "Code has been written to evaluate the vanilla fine-tune method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "00ff216a-e6c9-4afc-b2f0-c33859d5b5f0",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c1ff2b3b-4dda-4988-b68d-afaa54a1aa49",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ee1f1e26-a0f0-4296-bf6b-6a1882df297a",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "e6904295-c17d-4b66-a84a-d706b74a1fc9",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5340250f-8110-421c-9b9b-981a711ba75f",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "084f24da-f651-4392-b436-beb3a7e90d3a",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "cd78d042-c19a-4e41-9c17-5eae1af455db",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "2683217b-36ff-4705-8c80-ef7ede72a9ae",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "82612065-365a-4947-8360-7c386c000d4c",
                            "requirements": "Code has been written to evaluate the vanilla fine-tune method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "b0434bbc-7321-4ed0-a179-037ca37bc14e",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9546f88a-7ce0-4d2a-b792-e6b76a85bf1b",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "49932ad3-4ad1-4896-a7f1-cc7cef0c5060",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "87fa6cf6-a42f-4dc7-b46b-8d24b51ddf8a",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "41d0dbd2-1afe-44e8-a653-92de77f49739",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "833a8a45-d946-4eba-97d4-4b7790631554",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "14b2fbe8-8474-4c4a-ae02-fe70c9e779b3",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "11a893b4-d486-41ea-98d4-a3c5de911421",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "b438aa30-a3f5-417e-87f4-84956873d1b3",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "32a428fc-d5e4-4469-8df1-f8a1f690cdae",
                            "requirements": "Code has been written to evaluate the vanilla fine-tune method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "e7a80a38-e499-4b20-b429-2392283bd06b",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4c7035cb-f827-45d0-96a1-20517de83cd1",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "568a1a5a-95b3-4ae1-9bb2-3779ee001973",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "08463c84-a256-4055-bf1f-71f2f85b3a09",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "118ece96-18dd-4bd7-81f7-3287c1a213de",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "bdc36ae9-7c1f-48ec-8da0-103d9a88d75a",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "85ffa512-c34b-488d-8bd9-70dcc10b4df4",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "e7113085-5350-42dc-890b-9172309ff4a2",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "a5548411-bffa-40f4-a42f-d350bf3ce69c",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "8e109d99-152c-4117-bf47-f342f0934c1c",
                    "requirements": "Code has been written to evaluate the random replay method on all model, dataset and fine-tuning configurations present in Table 3.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "063246bf-3453-402a-b09b-b22dd5e1e52b",
                            "requirements": "Code has been written to evaluate the random replay method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "e412f29f-778e-482c-ad95-5574689badf8",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9ac9b099-3d73-4922-bf56-df3862103674",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5d52e92d-618b-4e06-88f5-d20ba513f3a9",
                                    "requirements": "Code has been developed to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing)..",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "8feb9ab9-d6b0-4dda-96f3-820aed5f9f4a",
                                    "requirements": "Code was written to fine-tune the BART0_{Large} model on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ every 10 training steps using distillation loss against the base BART0_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "140f56a2-a62d-4b38-84bd-ceeaa38c68fd",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c87869f4-73ec-404e-b382-5192f3ed2c51",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "aee54710-4b51-4d64-aa9f-b422db70efcb",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "1563c8c9-fc6a-40de-a569-37ef08bea30e",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "606271fc-a62a-42db-b853-1fc49f8359fc",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "3f8a51fc-6de2-4176-8db4-98c5af697572",
                            "requirements": "Code has been written to evaluate the random replay method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "491443ae-e4ff-4137-9261-be43d4152ee8",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "0349a819-dcea-4ed3-a18e-8e891f68e31a",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "bba009e9-841a-4bc9-8459-b2c8f6f415ca",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "1340d3a4-0387-41e6-9c49-d139e26e5ea6",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{Large} model on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "143e7d2f-de97-4f41-95b6-fbfe01300f67",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a7164315-0d02-478a-8188-144e58336860",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b3c6e2b9-6aa6-4a37-84e5-86d6eac63f81",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "429895b6-1fb7-419f-96b9-c808164796de",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "e6b02e2a-3f62-4602-b2b1-f6b20740410c",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "69e04d77-f914-4fdf-b29a-73dd106062e5",
                            "requirements": "Code has been written to evaluate the random replay method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "d0b16c34-5b8c-4324-a030-7c4fd582d02f",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4af063f6-08f9-4835-8adf-bb9c8a2b3fb9",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3ada421d-0cc6-4823-a840-aad6d1fb1dfd",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "9185c775-0814-42a7-9f00-25049e31e4e6",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "7a8914cc-82e5-4c01-a807-99e886a01056",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "763ad8ac-54d3-4425-bb6b-39c9584ccdbd",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d5d24892-6922-4d71-9eff-a6aae17277c9",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e305cd43-c1ba-49cb-8947-f27c8a856163",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "58371225-3541-464a-8a6d-975a484d6f8c",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "c82809a1-43fd-45c9-99d7-681e6f2514b0",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "7a7efe66-8646-4c0f-a004-2dd364316856",
                            "requirements": "Code has been written to evaluate the random replay method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "8ff35b0c-52bf-46c0-b404-f920599cbb58",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6e814134-ceaf-431b-b9c2-e28fab62e3cb",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a1852e8e-461e-4348-9e94-e0453768a471",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "5e30fcd4-c85c-4227-92ec-d873478858d3",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "6a47cbef-208a-4d37-9652-820e55569683",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on a random mini-batch of 4 examples from $\\hat{D}_{PT}$ every 5 training steps using distillation loss against the base FLAN-T5_{3B} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "e2d62692-7dc1-46d2-a550-b2741221c998",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8f645165-f146-47b2-81f2-a23cf4e5f1cb",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d0978e30-ad7b-4ecb-badf-6215fee66dd8",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "b1af2da2-80e0-483a-8a90-1ecb233f48f6",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "cdc0bef9-33b7-491c-95b8-f55e634529dd",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "ed09a92e-4e51-4b9f-a4bb-c66e69e304e7",
                    "requirements": "Code has been written to evaluate the replay with frequency-threshold based forecasting method on all model, dataset and fine-tuning configurations present in Table 3.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "cb984212-d25d-4cf2-ad2b-14a01be19cea",
                            "requirements": "Code has been written to evaluate the replay with frequency-threshold based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "a8377590-43fd-4712-a381-38ab6d1ad300",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6796a36c-ce95-43cd-99e4-91d0b098dd8a",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "dc4f55df-e597-4de8-9917-3118c4300f98",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting classifier $g$ using $D_R^{train}$.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "b499bdb8-bae6-4899-88c5-c764742a13a0",
                                            "requirements": "Code has been written to fine-tune the entire BART0_{Large} model on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", altering all parameters, thereby creating $|D_R^{train}|$-many models.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "883cb9b7-238b-4178-9c26-d78287b6ad98",
                                            "requirements": "Code has been written to compute the ground-truth forgetting binary indicator $z_{ij}$ for all pairs $(x_i, y_i) \\in D_R^{\\text{train}}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ by evaluating the copy of BART0_{Large} fine-tuned on each $(x_i, y_i)$ on the corresponding $j$th sample from $\\hat{D}_{PT}$ and grading the output using the Exact Match score.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "78954bef-5140-4e2d-a477-879fed50f0dc",
                                            "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "96021833-5291-44d0-8095-baa7fa8805ad",
                                    "requirements": "Code has been developed to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "9bfacdd0-06f7-4fb2-8ab2-5cedaa330449",
                                    "requirements": "Code was developed to fine-tune the BART0_{Large} model on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten by $g$ every 10 training steps using distillation loss against the base BART0_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "1bd910c6-3c57-4ae4-ab26-d7554a7690d1",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2e00cb23-5c55-49e8-89a9-540895045034",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7e33d6e1-0a77-4df6-a0da-b9b8ab00efab",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "91e103a4-d6fa-4436-871a-0d3b9706964c",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "f574efa9-32c5-4e33-9516-ba64caa4d6a2",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "de50eb67-a1dd-43f2-a6b6-531b94c18407",
                            "requirements": "Code has been written to evaluate the replay with frequency-threshold based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "1e68bc23-e1e9-45c2-a33d-808d008420d7",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d0459431-e123-40f0-9411-48a487f6a21e",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3303f8ff-b715-47ac-9cf4-734c64f0dadd",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting classifier $g$ using $D_R^{train}$.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "26d995a3-7abc-4d7b-a72b-6105b9201842",
                                            "requirements": "Code has been developed to fine-tune the entire FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", altering all parameters, thereby creating $|D_R^{train}|$-many models.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "0a596475-8f2d-4788-8762-93b9abb2533f",
                                            "requirements": "Code has been written to compute the ground-truth forgetting binary indicator $z_{ij}$ for all pairs $(x_i, y_i) \\in D_R^{\\text{train}}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on each $(x_i, y_i)$ on the corresponding $j$th sample from $\\hat{D}_{PT}$ and grading the output using the Exact Match score.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "e003e3e3-219f-4fdc-bd8e-1f169c3886b2",
                                            "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "3262101b-1a97-44e5-8fcd-e722a5f577c7",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "e805f290-425f-4c4e-aa6f-c58db2210c03",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{Large} model on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten by $g$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "d9913c05-e73d-4157-bca4-0f3837ac0796",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a0ab851f-49d2-4cd3-9377-921f790d0eeb",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e51b0160-c7f5-4eb3-94b4-91c3f0a633ad",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "d49df284-9ed0-44dd-a565-960410c7d16d",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "52abd1e0-c955-4065-bc36-b547a1c1a169",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "bc5c7170-c566-40ef-bb6d-e091d3134885",
                            "requirements": "Code has been written to evaluate the replay with frequency-threshold based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "3b3feb08-61b7-447b-89cb-1332d823ca04",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9e5d1fcd-c2ed-4b8e-9c70-8349086f35bc",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "bc038633-b3e9-454f-af23-5b50deefbfae",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting classifier $g$ using $D_R^{train}$.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "ca17c287-5935-4d69-9172-c13a4b4733d5",
                                            "requirements": "Code has been developed to fine-tune the entire FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", thereby creating $|D_R^{train}|$-many models.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "690ea75a-89d1-4a2a-a517-8315ee63adcf",
                                            "requirements": "Code has been developed to compute the ground-truth forgetting binary indicator $z_{ij}$ for all pairs $(x_i, y_i) \\in D_R^{\\text{train}}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ by using the copy of FLAN-T5_{Large} fine-tuned with the LoRA adaptation to model parameters on each $(x_i, y_i)$ on the corresponding $j$th sample from $\\hat{D}_{PT}$ and grading the output using the Exact Match score.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "7a68b940-d0f0-4779-944f-773cd3055c98",
                                            "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "ec09fde5-53fe-4262-9579-3e4389c2c872",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "d9d3c6a5-ef86-48df-844c-07ebf158c4b3",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "8af3e98c-2105-4d29-a165-c3c7e7fbfe50",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten by $g$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "530b5783-df94-4a98-b878-ef923ce4eda2",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "749d3508-cbaf-44bc-a1e5-d431970caa07",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "93a5321d-a92d-4333-b015-a16b4f89c08b",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "c9d9f50b-dbbc-4394-b3c1-084a493a6832",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "9fe7a706-378b-4921-b6aa-d4ebf6c459f1",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "08fc484e-62d0-4517-99d6-dd33ce47ab5a",
                            "requirements": "Code has been written to evaluate the replay with frequency-threshold based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "58fbbbec-9ae6-46d5-8d6d-7e54b325ea3f",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "48cab4ad-b260-4296-8ca9-90c6e6bdaffe",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "bbbf4d4d-8c1d-4130-b051-e456de175b33",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting classifier $g$ using $D_R^{train}$.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "a2e89801-c75d-4417-851d-7e9b609a35ce",
                                            "requirements": "Code has been written to fine-tune the entire FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", thereby creating $|D_R^{train}|$-many models.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "b377c78d-6585-4dd0-a158-3d099fdec60a",
                                            "requirements": "Code has been developed to compute the ground-truth forgetting binary indicator $z_{ij}$ for all pairs $(x_i, y_i) \\in D_R^{\\text{train}}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ by using the copy of FLAN-T5_{3B} fine-tuned with the LoRA adaptation to model parameters on each $(x_i, y_i)$ on the corresponding $j$th sample from $\\hat{D}_{PT}$ and grading the output using the Exact Match score.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "b55e2ce4-8d26-4fdf-a779-7ae2f447744b",
                                            "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "ce60c6d7-3fc9-42af-98d9-9355f1350ab4",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "a4a7ce0c-16a6-43c9-b851-52d729f3e8b1",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "0acc6980-14b6-4e65-bdae-79fa78d2d910",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on a random mini-batch of 4 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten by $g$ every 5 training steps using distillation loss against the base FLAN-T5_{3B} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "8541a8dd-d5e1-4a6e-81e9-7273c7a95502",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6f47eacb-5071-4a60-840b-d27c2622bf26",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1d297b25-3c36-44b3-b955-6e1dfb8dc875",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "9ea71ea3-7fbf-44f6-a6f8-3c0083ee685b",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "9f8efde4-36e8-4749-b529-2421d8ea29f0",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "f39266b8-dd12-4fed-aa07-83bb401a55d4",
                    "requirements": "Code has been written to evaluate the replay with trainable logit based forecasting method on all model, dataset and fine-tuning configurations present in Table 3.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "8b1408f3-842a-489f-a677-7b69e027cd2f",
                            "requirements": "Code has been written to evaluate the replay with trainable logit based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "c5205495-46f8-47fd-a53f-d75111fa5ebb",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f17a9e74-b3d1-4f7b-a00b-b26e5028a82a",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3c08c00f-1e9b-45a4-8baa-4b0d4708434e",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "73e69ea4-d3fc-401a-96e4-6c15bed52e6d",
                                    "requirements": "Code has been developed to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "8642af3f-7902-4c71-8a24-b8eede215040",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "5ddb3b3f-0a22-4751-b1bb-2ef71f2db11b",
                                    "requirements": "Code has been written to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "45813cc4-8b3b-4266-85c6-7f649df2cfaf",
                                    "requirements": "Code was developed to fine-tune the BART0_{Large} model on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base BART0_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "4974865e-23e4-421b-b52e-882ec83c1fc5",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "82fead89-9952-406e-9709-8726b8281110",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d4475fd0-ecd2-47ce-881a-fcf5dbf07956",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "1809309c-3d0c-4d29-8d71-6a266435df33",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "454f3aef-a03e-49e4-a3a8-07ed0183e002",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "0ab639e5-ba6c-4209-be7a-dbe2a0c5ad55",
                            "requirements": "Code has been written to evaluate the replay with trainable logit based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "98d67f2e-0e83-4b54-81b0-3d077aceebf0",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9e6f46f4-e2ad-4fde-a8e8-ab3ef4b628ee",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "09514ad0-0035-4975-aee9-63d1c866ca30",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f5875d41-3255-4e9b-a989-00bafd7a2190",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "103c09b5-f6fe-4af5-aed7-663dbedf7bf7",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "c7abdfcb-6c43-45ef-9e7a-692aa58289e2",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "8791f382-fbaa-4434-a7d1-5ada0fc8364f",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{Large} model on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "984c11ce-4d17-417e-b1fe-260998ee3659",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "beef9530-3416-47de-be6b-75e0de005aaa",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a432a10c-be15-4837-959d-d901888ea91f",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "a562fafe-490a-4ab6-b5bd-8ad5ccc8cf09",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "31cd0913-6846-4d5d-9b54-6a0eaab73eff",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "9b259b55-f31a-45c5-9413-525860afc772",
                            "requirements": "Code has been written to evaluate the replay with trainable logit based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "7eef3939-3834-4c36-9b09-d577fd17bb13",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "07590ff9-4b3f-4ff8-a519-8463dea005c9",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "5f4d612a-b599-4ef4-80b5-ae3b95868791",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a19f7695-2f61-4204-abce-af4323f441e6",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "e91399ee-1b0a-456a-87a7-7458d9552826",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "166750d2-bb17-4137-8d1c-50e46d17e29e",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "d6fd8fc1-f1ef-4839-990d-d05fdaa05468",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "e2cfc257-0044-477d-96b8-0a3bddfa7eed",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "1f1e27e9-123b-481d-9987-67449971f35f",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6782a82d-d06c-440c-a24d-87afd98b0b7f",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5f1262b4-fe75-4508-99d7-af5dcc4b26d3",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "12117f46-b620-4d97-92e7-6c85f9232c31",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "98f4860d-5b49-40fe-abae-fccd8f089402",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "eb52fe13-449b-4a20-a546-0b9640630a5c",
                            "requirements": "Code has been written to evaluate the replay with trainable logit based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "2bbb4172-34f6-488f-938f-e6421f5b70cb",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f091c8c9-abf7-4787-8de3-37c3c29d24cf",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f0ad69e1-da21-4cad-affe-b49acf5bc34c",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b6696601-bd94-49bb-8223-de08b0e7a450",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "3ec6b01d-de64-4dd3-85a7-da2cfd7e0d5d",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "237aa8b7-7d3b-47f5-adef-86d4a56d35a0",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "31a359d7-2d39-4d23-9559-f157563d3405",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "95212175-919c-43a4-97a2-f7814c0f0c31",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on a random mini-batch of 4 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 5 training steps using distillation loss against the base FLAN-T5_{3B} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "41c6ae74-a642-4916-8a75-7641aec09505",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5337aced-8fa4-4f3e-bc28-da144075c9ae",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "103c25a5-80ac-4cc2-bb3b-ae5ec2dc0187",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "7d5cd077-656d-48d7-acfc-782573af7e77",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "c7f80e89-df0c-47ef-b268-a2b40794462d",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "b9ddb67c-db6b-4dbe-9741-7367496dda16",
                    "requirements": "Code has been written to evaluate the replay with representation based forecasting method on all model, dataset and fine-tuning configurations present in Table 3.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "f728435e-0df9-45cd-bb41-0c66f46fe0b6",
                            "requirements": "Code has been written to evaluate the replay with representation based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "020471c7-fb43-440f-8c83-30ade54317ec",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "131cd8e4-3364-4e8d-8855-6afac566f9a7",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "cb9c0df4-45bb-4d96-b41e-32f144ad15c0",
                                    "requirements": "Code has been developed to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "1f359b2d-cac0-4dfa-b6fc-78bcea8ce49f",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the representation forecasting model as described in Algorithm 4 and the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "6416c1e2-2a0f-422a-a2b0-6422cd073c39",
                                    "requirements": "Code has been developed to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "47158307-0bad-43ad-b071-f3c22f6a73a9",
                                    "requirements": "Code was developed to fine-tune the BART0_{Large} model on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base BART0_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "a5e729b6-dc0d-4711-939d-9784e8678192",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b7555281-8306-4284-95cb-24ef5a0c007b",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "08f08138-8f6f-409e-8156-e4a54130b8c6",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "6f90b722-06ff-42f3-85cd-066287c7c074",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "9533e06e-3634-47a7-8d61-40f7286a8014",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "b3df18fb-04c8-41ea-9fbc-2bd66b7b7cc6",
                            "requirements": "Code has been written to evaluate the replay with representation based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "50dc0b41-d774-4842-893b-4276c89d00ce",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2dcb6c89-5aed-4ffa-85d8-52c16831870a",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d212316a-b3f5-4f15-94e7-ef1f795f8d02",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "43793f81-e241-4e6e-887c-3db97fc3c363",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the representation forecasting model as described in Algorithm 4 and the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "f953deff-0c29-481b-af72-bf03e1a493e1",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "93b1d676-4a55-429e-bebf-a41cedb001dd",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{Large} model on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "246a0eda-61ab-4e39-aca7-ad9e9ef8ebe1",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c73168cc-092b-4f84-bea7-0fdbce009faf",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ef38527b-3771-4c47-89a4-8d7dd15b7dcf",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "c000edd9-c932-4d81-a6c7-4294be98c984",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "f4377bcf-26a0-4fab-af22-8c56d8c832d1",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "1d9e09ae-a123-408c-8f54-8f8fbf43e0fd",
                            "requirements": "Code has been written to evaluate the replay with representation based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "0501cd6e-c133-4027-9040-0672abe35d43",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "153db477-d7d9-43da-8c84-d2647dadd084",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "aa84a313-2cad-41f4-bf4b-bbe1c28a42a7",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "888906cc-d7d8-48e6-bf77-92a0fe30a85d",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ by implementing the representation forecasting model as described in Algorithm 4 using the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "334386b6-e0f1-48f7-9c5a-7ae78f86c08a",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "a2a74879-2e5e-4283-84ad-df69eeb915fa",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "7224e221-e8a5-4135-84e5-e2bc301ca6c0",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "63a96a42-6364-4960-95af-8ccb5254fd4c",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "57d4574e-94d7-4ba1-9943-8a042882c5a6",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "396a9634-f80c-48d1-a245-ba224b25b5ee",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "814520ce-d812-49fc-8c3c-0cc935952095",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "42c416bf-38e1-40a2-82f2-7f18e8eb001d",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "c33c7690-c72e-4518-b2b6-a45a87004efb",
                            "requirements": "Code has been written to evaluate the replay with representation based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "7c933a8b-1076-4e25-92c7-4193d8068e43",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c42e6e55-1550-4d7d-9f5b-fee69713c9fa",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "aafa35eb-f2a4-4bb9-ad4b-c485cf35f646",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "c50b126b-3ca1-44fd-a213-01577167a12c",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ by implementing the representation forecasting model as described in Algorithm 4 using the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2acb6caa-bf14-4cca-9a20-2ff7cc5cd152",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "0108bf24-5a37-49f7-833d-abd12e838fb9",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on a random mini-batch of 4 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 5 training steps using distillation loss against the base FLAN-T5_{3B} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "bcd723ba-0a71-41dd-8ede-0d078bf8e51b",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "edad302b-5265-4402-8ece-a415f4603259",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2f2d00d0-a772-4689-b6de-1a29a483fcca",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "599f559d-2ef2-4e77-94f6-f390a2b9ecf5",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "d45616c1-aae6-41d2-8a22-8717e4be8a1c",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "75041314-266e-4ed6-90ad-163190ff095b",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "4dd3c94c-ac24-40bd-84ff-5a643575ffce",
                    "requirements": "Code has been written to evaluate the ground truth forgetting replay method on all model, dataset and fine-tuning configurations present in Table 3.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "398c9e80-4add-456e-a59c-e416c0c23891",
                            "requirements": "Code has been written to evaluate the ground truth forgetting replay method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "55f9d829-a884-46de-890c-18f965022fce",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ba5c4e72-2a99-4797-83a3-26bec26a7ad9",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "fdd501eb-4db3-4a71-9cf5-c9effe40e292",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of BART0_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "bd3db6e1-5107-4d7e-bf65-aec801584fa3",
                                    "requirements": "Code has been developed to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "638fa6a0-cc12-4953-a263-ef538e4b7718",
                                    "requirements": "Code was developed to fine-tune the BART0_{Large} model on a mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forgotten according to $z_{ij}^{test}$ every 10 training steps using distillation loss against the base BART0_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "b4331a30-3a52-4962-877f-d3db0d437043",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c07d9e32-37fc-41eb-951d-9021f5c240a5",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7f793064-82ee-47a9-a38a-8e654e9de778",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "c362a7a9-98be-4b87-9a82-9da23296a792",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "0e28a1a3-712b-422b-b84f-84cb662d3fb9",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "b077cf29-7864-4ac6-a66c-0c3f85d9f100",
                            "requirements": "Code has been written to evaluate the ground truth forgetting replay method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "fedbb9a8-37dc-4a7f-82b2-4830c13c11dd",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "01f36af4-2014-45c4-b082-d211c79af885",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c122ca97-1761-4ecf-a8fc-f1afe81cba83",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7b26d7ba-71d0-4929-8d7c-2df49d1cc2c6",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "309e0fe1-105f-458b-bf00-dd05e73ca149",
                                    "requirements": "Code was developed to fine-tune the FLAN-T5_{Large} model on a mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forgotten according to $z_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "d2c711e1-ca29-4383-af5f-77e90a36b877",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "06f51676-5bea-471e-b6a0-6e643f2fe153",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8dd72bea-723a-4e43-a743-829190025708",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "79330a11-feb3-4e1d-a8df-4796ea8f3570",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "8ad4e41b-030e-4283-bd14-9dd7ba970301",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "ce82ea3e-800f-4e1a-a52e-ea5d245bd95e",
                            "requirements": "Code has been written to evaluate the ground truth forgetting replay method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "0bfbf2b3-9969-4c3c-970b-e740efc65e18",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3be00c78-6b7c-4b6f-93c0-6b29c8634046",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "fb5f73f2-7cba-47f3-a2ba-d31c917e403f",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d44310ea-2bcd-43bd-9ffe-909ec523d570",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "af4f5336-6e60-47b9-a413-8d97b17e0eca",
                                    "requirements": "Code was written to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on a mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forgotten according to $z_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "1dafd2cd-2e27-4d05-a1fd-cbdd85224bea",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "eff9b215-f64c-4ec4-ad38-847ccea0bd46",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1406507e-82e3-415a-86ca-8eccbf78a4b1",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9f988a2f-6d4f-4c42-8c70-651c275bccfd",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "8a59f9aa-cf51-49b3-bbb9-bf51ac6401e3",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "158418f0-40ff-4ebc-a072-6dd72614943c",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "203aa057-5625-48bc-98b3-1bbab53e2c1f",
                            "requirements": "Code has been written to evaluate the ground truth forgetting replay method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "fedadfa6-3cfe-4cbf-913e-0f0f57b9784a",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "67b1380d-d7dd-4b23-8738-20482de40b62",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f8f757cf-4062-4399-ba87-b983dd722679",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2d80cfe9-96b1-4769-b68e-100c39beba95",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, one at a time, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\" (N.B. the lower learning rates used for sequential error fixing).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "98f1f2e0-c1f5-44b2-a53a-403334cf7bd7",
                                    "requirements": "Code was written to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on a mini-batch of 4 examples from $\\hat{D}_{PT}$ which were forgotten according to $z_{ij}^{test}$ every 5 training steps using distillation loss against the base FLAN-T5_{3B} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "4ecdde4c-9c30-4cfb-8e39-817dde6d9ec1",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "83467bda-2af9-49f8-aa08-d980954025c9",
                                    "requirements": "Code has been written to compute the Edit Success Rate for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e275e080-824c-494e-b653-cff3e12166f1",
                                    "requirements": "Code has been written to compute the Exact Match Drop Ratio (%) for the refined model, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b66abb1d-a050-473d-9e5c-e6b6621a19a2",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "2c36d8d9-e721-4514-847b-fc128dc2327c",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "db938e71-f9e7-44fe-a2f5-3c542c083a14",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "1525ef1e-7fbc-4b38-b29e-1426bbf5c0c7",
                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using the BART0_{Large}, FLAN-T5_{Large} and FLAN-T5_{3B} models.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "b22c1fc7-7c17-42fd-9a9d-44095a5a223f",
                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using the FLAN-T5_{Large} and FLAN-T5_{3B} models.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "723a0e18-5032-4f29-b353-7f694d6cc8ab",
                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "342d1ed2-c69a-4dee-8bda-a1d6250ac4b9",
                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$ sets for each model.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "b1de3c96-04f9-40a6-831f-effc34474fa0",
                    "requirements": "All code necessary to reproduce the results shown in Table 3 has been executed and the Edit Success Rates and Exact Match Drop Ratios for all model, dataset and fine-tuning configurations have been recorded.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "4695e138-e60e-4ceb-a0e9-67824cda74fa",
                            "requirements": "The code to evaluate the vanilla fine-tune method on all model, dataset and fine-tuning configurations present in Table 3 has been executed and the Edit Success Rates and Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "55ab6cc0-df48-421b-a87a-9d44ef165290",
                            "requirements": "The code to evaluate the replay with frequency-threshold based forecasting method on all model, dataset and fine-tuning configurations present in Table 3 has been executed and the Edit Success Rates and Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "4096d4f9-df7f-4940-8472-57575a2f066b",
                            "requirements": "The code to evaluate the replay with fixed-logit based forecasting method on all model, dataset and fine-tuning configurations present in Table 3 has been executed and the Edit Success Rates and Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "675b58d4-5f25-4da3-922a-b705d0340f34",
                            "requirements": "The code to evaluate the replay with trainable logit based forecasting method on all model, dataset and fine-tuning configurations present in Table 3 has been executed and the Edit Success Rates and Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "df4854e5-06fb-4a45-8c7a-895e9925ead9",
                            "requirements": "The code to evaluate the replay with representation based forecasting method on all model, dataset and fine-tuning configurations present in Table 3 has been executed and the Edit Success Rates and Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "667fe5f7-5152-4af8-8f30-2426be620c7a",
                            "requirements": "The code to evaluate the ground truth forgetting replay method on all model, dataset and fine-tuning configurations present in Table 3 has been executed and the Edit Success Rates and Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "9104e516-cf19-46e9-a5c9-12e34cec64ab",
                    "requirements": "The recorded Edit Success rates and Exact Match Drop Ratios match those presented in Table 3, with the exception of MIR and OCS which are out of scope.",
                    "weight": 2,
                    "sub_tasks": [
                        {
                            "id": "30c68f82-26d0-458d-ba87-2fac0619a8de",
                            "requirements": "The recorded Exact Match Drop Ratios show that the ground truth forgetting replay method has the lowest Exact Match Drop Ratio for all evaluated model, dataset and fine-tuning setups.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "e9a20917-53be-4d5a-9415-2859a30ce6aa",
                            "requirements": "The recorded Exact Match Drop Ratios show that the replay with representation based forecasting method has the second lowest Exact Match Drop Ratios for all evaluated model, dataset and fine-tuning setups, second only to the ground truth forgetting replay method.",
                            "weight": 3,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "a8e920e2-4591-47bf-9101-bed468d8896f",
                            "requirements": "The recorded Edit Success Rates and Exact Match Drop Ratios show that the vanilla fine-tuning method has the lowest Edit Success Rate and the highest Exact Match Drop Ratio for all evaluated model, dataset and fine-tuning setups.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "fc36825b-4d6c-4bf1-8877-81cb39d560eb",
                            "requirements": "The recorded Edit Success Rates for all configurations method, model and dataset configurations in the full fine-tuning setup are comparable i.e. within +/- 6% of each other.",
                            "weight": 2,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "b69720bd-84b5-41f8-88be-335ea0c07ec0",
                            "requirements": "All three of replay with frequency-threshold, trainable logit and representation based methods reduced forgetting compared to the random replay method, as measured by the EM Drop Ratio (where lower is better).",
                            "weight": 3,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "e973fe6d-4a1b-4133-b1fe-20133cf1c6de",
                            "requirements": "The recorded Exact Match Drop Ratios show that replay with frequency-threshold, trainable logit, and representation-based forecasting mostly aligns with their forecasting performance (i.e. F1-scores) shown in Table 1, except for FLAN-T5_{Large} Full FT.",
                            "weight": 3,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "5fd231a6-8760-4d20-b627-cf58a563e064",
            "requirements": "Table 4 has been replicated.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "0196f8e2-d48c-44a5-a602-95dfaeb477f8",
                    "requirements": "Code has been written to evaluate the vanilla fine-tune method on all model, dataset and fine-tuning configurations present in Table 4.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "2e2c1b9d-c030-482b-977b-52bc56c48486",
                            "requirements": "Code has been developed to evaluate the vanilla fine-tune method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "ef59ba63-c979-411f-afcd-d40e0b1eb460",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "50fcdcf5-78e1-4c0e-96ec-0bd9dbd7c941",
                                    "requirements": "Code has been written to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "ad64104d-3859-4d7f-9f90-4210c63ed091",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b9408337-d051-46dd-88c6-2dfd46cbb066",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "0adf6d43-27a2-413d-83eb-2a3e11ea6504",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "42ba7af8-3bfc-4e80-a8f9-d8edc0b64cc4",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "f26e1c2a-dacb-495f-b5e7-8cbea64fa3d8",
                            "requirements": "Code has been written to evaluate the vanilla fine-tune method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "bd958531-7af0-4b67-ab66-ea6713e115fd",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2206c259-e988-4deb-87a6-f626ad419b12",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "7cd4e05d-f185-4c22-80d5-8e4e30d2c4ca",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3bd9de18-d014-4a59-ab40-a8b799e5e184",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "95706f9a-ba79-439a-b1f4-fdf26e29f978",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "7aa7c91c-5cbc-42c1-b5aa-d2af93047d9c",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "4852e5df-e93c-479d-9115-80f434837479",
                            "requirements": "Code has been developed to evaluate the vanilla fine-tune method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "b2f9b760-3a33-4934-8bc8-35a970713582",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e79e61c0-69d0-4cf5-ad9b-09debce73f71",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "bb9c72be-a4ef-484e-ae77-f7231d6ef0f9",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "cd762592-86c9-4235-b0bd-cee4ce82275a",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "fa022d04-b83b-4d11-929b-3806c4fb5549",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "337defd7-d8e0-48f5-8b5a-bd7d6670d5b5",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "d11da858-c6c4-49e3-84e2-e2203b45ec17",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "b7ab4f94-4653-4f50-9d44-4fc5e39a60fb",
                            "requirements": "Code has been written to evaluate the vanilla fine-tune method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "cc988303-4787-4a76-9a91-b5256faf132f",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4457d984-efe2-4674-9c10-2b33ea4294fe",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "b8cadfae-2523-47c6-9204-340c0e667e74",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "9df116d6-1bd4-4c8a-a7ff-86791d83b113",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "385711f4-dd9e-4139-8fdb-4db2ef11ac7c",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "f6e9cc0f-1a05-4154-8c41-83b9c73f1f42",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "22a97dd7-8817-42b2-b51b-860d6b2896ec",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "c2eb7d51-7769-4fae-ba37-e4f1aa0de5d9",
                    "requirements": "Code has been written to evaluate the random replay method on all model, dataset and fine-tuning configurations present in Table 4.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "bb12f208-8bce-447a-854d-af445217cc68",
                            "requirements": "Code has been developed to evaluate the random replay method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "f933a665-8403-47e8-88d8-f12d0105b4db",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2b9e26dc-5921-40d9-90f3-145899467a82",
                                    "requirements": "Code has been written to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "3b047b2c-080f-464b-b333-db89d641b2aa",
                                    "requirements": "For each copy of BART0_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it on a random mini-batch of 8 examples from $D_{PT}$ every 10 training steps using distillation loss against the base BART0_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "d9ac0f35-0bac-42dd-8d02-c9a4f8ade812",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7679a7ba-f062-4288-a51b-968ca0ccef54",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "c68fac13-85da-4f32-aeee-706c392d2885",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "426589e8-ff98-4b41-adfb-a360844a59b0",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "cf092e55-5655-44d2-8144-1c7a5ef2ad65",
                            "requirements": "Code has been developed to evaluate the random replay method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "facd327b-bf0c-4e27-b3fd-8d3b5074c2ca",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7895f6b5-b880-4ef2-97ff-e2cf0ae1b0f5",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "b7f9b534-55da-45f9-b32f-8098d8160e39",
                                    "requirements": "For each copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it on a random mini-batch of 8 examples from $D_{PT}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "19c11b52-0598-49fc-b4ed-50cc1dfabc05",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "42d2888d-d1fc-444d-837a-73066e683021",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "51471371-6849-422d-9ee6-2b16fe57e0ca",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "38623980-a419-4621-babc-bb86aa83e56a",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "73f28256-bfd1-4260-a979-d1126723cdf5",
                            "requirements": "Code has been written to evaluate the random replay method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "7105699a-5afb-4f49-b564-866b9337e347",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9fcff492-f49c-4ec6-8dce-62ca072fa90b",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "bfd0c2dd-33e6-4175-aaf9-caeef894f261",
                                    "requirements": "For each copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it using the LoRA adaptation to the model parameters on a random mini-batch of 8 examples from $D_{PT}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "e2faa9ab-e7b6-4ea3-b7c4-bbda44402f4b",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "81b4d0cb-591b-4bd9-89da-44f0925c5c89",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "48963640-bcf3-41a6-a2b8-532552d7c735",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "f23ac72e-7cdb-4bee-8c89-56c9afd96fd5",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "03ac19ca-e14b-438a-932b-578d26724027",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "b2702de8-1e28-4e7a-bc3d-dc20a5722919",
                            "requirements": "Code has been developed to evaluate the random replay method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "efc0dc75-90e4-4a28-a916-c7d3dc1e03ea",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a973e75d-9771-495e-8319-88074250e040",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "1a58a441-a746-48aa-a2f6-a937b3a53932",
                                    "requirements": "For each copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it using the LoRA adaptation to the model parameters on a random mini-batch of 4 examples from $\\hat{D}_{PT}$ every 5 training steps using distillation loss against the base FLAN-T5_{3B} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "e88bab54-bf02-499b-ab4c-b3071c114db3",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2af8b1a3-38aa-41d3-b55a-a8acf4f88235",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3fe6679e-4485-43b7-b977-551dcf69bb2c",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "3ed6e36f-356f-4cb4-a159-e10c81009f45",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "4a967984-7ade-44f8-9f2b-3ae2af26c14d",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "804104ec-5dad-4638-a7da-842ae295275d",
                    "requirements": "Code has been written to evaluate the replay with frequency-threshold based forecasting method on all model, dataset and fine-tuning configurations present in Table 4.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "f19cb2d9-701d-4d1c-b3d9-4f9d64feea93",
                            "requirements": "Code has been developed to evaluate the replay with frequency-threshold based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "c616b723-4a4b-435b-b96e-682546f3591f",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c6fdd560-77e2-42bf-bd84-3d667bbf0fe3",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "177a5e25-c764-465c-bc65-1f991b9bc84d",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting classifier $g$ using $D_R^{train}$.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "777a8827-eb1b-4093-9e56-dad06bfe2de8",
                                            "requirements": "Code has been written to fine-tune the entire BART0_{Large} model on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", altering all parameters, thereby creating $|D_R^{train}|$-many models.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "41933187-1916-4924-bfaa-614062b8397a",
                                            "requirements": "Code has been developed to compute the ground-truth forgetting binary indicator $z_{ij}$ for all pairs $(x_i, y_i) \\in D_R^{\\text{train}}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ by evaluating the copy of BART0_{Large} fine-tuned on each $(x_i, y_i)$ on the corresponding $j$th sample from $\\hat{D}_{PT}$ and grading the output using the Exact Match score.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "cef9c85d-da16-4c57-beff-f589a27f41c2",
                                            "requirements": "Code has been written to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "db41c3a0-889d-4f72-84d1-d3e453f50de3",
                                    "requirements": "Code has been written to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "06f8bd12-c5d9-453b-9d3c-95a66653f37f",
                                    "requirements": "For each copy of BART0_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten by $g$ every 10 training steps using distillation loss against the base BART0_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "86fc0136-60b4-4908-a0c0-65735d74f6e2",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9145a5e8-eedf-442b-b079-7783d65d4cac",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "2cdd87ac-650e-498b-b74f-2f760970a3f9",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "385796d8-8e14-4896-9260-6b325bc6ec8e",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "6bd4853a-114c-4c2b-8d3d-b872fc7fba75",
                            "requirements": "Code has been developed to evaluate the replay with frequency-threshold based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "68afb8b5-6d99-4e4c-a599-cb4733a71a7b",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "51731563-efc9-45d3-a329-fb1c76e045ec",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d95fd13a-abbd-4d61-8740-978fc76e6179",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting classifier $g$ using $D_R^{train}$.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "95f45cd9-d3c5-439c-85d8-69beea843c98",
                                            "requirements": "Code has been developed to fine-tune the entire FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", altering all parameters, thereby creating $|D_R^{train}|$-many models.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "ffe7f355-4c5a-46cd-b2a0-a9c81679d74e",
                                            "requirements": "Code has been developed to compute the ground-truth forgetting binary indicator $z_{ij}$ for all pairs $(x_i, y_i) \\in D_R^{\\text{train}}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on each $(x_i, y_i)$ on the corresponding $j$th sample from $\\hat{D}_{PT}$ and grading the output using the Exact Match score.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "946063fa-ea71-45e9-8494-88942191046f",
                                            "requirements": "Code has been developed to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "19ce0534-e406-4748-9894-0bc38cf76715",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "7a4fe5d6-d85f-423d-8de4-c195befb2095",
                                    "requirements": "For each copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten by $g$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2408fcf8-0d57-4a3d-9722-af5e279661ce",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f1780106-1193-45e1-9a04-720484880741",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "74274053-7acd-45cf-8620-5ec2c6efb9b1",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "bb0a0dc1-edd9-47b7-b0ac-fb6a9d42c28d",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "6621f49e-499d-4e6f-a088-91c08850524c",
                            "requirements": "Code has been written to evaluate the replay with frequency-threshold based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "280f77d8-9d26-48cb-86d7-fb68b2b4a40b",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "71639f96-b240-4127-a1a4-46cbfbb25fe9",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2e1d17e5-5784-4416-91b7-f100b29ee633",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting classifier $g$ using $D_R^{train}$.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "6f3dbd99-6db7-49b5-b84b-a76c354b0b7a",
                                            "requirements": "Code has been developed to fine-tune the entire FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", thereby creating $|D_R^{train}|$-many models.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "866eb3b0-da99-43dd-844d-c821c3da5c63",
                                            "requirements": "Code has been written to compute the ground-truth forgetting binary indicator $z_{ij}$ for all pairs $(x_i, y_i) \\in D_R^{\\text{train}}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ by using the copy of FLAN-T5_{Large} fine-tuned with the LoRA adaptation to model parameters on each $(x_i, y_i)$ on the corresponding $j$th sample from $\\hat{D}_{PT}$ and grading the output using the Exact Match score.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "68d985bf-831c-4e48-8a72-ce01aca34095",
                                            "requirements": "Code has been developed to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "70e5a2d5-f5f6-40b4-ad53-0f1902385bed",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "68418baa-05c7-4bb8-a273-210079a562ad",
                                    "requirements": "For each copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it using the LoRA adaptation to model parameters on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten by $g$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "5151a3d3-f857-423c-ab70-0386ee5345e4",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "1fbfc600-037a-4e23-90df-ffe434c531e8",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "aa0cb106-b4f0-4e0e-b02a-32e67948f235",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "7ae340af-c1e1-4857-967c-06b1e179a773",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "3e2b0834-78c0-4a21-917f-7f2f0735b894",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "19d63b3e-1e15-48fa-ad2f-3ea3b990c3a0",
                            "requirements": "Code has been developed to evaluate the replay with frequency-threshold based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "72eba066-1a8e-4406-8edb-a37e5dfd9550",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7582681b-f690-4655-8980-1ebc6a287119",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "aa3188d7-65b6-4fdc-a7ba-58e5d5e0a374",
                                    "requirements": "Code has been written to train the frequency-threshold based forecasting classifier $g$ using $D_R^{train}$.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "9984fbbb-8bb5-4a00-9e59-4a4130829169",
                                            "requirements": "Code has been developed to fine-tune the entire FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{train}$ using the hyperparameters in \"Section 4.1 -- Hyperparameters\", thereby creating $|D_R^{train}|$-many models.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "25eee9c4-f9d0-4344-b255-63713a3df003",
                                            "requirements": "Code has been developed to compute the ground-truth forgetting binary indicator $z_{ij}$ for all pairs $(x_i, y_i) \\in D_R^{\\text{train}}$ and $(x_j, y_j) \\in \\hat{D}_{PT}$ by evaluating the copy of FLAN-T5_{3B} fine-tuned using the LoRA adaptation to model parameters on each $(x_i, y_i)$ on the corresponding $j$th sample from $\\hat{D}_{PT}$ and grading the output using the Exact Match score.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "92f6c652-4ccf-404a-905b-7d016525342a",
                                            "requirements": "Code has been developed to train the frequency-threshold based forecasting function $g$ on $D_R^{train}$ using the binary indicator $z_{ij}$, and to find a value for $\\gamma$ which maximizes the F1-score, as described in Section 3.1.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "d697f0f1-48d0-4a7b-bca5-27f6bf1c0167",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "ea55a15d-3b87-409d-a831-9417525611bc",
                                    "requirements": "For each copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it using the LoRA adaptation to model parameters on a random mini-batch of 4 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten by $g$ every 5 training steps using distillation loss against the base FLAN-T5_{3B} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "032d9061-bd50-4e56-844a-e763c79e565b",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "e97c7a6b-a0d2-4c99-9661-1ee7afef75ec",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "41a19121-ec2f-4ce8-99c7-84bbe9dbedbf",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "368dfa9e-c5c8-4fb4-a4cc-de3497df619c",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "91f1f81b-0411-40dc-87d9-aa00a9db5606",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "fbd5f8c3-43e4-4996-ac68-9b5bc58b055e",
                    "requirements": "Code has been developed to evaluate the replay with trainable logit based forecasting method on all model, dataset and fine-tuning configurations present in Table 4.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "a8e34d77-fabd-430d-8958-84d5aa5b6a7e",
                            "requirements": "Code has been developed to evaluate the replay with trainable logit based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "c0bd0b39-fafe-4ce1-a141-002fddb0c7fc",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c4d0f36c-1bf8-42da-88c5-ed04592431c5",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4c5b954d-68d9-4bf7-b8ce-4e1a4d7b8cff",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d0378f6e-5175-4a1b-98d9-2fafc17f0b5f",
                                    "requirements": "Code has been developed to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "b1a5b562-6c47-49f3-8b56-55cc3627a3d2",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "13698680-73f8-4a48-8d0d-ff4ade490ee9",
                                    "requirements": "Code has been written to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "251ef2b5-1ccf-4e94-bb13-45f59c6ee87e",
                                    "requirements": "For each copy of BART0_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base BART0_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "7a9cb744-a376-41ed-91cf-d74e9d1cf154",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "41f73af2-1078-45b9-a4c2-07abd3ef407e",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "33912ee2-985d-4aeb-a5bc-44ae294b8d0b",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "9a9edddc-5e5a-433f-9823-60f061a9bcf9",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "163c6d45-7682-4c54-85b7-987ef3f2223c",
                            "requirements": "Code has been developed to evaluate the replay with trainable logit based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "e66854d3-3734-4cd0-8361-189d5a06a33e",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b2238091-5d3b-455b-a6b5-3de077e16953",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "3bedbaa8-5100-4547-a612-78421ab0a9fb",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "80646b53-cbe2-4e16-8859-96627d74dbea",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "958eb6ec-5a7d-45fe-903e-2c84df321c7e",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "bd997469-8937-4fcb-8a87-77de702df0cf",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "a79c36fb-269b-43bb-8ae4-e84fd970fae8",
                                    "requirements": "For each copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $z_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "b0f0470d-5823-4194-b29d-33f2b34ac9e4",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5d6cb6b2-bb62-48ea-913b-355dbf4fc2f1",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "8259417d-ec41-42b0-8cf5-cffe5d4d679d",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "bb69d029-d191-40a2-8bee-dd0359df405f",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "34428a26-d232-4b8a-9880-afcdd69081bb",
                            "requirements": "Code has been developed to evaluate the replay with trainable logit based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "0b1e626f-35f9-46f8-89f4-df2bf140c4b3",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8730d8e9-7b86-4094-987b-cec8d3dea05f",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "d7eba443-2fec-4f56-b13a-74fb294405ca",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f5a27e4c-8915-4f98-8fc2-12f6d58ddcee",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "c2caf11e-e533-43a0-b1fe-99dc8c2f8b5e",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4933b798-afa6-43b1-a65a-c7ced61b9eb8",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "c0488026-5eb2-484d-8273-72f5dcabe1a6",
                                    "requirements": "For each copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it using the LoRA adaptation to model parameters on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "5ddc06b1-22a5-4f27-a2f1-3fe010d77f36",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "2ae3d40e-cbee-4428-9988-06ebb34a4702",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "fe404f38-9db0-4195-87bb-162a958ba6e5",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "bc58f4e9-89cc-4218-a0c7-cf5e8d98dda9",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "ec19d48f-7ffa-4e13-9d33-9334dfa12ea7",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "2d73c765-4cf0-4a8c-85a9-63e9e1402980",
                            "requirements": "Code has been developed to evaluate the replay with trainable logit based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "7cd01614-622c-4ea7-a8e0-f3be4c65a120",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "92c1d253-eb16-488b-ad06-1d75536d7a72",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6a961e01-2c70-4b71-a951-4dd659fa2c94",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 1 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "a22f34cd-f0fb-41bb-87d7-d0c7f57de0c5",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the trainable logit-based forecasting model as described in Algorithm 2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "8eac4bc6-a8b8-40a3-b038-1e829bbb9dac",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "fd9fd4d1-af3a-40df-9fe9-13a53c90ce8d",
                                    "requirements": "For each copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it using the LoRA adaptation to model parameters on a random mini-batch of 4 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 5 training steps using distillation loss against the base FLAN-T5_{3B} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "8451499e-1829-453a-b0cc-912aed47df3e",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "c8e48356-0dab-48e3-b2cc-9d150c74a68a",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c75721e0-7611-4ca7-a258-efe739e0519c",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "7978c487-6781-4961-bee0-3da7eae7b9f0",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "2e580624-21b2-4771-9aa5-9bd2ca599ec1",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "c5578a6c-52ac-4cc7-b724-4bb2dbd0ccb2",
                    "requirements": "Code has been developed to evaluate the replay with representation based forecasting method on all model, dataset and fine-tuning configurations present in Table 4.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "baed4d48-82ef-429c-b4a5-349991230358",
                            "requirements": "Code has been developed to evaluate the replay with representation based forecasting method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "1e25c554-0c01-4a47-99f7-835dde834f3c",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "bb9252b1-4aff-4710-993a-566f65db0319",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5369eaf1-b602-49be-a104-f8079ed48a12",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "231e403c-3c15-49f0-be75-c314b4697ddb",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "753fb2fc-ba39-4ac3-8434-e644e2e376ac",
                                    "requirements": "Code has been developed to train the encoding function $h$ for BART0_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "ad0eccd2-8fb9-4208-aa4e-ed288ca6270b",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ by implementing the representation forecasting model as described in Algorithm 4 using the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "87f0524b-bac7-4978-9d30-9a812b259443",
                                    "requirements": "Code has been written to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "3b3ae663-cf19-463e-8b56-671232b0548d",
                                    "requirements": "For each copy of BART0_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base BART0_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "333e63d8-4d69-4fcf-85f4-8aed4b0b3a8e",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e3442294-d0f9-4438-8c49-01170183d196",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "f664c411-075a-4c04-af2a-d5eccd69a751",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "0ffcba46-8475-424a-a889-18359f126acd",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "cb9e4c00-7493-41f7-b1bc-d48ec9496b1a",
                            "requirements": "Code has been developed to evaluate the replay with representation based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "b1ca25c7-465a-44e7-ac0f-d67e654a497a",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7dcd81de-dc13-4cd0-91e2-da8f305b9356",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "99439204-39cd-4ffb-8491-aa4c82889720",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "f5215eb4-3ab8-4e30-9901-47cd95a72670",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "c82bf90a-4fcd-429f-9313-bcbcee3f206e",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "f84e89e6-29bb-4737-a4c3-fddef85b5bac",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the representation forecasting model as described in Algorithm 4 and the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8512e379-cb22-4e4a-9941-f79d4eb2a8da",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "0ba72d1f-efcb-4d67-919e-8da8953809fb",
                                    "requirements": "For each copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "f54949cb-fc90-4f9f-a0bb-f793105464eb",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8dc48a99-aae0-42a1-8b10-d9f14e5ff592",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "83c5901a-e5f4-4a17-8889-4eb908d32a58",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "50fcef9c-1d5c-4dad-9557-081118ebdcfc",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "535e4039-6480-4fd8-91a7-af8304b9c8de",
                            "requirements": "Code has been developed to evaluate the replay with representation based forecasting method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "0cefa907-5edc-4b31-b3e6-0f7d4ac70840",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a3073b08-a7f6-4de0-9fd7-f60bdab960ca",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4fbad1c3-a64a-449d-9dee-3628bea1b3f8",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "95a74a85-27d9-4533-9415-a9d36de0a6fb",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "1694196d-34d2-4020-8e07-95f3f540b884",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{Large} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "0c1274ff-dffd-4162-8d16-c5770d68fcb9",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the representation forecasting model as described in Algorithm 4 and the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "3fcfdd5b-b675-4e92-beef-16599074d1ae",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "719b4afc-f184-4416-b614-44c8dde91e34",
                                    "requirements": "For each copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it using the LoRA adaptation to model parameters on a random mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "30278e59-5b00-4925-8919-2490d6b2c72c",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "1c59ef09-764a-4202-a243-54db9f7018db",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2fa29566-8ada-4468-8e3a-dd1754021899",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "72fe3497-e78c-4bdc-8027-b4b942537f29",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "842aee24-daba-4157-96f9-67e8f8b6694e",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "0be36838-8370-4a23-8f8a-5bedf11ae97a",
                            "requirements": "Code has been developed to evaluate the replay with representation based forecasting method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "340b22ae-499c-4fa1-8d89-20b102a0f796",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{train}$ and $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "380f4576-4d60-41e9-bf55-6b9d55181d7b",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1f2d7e60-995a-48dc-929f-743547181876",
                                    "requirements": "Code has been developed to compute the ground truth forgetting indicator $z_{ij}$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ and $D_R^{train}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8529db28-c96a-4674-96e1-a67f25d941fc",
                                    "requirements": "Code has been written to compute the bias term $b_j$ for all $(x_j, y_j) \\in D_R^{train}$ as described in Section 3.3 -- Forecasting with Frequency Priors.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "ea9883dc-c2ab-409c-8fe9-96a66111e498",
                                    "requirements": "Code has been developed to train the encoding function $h$ for FLAN-T5_{3B} using $\\hat{D}_{PT}$ as input $D_{PT}$ as described in Algorithm 3 in Appendix F.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "259c0fea-afc0-42d3-9f86-245e9468d702",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the predicted forgetting binary indicator $\\hat{z}_{ij}^{test}$ using the representation forecasting model as described in Algorithm 4 and the learned encoder $h$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "eb2d9378-36e4-4ce6-b2bd-35e35505fbe1",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "1469535a-3dd9-4051-897a-0e549ed32bf4",
                                    "requirements": "For each copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it using the LoRA adaptation to model parameters on a random mini-batch of 4 examples from $\\hat{D}_{PT}$ which were forecasted to be forgotten according to $\\hat{z}_{ij}^{test}$ every 5 training steps using distillation loss against the base FLAN-T5_{3B} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "4b99949c-1fb8-4264-be18-b1c2f08c280c",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "6c18df34-3846-4ebd-909d-3baaae4ec512",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "0d413f4a-3a59-4cc2-b511-f2c49d6df9b3",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "39846858-2343-49fd-8943-cbbdeb531d6b",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "8b44b1c3-e6c8-43cb-a899-36528f4b3288",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "7d56e39a-9692-4911-8e7a-ae54d9a58eb3",
                    "requirements": "Code has been developed to evaluate the ground truth forgetting replay method on all model, dataset and fine-tuning configurations present in Table 4.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "6e0eb5c3-8590-4efd-a52c-0e4e9bbc32bb",
                            "requirements": "Code has been developed to evaluate the ground truth forgetting replay method using BART0_{Large}, the P3 test set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "075b6fb1-0a35-4b08-9b84-043f5d540377",
                                    "requirements": "Code has been written to generate predictions on the test set of the P3 dataset using BART0_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "740b85af-7811-4656-ba3c-8799daaf0820",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using BART0_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "524c27cf-b64a-4eb4-b43f-be37972e22ee",
                                    "requirements": "Code has been written to fine-tune the entirety of the BART0_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "13c70b74-370b-46ab-98ba-95e77475ee80",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of BART0_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "984cec31-9582-42b0-9ef2-a1b8fb02f9bb",
                                    "requirements": "For each copy of BART0_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it on a mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forgotten according to $z_{ij}^{test}$ every 10 training steps using distillation loss against the base BART0_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "e36bd0dc-442c-4b58-8d61-59155eb53969",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c4ace52d-b230-4e3e-80f7-6d8db8d9edb4",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using BART0_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "95fe8227-1007-4ff6-8f7e-f0186dadf2dd",
                                            "requirements": "The P3 test split in https://github.com/INK-USC/ReCross/blob/main/data/ was used when evaluating forecasting methods using the BART0_{Large} model, specifically using the following tasks: super_glue-wsc.fixed, winogrande-winogrande_xl, super_glue-cb, super_glue-rte, anli, super_glue-copa, hellaswag and super_glue-wic.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "7c5f399a-97d1-42f7-8ad2-96cd1f48fc31",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "64de0012-bd6b-47b3-ab91-50116c72e789",
                            "requirements": "Code has been developed to evaluate the ground truth forgetting replay method using FLAN-T5_{Large}, the MMLU validation set and the full fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "133fb3ac-2c53-44f5-83da-29c681f0c655",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6a9c4c4a-d317-4e3e-ab18-54a450211d7d",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c963875e-1d5e-4895-a8b5-d9caeba1cc44",
                                    "requirements": "Code has been developed to fine-tune the entirety of the FLAN-T5_{Large} model on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "3cbc0dab-ae95-4b52-83e4-a844d8a5b4ab",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1148b7ad-8210-4867-842b-a5f23e79197e",
                                    "requirements": "For each copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it on a mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forgotten according to $z_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "9c44ed49-4ffa-4e81-8f49-afe12ef36217",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e610e431-d3ed-4cdb-a291-dc1a73aa3ef6",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "79ff40d0-1013-44db-b0be-f80ce85d40a8",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "cde3dd3b-b3fd-4603-963d-83365b0a55b5",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "e6d80a13-d587-4231-a667-3ac3edabe148",
                            "requirements": "Code has been developed to evaluate the ground truth forgetting replay method using FLAN-T5_{Large}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "fbe3a850-a470-4ea1-a2b9-b60c255e256f",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "0299f2d6-ed24-4207-a225-122e7e1d65de",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{Large} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "c14d0fdf-da77-438c-9993-5b39daac6091",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{Large} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "c7e71699-86e7-476f-8cca-7f1deb18ee63",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "185f67fb-786f-43d3-942c-49cb05d7088a",
                                    "requirements": "For each copy of FLAN-T5_{Large} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it using the LoRA adaptation to model parameters on a mini-batch of 8 examples from $\\hat{D}_{PT}$ which were forgotten according to $z_{ij}^{test}$ every 10 training steps using distillation loss against the base FLAN-T5_{Large} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "34e2200a-bc05-48b6-a603-aede8afd0b05",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "65c82d0e-b316-4c85-898a-811c97039a5b",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "943a0de5-5f14-4573-8916-23447efd39fa",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "a50afc5c-d6f0-4b01-9aad-893b5f8bbe18",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{Large}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "5f1b7c13-edaf-40b7-a01a-5dba31ced398",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "110e7af6-b9e6-4478-b351-2a00d12ade82",
                            "requirements": "Code has been written to evaluate the ground truth forgetting replay method using FLAN-T5_{3B}, the MMLU validation set and the LoRA fine-tuning setup.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "13c7cd54-7b95-40ef-8073-38efc422e5f4",
                                    "requirements": "Code has been written to generate predictions on the validation set of MMLU using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset $D_R^{test}$ as described in Section 4.1.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e73ec461-66a6-43e1-9507-0847407de787",
                                    "requirements": "Code has been written to generate predictions on the pre-training dataset $D_{PT}$ using FLAN-T5_{3B} and graded using the Exact Match score to create the dataset of correct pre-training samples, $\\hat{D}_{PT}$, as described in Section 2 -- Forecasting Forgetting.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a4593b27-8f17-420a-853e-81bb6130ec33",
                                    "requirements": "Code has been developed to fine-tune the FLAN-T5_{3B} model using the LoRA adaptation to model parameters on each $(x_i, y_i) \\in D_R^{test}$, thereby creating $|D_R^{test}|$-many separate models, as described in Section 5.2, and using the hyperparameters outlined in \"Section 4.1 -- Hyperparameters\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "0d82fde1-dcdd-4ac9-a6d2-a1a86cbd77d5",
                                    "requirements": "For each pair $((x_i, y_i), (x_j, y_j)) \\in D_R^{test} \\times \\hat{D}_{PT}$, code has been written to compute the ground-truth forgetting binary indicator $z_{ij}^{test}$ by evaluating the copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$ against $(x_j, y_j)$ and evaluating the output using the Exact Match score.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1aa2cc93-b142-4c9b-a03b-68bbc767d240",
                                    "requirements": "For each copy of FLAN-T5_{3B} fine-tuned on $(x_i, y_i)$, code was also written to fine-tune it using the LoRA adaptation to model parameters on a mini-batch of 4 examples from $\\hat{D}_{PT}$ which were forgotten according to $z_{ij}^{test}$ every 5 training steps using distillation loss against the base FLAN-T5_{3B} model, thereby 'replaying' examples, as described in Section 4.2 -- Model Refinement.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "a3e144cd-ea3a-41e0-978c-7eb687e71103",
                                    "requirements": "LoRA was applied to the query and value (but not key) matrices in all self-attention layers.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "17c37f94-c2b2-40aa-81c4-b99d724f0238",
                                    "requirements": "Code has been written to compute the average Exact Match Drop Ratio (%) across each of the $|D_R^{test}|$-many refined models, as described in \"Section 2 -- Model Refinement\".",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f2d82102-5bea-4741-b3e6-5fc43088382a",
                                    "requirements": "The correct dataset splits and tasks were used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "c9831188-4982-4aca-9e8f-a18b1e6a5ccf",
                                            "requirements": "The original validation split of the MMLU dataset containing 57 tasks, available at https://people.eecs.berkeley.edu/~hendrycks/data.tar, was used when evaluating forecasting methods using FLAN-T5_{3B}.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "4b64643c-ec15-4831-961f-de4134258d69",
                                            "requirements": "$D_R$ is randomly split into 60% and 40% subsets to create the $D^{Train}_R$ and $D^{Test}_R$.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "9bf67420-095d-4760-a8f2-b9164237137b",
                    "requirements": "All code necessary to reproduce the results shown in Table 4 has been executed and the Exact Match Drop ratios for all model, dataset and fine-tuning configurations have been recorded.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "14bc3d05-ddf5-434f-bc67-62db48be2525",
                            "requirements": "The code to evaluate the vanilla fine-tune method on all model, dataset and fine-tuning configurations present in Table 4 has been executed and the Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "99a4bfad-a80e-468c-a314-b1d0a94ebc37",
                            "requirements": "The code to evaluate the replay with frequency-threshold based method on all model, dataset and fine-tuning configurations present in Table 4 has been executed and the Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "c12ea1e8-5d16-4533-b9b9-5a0ebf2b01cf",
                            "requirements": "The code to evaluate the replay with fixed-logit based forecasting method on all model, dataset and fine-tuning configurations present in Table 4 has been executed and the Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "c89b83de-bbeb-4f4b-8605-b24f79a2ae1e",
                            "requirements": "The code to evaluate the replay with trainable logit based forecasting method on all model, dataset and fine-tuning configurations present in Table 4 has been executed and the Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "0c5192a3-e9db-4d30-affe-1abbfaa72178",
                            "requirements": "The code to evaluate the replay with representation based forecasting method on all model, dataset and fine-tuning configurations present in Table 4 has been executed and the Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "eec6bd65-93d0-4d63-9cd8-6b2a78f9bcc2",
                            "requirements": "The code to evaluate the ground truth forgetting replay method on all model, dataset and fine-tuning configurations present in Table 4 has been executed and the Exact Match Drop Ratios have been recorded.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "d0a62321-ca31-4f9b-841e-4773c10e66f2",
                    "requirements": "The recorded Exact Match Drop ratios match those as presented in Table 4.",
                    "weight": 2,
                    "sub_tasks": [
                        {
                            "id": "d59425d1-58ab-491f-8901-2789f369a606",
                            "requirements": "The recorded Exact Match Drop Ratios show that the ground truth forgetting replay method has the lowest Exact Match Drop Ratio for all evaluated model, dataset and fine-tuning setups.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "2989e54d-5471-468f-a448-4bec0573878b",
                            "requirements": "The recorded Exact Match Drop Ratios show that the replay with representation based forecasting method has the second lowest Exact Match Drop Ratios for all evaluated model, dataset and fine-tuning setups, second only to the ground truth forgetting replay method.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "55bfda49-4a45-4c17-bc93-a1dac8a9da2d",
                            "requirements": "The recorded Exact Match Drop ratios show that replaying examples forecasted to be forgotten by the representation-based forecasting method can reduce forgetting (EM Drop ratio) to roughly 2.2% for BART0_{Large} and < 0.1% for FLAN-T5_{Large} and FLAN-T5_{3B}.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        }
    ],
    "task_category": null,
    "finegrained_task_category": null
}