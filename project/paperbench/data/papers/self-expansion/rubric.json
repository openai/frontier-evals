{
    "id": "73912884-0711-4f49-8ee4-dc0d1bcae21b",
    "requirements": "The paper 'Self-Expansion of Pre-trained Models with Mixture of Adapters for Continual Learning' has been reproduced",
    "weight": 1,
    "sub_tasks": [
        {
            "id": "5b88aaa9-8bf2-4346-ad0d-4656eb6a0dd9",
            "requirements": "Code has been implemented such that a ViT-B/16 model pretrained on ImageNet-1K can be loaded into memory",
            "weight": 1,
            "sub_tasks": [],
            "task_category": "Code Development",
            "finegrained_task_category": "Dataset and Model Acquisition"
        },
        {
            "id": "6bf1b973-1bab-4e6d-b95f-d5ab8a179b68",
            "requirements": "The datasets from Section 4.1 have been imported.",
            "weight": 2,
            "sub_tasks": [
                {
                    "id": "3aabf7f3-3079-4a8b-8953-37ad230f8992",
                    "requirements": "The train and test sets of CIFAR-100 are available",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Dataset and Model Acquisition"
                },
                {
                    "id": "3964f08d-b6c6-4b00-ad76-1e736728aa94",
                    "requirements": "The train and test sets of of ImageNet-R are available",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Dataset and Model Acquisition"
                },
                {
                    "id": "b4553344-eb16-4a4d-a410-216a1d413a99",
                    "requirements": "The train and test sets of ImageNet-A are available",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Dataset and Model Acquisition"
                },
                {
                    "id": "f727d425-215a-486a-b0ef-9fe5b2057e23",
                    "requirements": "The train and test sets of VTAB are available. The VTAB dataset used is the VTAB subset from the ADAM paper; only five domains are used, and the domain order is fixed to \"resisc45 10-19; dtd 20-29; pets 30-39; eurosat 40-49; flowers 50-59\". Only 10 classes are selected and used for each domain; the numbers denote the class index of the 10 classes for each domain. For example, 10-19 denotes the 10th - 19th classes are in resisc are used. The original resisc contains 45 classes.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Data Processing & Preparation"
                },
                {
                    "id": "638c80be-8c5f-43a4-b24a-33bba041660d",
                    "requirements": "Datasets (CIFAR-100, ImageNet_R, ImageNet-A) are split in a manner where each task/domain consists of 10 distinct classes",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Data Processing & Preparation"
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "520b38a4-5a12-4974-befd-ea7c9cd47f09",
            "requirements": "The LoRA, Convpass and ADAM adapters are available",
            "weight": 2,
            "sub_tasks": [
                {
                    "id": "2fc5dc38-c1b5-419d-a2ea-4629b27b85b2",
                    "requirements": "The LoRA adapter can be applied (it is either implemented or an existing implementation is imported)",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                },
                {
                    "id": "7fa8715e-3ab6-4116-be67-eb1baeb1d8de",
                    "requirements": "The Convpass adapter architecture has been implemented from https://github.com/JieShibo/PETL-ViT/blob/main/convpass/vtab/convpass.py and can be selected as the functional adapter",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                },
                {
                    "id": "e0aa0321-72f7-447b-b98d-06527a5fa4bf",
                    "requirements": "The ADAM \"adapter\" is implemented from https://github.com/ShoufaChen/AdaptFormer/blob/main/models/adapter.py",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "672d5ac7-da5f-4664-bf98-805c6f88222a",
            "requirements": "The architecture and training loop of SEMA have been implemented correctly, as in Section 3.",
            "weight": 5,
            "sub_tasks": [
                {
                    "id": "58788292-a2d4-4966-b237-b0da89093813",
                    "requirements": "The architecture of SEMA has been implemented correctly.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "91d54ba7-28a9-47c6-ab6c-1eb5a7ad76fa",
                            "requirements": "The functional adapter, representation descriptor, and router have been implemented correctly",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "dc0de847-ec32-40f3-9f7b-3b056ba43a3e",
                                    "requirements": "The functional adapter has been implemented correctly as described in Section 3.3, as a learnable down projection layer, then a ReLU function, then a learnable up projection layer",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "5532ed14-2850-49ca-976f-6873dcca6524",
                                    "requirements": "The representation descriptor is implemented as an autoencoder with an encoder, non-linearity, then decoder",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "2da70bdf-21c8-487f-83b5-091929ce056c",
                                            "requirements": "The encoder of the representation descriptor is implemented as a linear layer that projects to 128 dimensions",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "6c7fab21-2130-4f8e-a472-1722b8fa8643",
                                            "requirements": "LeakyReLU is applied to the output of the encoder of the representation descriptor",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "f76f7de8-b0f0-4bf6-ad9c-5c45bdf027aa",
                                            "requirements": "The decoder of the representation descriptor is implemented as a linear layer that projects from 128 dimensions back to the original dimensionality",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "b990c55b-8d9b-47e5-ba2a-ab8050e26eb9",
                                    "requirements": "The router has been implemented as a linear mapping function (using a learnable matrix) followed by a softmax operation",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "6ff21272-360d-4e2b-8f1e-9692fd288364",
                            "requirements": "The functional adapter, representation descriptor and router have been correctly integrated into a transformer layer",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "c1e41bb2-f119-4577-ab3b-6ea9cb4d7467",
                                    "requirements": "The output of the second normalization layer (after the first normalization layer, then multi-head self-attention, then residual connection) is used as input for the representation descriptors, functional adapters, and router",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "8f70800b-dc7b-4ad2-845e-78966f029223",
                                    "requirements": "A linear combination of the outputs of the functional adapters is computed, with the weights corresponding to the output of the router",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "7cf18f2c-1622-477d-b5b4-2c3359bec297",
                                    "requirements": "A linear combination of the outputs of the functional adapters is added to the output of the fully connected layer and the residual layer in the transformer block to produce the output for the transformer layer",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "c9c02003-1594-4af0-9a26-25260089a611",
                    "requirements": "The training loop of SEMA has been implemented correctly.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "505dd960-6d1e-4a62-8627-5da5b3b51043",
                            "requirements": "When training SEMA, the parameters of the pretrained model (e.g. ViT) are frozen.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "186e1f6a-31bb-4df7-b44e-41544010b083",
                            "requirements": "When training SEMA, the running statistics of the mean and standard deviation of the reconstruction error are stored for each representation descriptor, using the previous 500 samples (over all tasks) that were used for training prior to the current sample",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "85768b74-9fe9-470f-9166-490c2a6f6eb2",
                            "requirements": "When training SEMA, the z-score corresponding to the $k$-th representation descriptor in layer $l$ can be computed as $z_k^l = (r_k^l - u_k^l)/\\sigma_k^l$, where $r_k^l$ is the reconstruction error of the current input, $u_k^l$ is the associated running mean of the representation descriptor, and $\\sigma_k^l$ is the associated running standard deviation of the representation descriptor",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "39da09eb-f8fd-4cfc-82de-d159d810195d",
                            "requirements": "When training SEMA, for a dataset containing $n_t$ samples for the $t$-th task, the SEMA algorithm has been implemented correctly to add and update adapters",
                            "weight": 3,
                            "sub_tasks": [
                                {
                                    "id": "3345ee1d-7c91-4f35-a34d-cc884f7381c7",
                                    "requirements": "When training SEMA on the $t$-th task, before starting any training, the layers that are valid for expansion are scanned iteratively for evaluating whether layers should have adapters added, from shallowest to deepest",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "4b3a8b1d-e03e-4f93-aab0-db267899e2a1",
                                    "requirements": "When training SEMA on the $t$-th task, when scanning each layer the reconstruction error is computed over all samples in the $t$-th task. No training occurs during this scanning, and no gradients are computed",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "ddf48454-e7b6-41ea-8133-4accd720eee6",
                                    "requirements": "When training SEMA on the $t$-th task, when scanning each layer, if after some sample, all the z-scores of all the representation descriptors on some layer are above some pre-defined threshold, an expansion signal is triggered for such layer, and an adapter is added to such layer and trained on the task $t$. After training on the task $t$, the next deepest layer is scanned. If no deeper layer exists, the training proceeds to the next task, and the scanning restarts from the first (valid) layer",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "ac81c23b-6d25-457b-be95-e20264c29e1b",
                                    "requirements": "When training SEMA on the $t$-th task, when scanning each layer, if no expansion signals are triggered, the task is skipped (no training is performed for such task and no adapters are added), and all existing functional adapters and representation descriptors are frozen",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "cc3e2851-ff2e-4533-bfde-8672a798f64b",
                                    "requirements": "When training SEMA, when adding a new adapter and retraining, the parameters to freeze / update have been correctly chosen as in Section 3.5.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "f3854228-889d-4a91-8d17-399677173729",
                                            "requirements": "When training SEMA, when adding a new adapter, the weights in the new adapter are learnable, and all the weights in the other adapters in all other layers are frozen.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "2d34ab6a-eae2-4df9-845f-6d0c680dacc5",
                                            "requirements": "When training SEMA, when adding a new adapter, the weights in the representation descriptor corresponding to the new adapter are learnable, and all the other weights in the other representation descriptors are frozen.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "ede350f7-1ac5-4f6b-ad2c-3f97d24881f4",
                                            "requirements": "When training SEMA, when adding a new adapter, the weights in the router corresponding to the new adapter are learnable parameters, and all the other weights in the router are frozen.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "9aeec6b6-c3c2-40a1-b1f7-c56fda9c4983",
                            "requirements": "When a new task is added, the classification head has been expanded to handle the new classes",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "01e981c9-e995-42d0-80d8-e1b3f55e3033",
                            "requirements": "When training SEMA, the training loss and its components including the cross-entropy loss and the reconstruction loss have been implemented correctly, as defined in Section 3.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "061cf57d-6d29-4850-85eb-99934f8e65b3",
                                    "requirements": "For training SEMA, the loss of the model $F$ is implemented correctly; given an input-label pair $(x, y)$, the cross entropy loss between the output of the model $F(x)$ and $y$ is computed",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "5b0fa5b0-bd67-47d4-be6b-f90527f85a49",
                                    "requirements": "For training SEMA, the reconstruction loss for the representation descriptors is implemented correctly; given an input $x$ to the representation descriptor $g$, the loss is computed as the 2-norm of the difference between the input and output; $||x - g(x)||_2^2$",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "7c152eab-cdfd-4c02-8107-8f72fff4006b",
                                    "requirements": "For training SEMA, the overall loss given an input-label pair $(x, y)$ is computed as the cross-entropy loss of the output of the network with the label $y$ and the sum of reconstruction losses of all representation descriptors across all layers",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "04a2b384-6ec8-4c1e-b96b-a699837708f3",
            "requirements": "The baseline methods have been implemented, as in Section 4.1.",
            "weight": 3,
            "sub_tasks": [
                {
                    "id": "615fad10-fa3c-4891-a1e9-72a9e48cd7a2",
                    "requirements": "The Finetune Adapter baseline has been implemented",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "821e4ced-2ead-46e8-bd3b-80a6b5ab3d98",
                            "requirements": "The Finetune Adapter baseline is implemented by adding one SEMA adapter to each of all layers in the frozen ViT",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "213fe0b4-346f-4c1f-b7b2-23f198b3e03e",
                            "requirements": "The Finetune Adapter baseline is trained by continually fine-tuning the SEMA adapters throughout all tasks in the task stream encountered during training",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "033c6646-e283-4075-923b-e16e70c3320e",
                            "requirements": "When training the Finetune Adapter baseline, the backbone ViT is frozen and only the (parameters of the) adapters are updated continually by all tasks",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "2522988f-d45e-4537-94a9-c4748671883e",
                    "requirements": "L2P has been implemented, using the implementation available within this repo: https://github.com/sun-hailong/LAMDA-PILOT",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                },
                {
                    "id": "e40c9f90-3815-4876-a944-68673586aa1e",
                    "requirements": "DualPrompt has been implemented, using the implementation available within this repo: https://github.com/sun-hailong/LAMDA-PILOT",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                },
                {
                    "id": "65005d38-e4e9-44c5-a08c-d05e9856ed20",
                    "requirements": "CODA-P has been implemented, using the implementation available within this repo: https://github.com/sun-hailong/LAMDA-PILOT",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                },
                {
                    "id": "258321d1-3921-4d88-a955-42c4d6a75683",
                    "requirements": "SimpleCIL has been implemented, using the official implementation at https://github.com/zhoudw-zdw/RevisitingCIL",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                },
                {
                    "id": "897aae5d-6cef-4135-9266-b432afef1cf7",
                    "requirements": "ADAM with Adapter has been implemented, using the official implementation at https://github.com/zhoudw-zdw/RevisitingCIL",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "3b9da641-cf0e-45d4-88f9-407e9f361bb8",
            "requirements": "The accuracy formulas are implemented correctly as in Section B.3.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "9b147fe2-16a2-4976-8242-e175b390510b",
                    "requirements": "The average accuracy $A_N$ of all seen tasks after training on the $N$-th task, is computed as $A_N = \\frac{1}{N} \\sum_{i=1}^N A_{i,N}$, where $A_{i,N}$ is the accuracy of the $i$-th task after training on the $N$-th task",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                },
                {
                    "id": "db420a9d-1f89-4455-b1e3-5224229785e7",
                    "requirements": "The average incremental accuracy $\\bar{A}$ is computed as $\\bar{A} = \\frac{1}{N} \\sum_{t=1}^N A_t$, where $A_t$ is the average accuracy on all seen tasks after training on the $t$-th task",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "95e7fd20-9a03-4ac5-9b5b-16de4608e7e3",
            "requirements": "All results from the paper have been replicated",
            "weight": 10,
            "sub_tasks": [
                {
                    "id": "bc74e7d3-ba2f-4adb-8666-73157f7c6e7d",
                    "requirements": "The hyperparameters stated in Section 4.1 have been used, unless otherwise stated",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "06cd5080-8910-4fe1-88e7-6d75b10c6ddb",
                            "requirements": "All adapters are trained for 5 epochs.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "256cc0e7-eb7b-4514-8a17-821098949e4e",
                            "requirements": "The representation descriptors are trained for 20 epochs.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "4b60235a-76f2-4412-933b-37b370fb319d",
                            "requirements": "The batch size is 32.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "0e607305-df2a-4523-ac80-6812389f9a4b",
                            "requirements": "SGD is used as the optimizer, and the learning rates and schedules are consistent with those in Section 4.1.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "5ecb2fba-990a-4b97-b510-7e26d3eb257f",
                                    "requirements": "SGD is used as the optimizer.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "2ca0acae-e483-4fa7-8157-881db51eb711",
                                    "requirements": "The learning rates are correct.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "81f71ca5-7f2b-45b9-9c44-a8ee5da1563b",
                                            "requirements": "The initial learning rate is set to 0.005 for adapters.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "ed1f909f-6dbd-4622-8307-fe24e0fd22e2",
                                            "requirements": "The initial learning rate is set to 0.01 for representational descriptors.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "3be032fb-a0c4-47c1-9311-f17a0dcd1fd1",
                                    "requirements": "The learning rate decays with cosine annealing.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "39b9fadf-ef29-480e-9084-279e30bf9e0e",
                            "requirements": "Self-expansion is only enabled in the last three transformer layers.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "253a9dca-1d45-4c3f-af01-2347893e39b3",
                            "requirements": "The adapters in SEMA and ADAM project down to a dimensionality of 48",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "15d4ee30-6d88-4fac-8cbe-cb534187d039",
                    "requirements": "The results in Section 4.2 have been replicated",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "40e92dc8-664f-40d1-aa1c-251bf852fbd4",
                            "requirements": "The experiments required to replicate results in Section 4.2 have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "52ec694d-c55f-40dd-ba20-eb320090b593",
                                    "requirements": "The Finetune Adapter has been trained and evaluated on all datasets",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "f5975474-4486-4a72-b12a-4fcb821e74d0",
                                            "requirements": "The Finetune Adapter has trained and evaluated on the CIFAR-100 dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "192d5f0a-8465-42bd-8ec6-b7e71ca5f33f",
                                                    "requirements": "The Finetune Adapter baseline has been trained on the CIFAR-100 dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "26ae9c3c-3e90-453e-9f31-5a80bd455213",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the Finetune Adapter baseline during training on the CIFAR-100 dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "0b974c55-6589-4e9f-95c0-64f163ed77f6",
                                                    "requirements": "The incremental accuracy of the Finetune Adapter baseline during training on the CIFAR-100 dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "822af1a4-f587-435b-bc19-8e6a2a3858d1",
                                            "requirements": "The Finetune Adapter has been trained and evaluated on the ImageNet-R dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "69a418f5-05c9-44b5-8d69-5b0a94573144",
                                                    "requirements": "The Finetune Adapter baseline has been trained on the ImageNet-R dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "d4e485c4-a554-4ea1-8e6a-fb608e945b24",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the Finetune Adapter baseline during training on the ImageNet-R dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "cfca4361-1647-41e8-a4b8-cea6b6c37add",
                                                    "requirements": "The incremental accuracy of the Finetune Adapter baseline during training on the ImageNet-R dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "9d57de21-4d7a-4e64-a023-ad77aa615d2a",
                                            "requirements": "The Finetune Adapter has been trained and evaluated on the ImageNet-A dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "13236aed-6725-40b8-b833-a0dc8a806bf6",
                                                    "requirements": "The Finetune Adapter baseline has been trained on the ImageNet-A dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "16c22564-007b-4b6a-b462-3d7ab9014c3d",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the Finetune Adapter baseline during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "579dfe1c-9ed2-4084-a203-ecabaf8b0c4b",
                                                    "requirements": "The incremental accuracy of the Finetune Adapter baseline during training on the ImageNet-A dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "979dd951-9fdd-4780-a875-b9b6c14cff11",
                                            "requirements": "The Finetune Adapter has been trained and evaluated on the VTAB dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "0a7f5caf-0714-4bd9-b575-c0f0e59d48eb",
                                                    "requirements": "The Finetune Adapter baseline has been trained on the VTAB dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "9a243585-d2da-42cf-ba6e-e514a39012b6",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the Finetune Adapter baseline during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "2ed1c7e3-5e32-47fd-8103-017178704161",
                                                    "requirements": "The incremental accuracy of the Finetune Adapter baseline during training on the VTAB dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "345075ee-3a8a-4ed5-a798-90a3094083cd",
                                    "requirements": "The L2P baseline has been trained and evaluated on all datasets",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "6687260d-4b8b-4f06-b371-5d47f9b3ee37",
                                            "requirements": "The L2P baseline has trained and evaluated on the CIFAR-100 dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "e8a269ed-6bc4-4cfc-90b0-64790b6bec74",
                                                    "requirements": "The L2P baseline has been trained on the CIFAR-100 dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "a1b55b52-8665-477e-b583-a3a1e331525c",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the L2P baseline during training on the CIFAR-100 dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c4bebbb6-4ab9-431b-a44c-93aca56872e6",
                                                    "requirements": "The incremental accuracy of the L2P baseline during training on the CIFAR-100 dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "1b3e6c0b-f64e-4454-b85a-cfdb90059f11",
                                            "requirements": "The L2P baseline has been trained and evaluated on the ImageNet-R dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "05874696-8483-4a4b-b7ac-7c1cbe1a6b60",
                                                    "requirements": "The L2P baseline has been trained on the ImageNet-R dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "9be7a9d0-8ac9-4df1-9dad-02abf7a2eb12",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the L2P baseline during training on the ImageNet-R dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "d52a6d71-2b3f-4c51-8ffa-9d420776880d",
                                                    "requirements": "The incremental accuracy of the L2P baseline during training on the ImageNet-R dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "38470b3f-d86c-417e-b0ed-5a30e9a9bce2",
                                            "requirements": "The L2P baseline has been trained and evaluated on the ImageNet-A dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "eb076b13-d21f-48dd-89e8-ede70f119a75",
                                                    "requirements": "The L2P baseline has been trained on the ImageNet-A dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "6c0812b0-c13b-4cac-bb69-94ad1d7522b5",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the L2P baseline during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "4724438d-92dd-44df-a51a-34521d2c8ea9",
                                                    "requirements": "The incremental accuracy of the L2P baseline during training on the ImageNet-A dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "39d5f4b1-7711-45cb-8410-ff99eeea3a03",
                                            "requirements": "The L2P baseline has been trained and evaluated on the VTAB dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "dbdf1a55-a18a-42d1-ba50-0e335e574596",
                                                    "requirements": "The L2P baseline has been trained on the VTAB dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "c0b9fac8-c6f1-42f6-8340-908b9675f4c0",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the L2P baseline during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "81a4f03e-9869-4df9-b827-b6fce4a2a8d2",
                                                    "requirements": "The incremental accuracy of the L2P baseline during training on the VTAB dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "08b45d8a-2b9b-4b43-b9ea-febe658c8c69",
                                    "requirements": "The DualPrompt baseline has been trained and evaluated on all datasets",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "20cdf78f-a01a-4472-be34-6909afc36dd0",
                                            "requirements": "The DualPrompt baseline has trained and evaluated on the CIFAR-100 dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "2f9a66b3-8474-426c-a5b8-c6be1000c987",
                                                    "requirements": "The DualPrompt baseline has been trained on the CIFAR-100 dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "d1650d7a-0bfe-427e-ad50-840dfcbd0215",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the DualPrompt baseline during training on the CIFAR-100 dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "1270002b-256d-499a-99cb-b9454c189464",
                                                    "requirements": "The incremental accuracy of the DualPrompt baseline during training on the CIFAR-100 dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "1d9f8127-2a3a-47aa-90ad-c1f135ea2438",
                                            "requirements": "The DualPrompt baseline has been trained and evaluated on the ImageNet-R dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "09d9ee7d-f276-4f97-901a-e16bfa510d2f",
                                                    "requirements": "The DualPrompt baseline has been trained on the ImageNet-R dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "e0841bd6-3ee5-414c-b579-34058dc7a476",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the DualPrompt baseline during training on the ImageNet-R dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "747afc17-942d-42be-98c5-d1e1649616b2",
                                                    "requirements": "The incremental accuracy of the DualPrompt baseline during training on the ImageNet-R dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "172249f7-6d70-4b7c-991f-793774e389a6",
                                            "requirements": "The DualPrompt baseline has been trained and evaluated on the ImageNet-A dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "da7fdd37-7d05-4d35-bac7-75fc9e753d5d",
                                                    "requirements": "The DualPrompt baseline has been trained on the ImageNet-A dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "3439a080-4f7d-4e17-a733-c854a52a83ce",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the DualPrompt baseline during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "89e2d79e-c189-442d-91db-a3999c7a8bba",
                                                    "requirements": "The incremental accuracy of the DualPrompt baseline during training on the ImageNet-A dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "51149fd0-842a-41e0-a924-2d195834c4bb",
                                            "requirements": "The DualPrompt baseline has been trained and evaluated on the VTAB dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "cd7a377f-e43b-4dc8-9c57-4321323c03eb",
                                                    "requirements": "The DualPrompt baseline has been trained on the VTAB dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "6e295ddf-4558-4ae5-b6be-6904251bf465",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the DualPrompt baseline during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "f974b5e9-f577-48a9-b9d0-e2cfb54599a8",
                                                    "requirements": "The incremental accuracy of the DualPrompt baseline during training on the VTAB dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "570fc9b2-c34d-4571-8c31-7731e2a8cb03",
                                    "requirements": "The CODA-P baseline has been trained and evaluated on all datasets",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "e9d13fdc-6b1e-4c81-8bf5-68df3b90c471",
                                            "requirements": "The CODA-P baseline has trained and evaluated on the CIFAR-100 dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "0e3ef2ca-c244-41b9-9a7d-984e76a8023f",
                                                    "requirements": "The CODA-P baseline has been trained on the CIFAR-100 dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "b73b37e9-1921-4595-97dd-9590e3ece961",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the CODA-P baseline during training on the CIFAR-100 dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "a147e3f0-ff9d-4324-b9d0-0d9a40618009",
                                                    "requirements": "The incremental accuracy of the CODA-P baseline during training on the CIFAR-100 dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "a0d56e20-bf30-4980-ad5c-d8f5e74cf0dd",
                                            "requirements": "The CODA-P baseline has been trained and evaluated on the ImageNet-R dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "7a6875cc-6817-4aa0-8b17-4fb38be67d98",
                                                    "requirements": "The CODA-P baseline has been trained on the ImageNet-R dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "17908706-adca-40cb-9cf4-51c11074bd1f",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the CODA-P baseline during training on the ImageNet-R dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "718ec9cb-442c-49c8-b6a8-3f34e47f0dd2",
                                                    "requirements": "The incremental accuracy of the CODA-P baseline during training on the ImageNet-R dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "b622872a-8522-488e-97f8-44db69870f83",
                                            "requirements": "The CODA-P baseline has been trained and evaluated on the ImageNet-A dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "375b7bcb-d19d-4766-9d81-c87c19cfc26a",
                                                    "requirements": "The CODA-P baseline has been trained on the ImageNet-A dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "0bfe5cc5-7115-4e94-b482-241889d50492",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the CODA-P baseline during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "bbdbde01-55a1-454d-9b57-5478321d8d30",
                                                    "requirements": "The incremental accuracy of the CODA-P baseline during training on the ImageNet-A dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "11be923c-13a3-4e2a-bd45-0a1eb3d68289",
                                            "requirements": "The CODA-P baseline has been trained and evaluated on the VTAB dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "185b60df-f765-4a82-a32e-d3b566769ace",
                                                    "requirements": "The CODA-P baseline has been trained on the VTAB dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "58163fe2-db78-42ce-b8c7-e93651cdb134",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the CODA-P baseline during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c3441c0e-60ee-45cd-adfe-6b048adfdb01",
                                                    "requirements": "The incremental accuracy of the CODA-P baseline during training on the VTAB dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "e41e1556-0d42-4dd3-b0e5-573e02ff1b73",
                                    "requirements": "The SimpleCIL baseline has been trained and evaluated on all datasets",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "d388a1ab-cb21-4680-8505-f9ae2f0130ae",
                                            "requirements": "The SimpleCIL baseline has trained and evaluated on the CIFAR-100 dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "a090a7e3-19b6-4e0a-8b68-5b545b95de2a",
                                                    "requirements": "The SimpleCIL baseline has been trained on the CIFAR-100 dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "97fb02ce-a6e6-4458-8617-bfab65687edc",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the SimpleCIL baseline during training on the CIFAR-100 dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "09aae679-d912-43ee-a696-f04f051a6c1d",
                                                    "requirements": "The incremental accuracy of the SimpleCIL baseline during training on the CIFAR-100 dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "0bc67e9a-e5ae-4f12-95dd-032de90d4549",
                                            "requirements": "The SimpleCIL baseline has been trained and evaluated on the ImageNet-R dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "0d712907-d5e4-4b19-96c9-2b002c5e744d",
                                                    "requirements": "The SimpleCIL baseline has been trained on the ImageNet-R dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "d6978e68-39f9-4f32-a3c8-3e2431a10055",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the SimpleCIL baseline during training on the ImageNet-R dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "e2244dfc-e8ce-49fa-81e6-fef56a5d7c58",
                                                    "requirements": "The incremental accuracy of the SimpleCIL baseline during training on the ImageNet-R dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "7f9014a9-d8a2-4f45-81f4-e2e98ce81b93",
                                            "requirements": "The SimpleCIL baseline has been trained and evaluated on the ImageNet-A dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "4925dc88-99f5-48eb-9c9e-65da2ec4dae5",
                                                    "requirements": "The SimpleCIL baseline has been trained on the ImageNet-A dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "f35c04f0-4510-49b6-ae19-998eaf5ed29c",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the SimpleCIL baseline during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "7b195482-9298-4854-8fe3-73573180b92e",
                                                    "requirements": "The incremental accuracy of the SimpleCIL baseline during training on the ImageNet-A dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "98ab9b95-6b04-4142-a139-255ddee6475e",
                                            "requirements": "The SimpleCIL baseline has been trained and evaluated on the VTAB dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "c9f55aa9-84d3-449b-8a2f-5ca6dea7c5fc",
                                                    "requirements": "The SimpleCIL baseline has been trained on the VTAB dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "d97eb786-4620-4370-99b1-84b99d736c1a",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the SimpleCIL baseline during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "eee2b9ed-1dd7-440f-9069-a33f02801532",
                                                    "requirements": "The incremental accuracy of the SimpleCIL baseline during training on the VTAB dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "c463ba05-61ef-4b32-867a-af21b624675e",
                                    "requirements": "The ADAM baseline has been trained and evaluated on all datasets",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "4293f59e-dfee-4a9e-b542-eb2284fd7c7e",
                                            "requirements": "The ADAM baseline has trained and evaluated on the CIFAR-100 dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "35932abf-afbd-42d8-8c4f-5c1f26467332",
                                                    "requirements": "The ADAM baseline has been trained on the CIFAR-100 dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "7143f82b-35c2-48c2-a409-43113afb7777",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the ADAM baseline during training on the CIFAR-100 dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "fdbca1a2-e9a8-4344-9101-7045c9242517",
                                                    "requirements": "The incremental accuracy of the ADAM baseline during training on the CIFAR-100 dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "8d6c37e2-cff9-4d50-961e-6347175c0b72",
                                            "requirements": "The ADAM baseline has been trained and evaluated on the ImageNet-R dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "9a0968f0-3799-4179-afbf-e8c354a8b711",
                                                    "requirements": "The ADAM baseline has been trained on the ImageNet-R dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "f0a875ba-e83b-4e55-942c-4b5162ad6055",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the ADAM baseline during training on the ImageNet-R dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "e4e36305-652d-445f-af74-77deb7ad5b83",
                                                    "requirements": "The incremental accuracy of the ADAM baseline during training on the ImageNet-R dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "304960d9-6e60-473b-934d-d1ba9134d182",
                                            "requirements": "The ADAM baseline has been trained and evaluated on the ImageNet-A dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ddea6ece-9300-4804-b36a-f12f1d94528c",
                                                    "requirements": "The ADAM baseline has been trained on the ImageNet-A dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "622aacbb-bbc7-4222-b2ce-a6786fc9201f",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the ADAM baseline during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "53e5b34f-b7b7-44ef-bfbb-0ea7250a6b82",
                                                    "requirements": "The incremental accuracy of the ADAM baseline during training on the ImageNet-A dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "79981603-829c-4084-a76f-1b94ebbcb7ef",
                                            "requirements": "The ADAM baseline has been trained and evaluated on the VTAB dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "52b8105c-c036-4406-a71e-ea3b02c2c7e4",
                                                    "requirements": "The ADAM baseline has been trained on the VTAB dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "136f8a5c-6fa9-4308-8c56-c5c5e8779fa3",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of the ADAM baseline during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "a02c8f1a-d10e-4d7f-a951-9103bb43f75a",
                                                    "requirements": "The incremental accuracy of the ADAM baseline during training on the VTAB dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "c7b107e1-641b-41d3-a94e-3e39fc24d800",
                                    "requirements": "SEMA has been trained and evaluated on all datasets",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "fc4f89cb-0a6c-41b1-a02b-24c8407f1002",
                                            "requirements": "SEMA has trained and evaluated on the CIFAR-100 dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "2bc9441f-5df1-4692-b9c4-bca597a7431f",
                                                    "requirements": "SEMA has been trained on the CIFAR-100 dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "dc6a493b-e6bf-4128-a9ed-873356a99669",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of SEMA during training on the CIFAR-100 dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "cdc7db5a-0ee4-486a-b646-a37e9f3c5cc4",
                                                    "requirements": "The incremental accuracy of SEMA during training on the CIFAR-100 dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "6402f508-1671-4704-a856-474b0d66f40e",
                                            "requirements": "SEMA has been trained and evaluated on the ImageNet-R dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "765a25a3-5d23-47ef-9cf5-3c409f042b94",
                                                    "requirements": "SEMA has been trained on the ImageNet-R dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "13629fa4-e6ad-41ca-bd64-8628db83706a",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of SEMA during training on the ImageNet-R dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "6d2442b9-4c78-4c63-ab0e-604abbfbd4cf",
                                                    "requirements": "The incremental accuracy of SEMA during training on the ImageNet-R dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "a4f935be-f576-41d0-9a93-24682e5b4273",
                                            "requirements": "SEMA has been trained and evaluated on the ImageNet-A dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "cd6d6a59-bcbe-4a9a-9aa6-6bde44b1df1a",
                                                    "requirements": "SEMA has been trained on the ImageNet-A dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "8f54e2fe-1a5e-4306-8d09-0a19f71f25ce",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of SEMA during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "ace39db2-a349-4196-a76f-94d4d0240ad4",
                                                    "requirements": "The incremental accuracy of SEMA during training on the ImageNet-A dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "6bbf1d42-0778-48ca-a287-4417afb06ab1",
                                            "requirements": "SEMA has been trained and evaluated on the VTAB dataset",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "1dfccd39-cef3-4ad8-823e-4183d4092d85",
                                                    "requirements": "SEMA has been trained on the VTAB dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "40ac1b84-a97c-4674-8e65-084f83bed434",
                                                    "requirements": "The average accuracy (of all seen tasks after training on all tasks) of SEMA during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "bb23038c-38fc-4c86-8ad2-e29aaad62285",
                                                    "requirements": "The incremental accuracy of SEMA during training on the VTAB dataset has been computed using the test split at the end of each task",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "dcd12436-e723-49d4-b9ce-78cbbdf67d57",
                            "requirements": "The recorded metrics show that the results from Section 4.2 have been replicated",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "fd1aa6e8-bf99-4cfa-a437-b866cd7baf77",
                                    "requirements": "The recorded metrics show that the average accuracy of SEMA is almost always higher than that of the other methods for all the datasets.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5392a57b-f0a3-4e29-b0d1-14c6daa85946",
                                    "requirements": "The recorded metrics show that the average incremental accuracy of SEMA at the end of training is almost always higher than that of the other methods for all the datasets.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "f88415b6-2fea-48f9-a543-2af0f15b1825",
                                    "requirements": "The recorded metrics show that the average incremental accuracy of SEMA throughout training is almost always higher than that of the other methods, when comparing to methods trained on the same dataset for the same number of tasks",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "b4141a28-7070-463c-b5a7-62e43e3c402c",
                    "requirements": "The results in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" have been replicated",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "d0381866-9003-46a7-920b-1091af4f4e37",
                            "requirements": "The architecture variants introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" have been implemented",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "794c4737-ec01-4c79-b2c3-dc79472eecd3",
                                    "requirements": "The architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been implemented",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "f4446727-6b06-4e68-b065-367ce9d5161e",
                                            "requirements": "The architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" is a variant of SEMA that has one adapter per layer of the transformer",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "3ebfcc70-eabc-42b3-bfce-610813252204",
                                            "requirements": "The architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" does not add adapters during training, i.e., there is no self-expansion",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "55756009-1626-491e-8875-d7ccb8b80778",
                                            "requirements": "The architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" does train the adapters after the first task",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "952bbc57-c7f9-45e3-b440-825ad0ea994d",
                                    "requirements": "The architecture variant \"Average Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" is implemented as a variant of the SEMA architecture that uses an average weighting of the outputs of the functional adapters (e.g. the router has the same weight for each adapter)",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "a5959da9-798c-4eb0-9579-c3a92e23191c",
                                    "requirements": "The architecture variant \"Random Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" is implemented as a variant of the SEMA architecture that uses a linear combination (from random weights) of the outputs of the functional adapters (e.g. the router has random weights for each adapter), where the random weights are re-computed per-sample",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "4eed6ff6-738b-4515-a0fb-dfddd356b957",
                                    "requirements": "The architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" is implemented as a variant of the SEMA architecture that only uses the output of the single adapter that has the highest weight from the router during both training and inference",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "aecc19c4-4c4c-4929-a596-52080af9f789",
                                    "requirements": "The architecture variant \"Random Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" is implemented as a variant of the SEMA architecture that only uses the output of the single adapter chosen at random, where the adapter that is randomly chosen is re-computed (randomly) per-sample",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "02c22ec6-80c7-4bd1-b709-213d921c70dd",
                                    "requirements": "The architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" is implemented as a variant of the SEMA architecture that uses the standard SEMA method during training, but during inference only uses the output of the single adapter that has the highest router weight",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "1eb915ef-2f24-4f8d-8c04-7749a234fe8a",
                            "requirements": "The experiments required to replicate the results in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "8b5df9d3-7223-439f-833c-c7daafd0e946",
                                    "requirements": "The architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained separately on ImageNet-A and VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "bd063d0c-ccaa-408e-b882-e6b16cac8772",
                                            "requirements": "The architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ef33c6a5-add3-4836-a25e-a9bf30ae2b5f",
                                                    "requirements": "The architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "960373b2-6408-411f-87f0-a02c35013f1a",
                                                    "requirements": "Using the architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "d99b7241-4ba8-4f60-ab2c-70ff85127c8f",
                                                    "requirements": "Using the architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "4af47438-b296-45a0-bdca-20fd92122c74",
                                            "requirements": "The architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB, and the incremental accuracy and average accuracy after the final task has been computed using the test split for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "5e45d561-3737-4289-baa0-8555670e27dc",
                                                    "requirements": "The architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "8f05eab2-286f-44a8-ac9e-968219c2b35e",
                                                    "requirements": "Using the architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "4b4a6027-0b38-4e56-a391-f9097d3300f4",
                                                    "requirements": "Using the architecture variant \"No Expansion\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "3f00e96f-c45a-443b-800b-3b98ea1aef27",
                                    "requirements": "The architecture variant \"Average Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained separately on ImageNet-A and VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "1bc797bf-deb0-40f0-95e9-6d9316ac8c44",
                                            "requirements": "The architecture variant \"Average Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "135f6fdc-ee33-40f1-ae9f-164625f2f755",
                                                    "requirements": "The architecture variant \"Average Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "f7de59e1-a4c2-4986-bc01-706fb0238a50",
                                                    "requirements": "Using the architecture variant \"Average Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "0a7c2994-584f-40a9-8d1b-1fd207ed2130",
                                                    "requirements": "Using the architecture variant \"Average Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "341469f6-0ffa-42a7-8997-6ec911d0707c",
                                            "requirements": "The architecture variant \"Average Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "1bc09532-d65f-4e7f-87db-ee875ad0a28c",
                                                    "requirements": "The architecture variant \"Average Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "50cb9235-3350-4290-9814-827121ddcd05",
                                                    "requirements": "Using the architecture variant \"Average Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "2c12a5aa-da6e-4cb7-b318-45b458779b6f",
                                                    "requirements": "Using the architecture variant \"Average Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "507923f2-741d-43ab-bf67-de4f9a9bf4ec",
                                    "requirements": "The architecture variant \"Random Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained separately on ImageNet-A and VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "04507555-8d09-4ca3-ac48-6fd8fb23b361",
                                            "requirements": "The architecture variant \"Random Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "1d30f56d-b0c8-4b5e-845e-153ee9a723ed",
                                                    "requirements": "The architecture variant \"Random Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "06d94970-28e2-460f-a0ca-5bcfdca8b90a",
                                                    "requirements": "Using the architecture variant \"Random Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "dc6f4c73-f3d1-4540-b488-a054a45572e6",
                                                    "requirements": "Using the architecture variant \"Random Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "a2839355-6547-42db-b362-9f51312313e9",
                                            "requirements": "The architecture variant \"Random Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "1325a4b3-1e03-493a-9b59-fc0ba78a3b89",
                                                    "requirements": "The architecture variant \"Random Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "5bb576a8-6c47-4e4d-b805-82a3a9c483bb",
                                                    "requirements": "Using the architecture variant \"Random Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "a094edbc-e7ea-4538-b134-aab5a40509b9",
                                                    "requirements": "Using the architecture variant \"Random Weighting\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "7f410f22-4271-4b90-b7b0-145d1d28df35",
                                    "requirements": "The architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained separately on ImageNet-A and VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "8d8f46c4-5fb1-4293-ae16-6fcb8cc91197",
                                            "requirements": "The architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "4f01fac3-3bb3-456d-851d-541b77d26186",
                                                    "requirements": "The architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "330f557e-3fc8-4432-8a61-7cb1f976b106",
                                                    "requirements": "Using the architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "ce346361-4a21-4b98-bcc4-8185ed0823cf",
                                                    "requirements": "Using the architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "5648ad25-a667-42c5-bd3f-0fedbbe96d0d",
                                            "requirements": "The architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "8c9ebd55-9b06-4251-95d0-1d4c5cf787e4",
                                                    "requirements": "The architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "8d8efa6c-edb7-4ca2-a336-1dc093acdb95",
                                                    "requirements": "Using the architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "f793a9ba-c47c-4601-9227-f0be2b853edd",
                                                    "requirements": "Using the architecture variant \"Top-1 Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "026f1940-8161-4384-82fb-272d3257bf78",
                                    "requirements": "The architecture variant \"Random Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained separately on ImageNet-A and VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "aac5010b-2670-4df1-8fe0-ef8d1df6b830",
                                            "requirements": "The architecture variant \"Random Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "70e161eb-5840-4210-8c38-eb7c66844a36",
                                                    "requirements": "The architecture variant \"Random Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "97d148e1-8400-4d27-ad52-6b033bbbdbfc",
                                                    "requirements": "Using the architecture variant \"Random Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "1a82263f-f9c4-40ec-a8b9-fb9a897a4bae",
                                                    "requirements": "Using the architecture variant \"Random Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "cd9e828e-eeac-4552-b18c-d17f91cc1a32",
                                            "requirements": "The architecture variant \"Random Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "6bd258ed-e7c4-401d-a496-390255ec65cf",
                                                    "requirements": "The architecture variant \"Random Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "51534b80-118e-47ec-b3c6-d5721cec9843",
                                                    "requirements": "Using the architecture variant \"Random Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "f0a4782b-8349-4262-b04a-ff7e7bd3c74d",
                                                    "requirements": "Using the architecture variant \"Random Selection\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "426c9d85-16b3-462e-ac0e-f6f2e6aede69",
                                    "requirements": "The architecture variant \"Top-1 Selection Inference\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained separately on ImageNet-A and VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "774bbe25-101a-4885-a0fa-f1e434cca521",
                                            "requirements": "The architecture variant \"Top-1 Selection Inference\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "0cf9f0b3-7cc6-4175-823f-b3fc04f2eda7",
                                                    "requirements": "The architecture variant \"Top-1 Selection Inference\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on ImageNet-A",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "ef83772a-6c9d-4545-96b3-dfea96d51c36",
                                                    "requirements": "Using the architecture variant \"Top-1 Selection Inference\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "bd448bde-180e-47ec-a30c-3d1eb36d7270",
                                                    "requirements": "Using the architecture variant \"Top-1 Selection Inference\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "d3c16cd3-04f7-4dec-9ccd-f60435cd394c",
                                            "requirements": "The architecture variant \"Top-1 Selection Inference\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB, and the incremental accuracy and average accuracy after the final task has been computed for each",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "7bf23f28-f39e-4f0f-a458-fe136c2f9490",
                                                    "requirements": "The architecture variant \"Top-1 Selection Inference\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" has been trained on VTAB",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "4aa24932-fc7c-4bf1-bd34-8185da64d837",
                                                    "requirements": "Using the architecture variant \"Top-1 Selection Inference\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the average accuracy (of all seen tasks after training on all tasks) during training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "7bd04838-b39a-451b-9c8b-c9f243b9699c",
                                                    "requirements": "Using the architecture variant \"Top-1 Selection Inference\" introduced in Section 4.3 on \"Ablation studies on module expansion and adapter composing\", the incremental accuracy at the end of training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "c3c29203-1212-4000-9b6a-84e19d3ece1b",
                            "requirements": "The recorded metrics show that the results in Section 4.3 on \"Ablation studies on module expansion and adapter composing\" have been replicated",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "4d764fd4-0c3c-4284-98aa-7774ce363af7",
                                    "requirements": "The recorded metrics show that SEMA achieves about equal or higher performance wrt. incremental accuracy and average accuracy on both the ImageNet-A and VTAB datasets",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "32f0f139-2d20-48f0-b58f-f540ef3c7c27",
                                    "requirements": "The recorded metrics show that the Top-1 Selection Inference variant achieves about equal or higher performance wrt. incremental accuracy and average accuracy on both the ImageNet-A and VTAB datasets compared to all other variants (but not compared to SEMA)",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "6d9d8dc9-68e1-4a8d-8b72-5b826ae489c2",
                    "requirements": "The results in Section 4.3 on \"Analysis on dynamic expansion process\" have been replicated",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "35bd26f2-debd-4482-813c-e20989b74fbd",
                            "requirements": "The experiments required to replicate the results in Section 4.3 on \"Analysis on dynamic expansion process\" have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "c35a2668-8fd3-4a0c-8012-ecbf780f84a9",
                                    "requirements": "For the SEMA model trained for the experiment in in Section 4.3 on \"Analysis on dynamic expansion process\", self-expansion is limited to the final layer of the transformer",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "8e458cfa-d612-4672-99e3-c8996d3d0882",
                                    "requirements": "For the SEMA model trained in Section 4.3 on \"Analysis on dynamic expansion process\", the reconstruction error from each representation descriptor is recorded for each batch",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "30c33054-c83b-432e-b942-fc35a06beaea",
                                    "requirements": "The modified SEMA model for Section 4.3 on \"Analysis on dynamic expansion process\" is trained on the first five tasks from the VTAB dataset",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "489a0b61-8b62-4935-86a8-c98ce6f63157",
                            "requirements": "The recorded metrics show that the results in Section 4.3 on \"Analysis on dynamic expansion process\" have been replicated",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "22377755-0ce5-4de4-bda0-cbc476c6a4ee",
                                    "requirements": "The recorded metrics show that, during training, each representation descriptor's reconstruction loss lowers over the course of training, and eventually oscillates around some value",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4c514efc-422d-4f91-b5d0-0d1c6767a281",
                                    "requirements": "The recorded metrics show that, during the detection phase at the start of each task, the reconstruction loss increases for each present representation descriptor that was introduced in the previous task",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "afdd1870-f248-48c6-8da0-80ee80c2a249",
                                    "requirements": "The recorded metrics show that in total three representation descriptors are present in the final model after training",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "041c37ec-dec0-46a8-9641-b88963ccda3f",
                                    "requirements": "The recorded metrics show that no representation descriptors were added during the final two tasks",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "35daaf13-e3d2-433a-912f-464149921373",
                    "requirements": "The results in Section 4.3 on \"Analysis on adapter usage\" have been replicated",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "8e1377c2-0b2f-4aa8-b3f9-476e7f7a8b09",
                            "requirements": "Using the model trained in Section 4.3 on \"Analysis on dynamic expansion process\", the adapter usage for each task has been computed by averaging the routing weight vectors from all samples seen in tasks in the test set, then normalizing the final result such that the sum of average weights for each task sums to one",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "db9aefc8-8823-4a7a-b02f-08c590e89132",
                            "requirements": "The recorded metrics show that the results in Section 4.3 on \"Analysis on adapter usage\" have been replicated",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "4e89af61-b259-4c12-a179-26a3651a8f50",
                                    "requirements": "The recorded metrics show that, the first adapter has a large usage for the first task, the second adapter has a large usage for the second task, and the third adapter has a large usage for the third task",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "3dc20642-dc33-4467-b5bf-f1b9a528cbdd",
                                    "requirements": "The recorded metrics show that, the fourth task uses the first adapter; the first adapter has the largest usage for the fourth task",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "88dcf9d6-bd8b-4427-b00f-fdcd087fa3c9",
                                    "requirements": "The recorded metrics show that, the fifth task uses the third adapter; the thirs adapter has the largest usage for the fifth task",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "dc58441b-c211-4ad4-8166-405877570c1d",
                    "requirements": "The results in Section 4.3 on \"Study of expansion threshold\" have been replicated",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "c67c035a-8cba-40c3-ad05-b6e5efecfaf9",
                            "requirements": "The experiments required to replicate the results in Section 4.3 on \"Study of expansion threshold\" have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "e416a999-41de-489d-9df7-54edfd80b866",
                                    "requirements": "Code is implemented to count the number of adapters added to each of the last three transformer layers",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                },
                                {
                                    "id": "f97958b5-144f-47c4-8ff5-af0c200619db",
                                    "requirements": "SEMA is separately trained with expansion thresholds 1.0, 1.1, 1.2, ...., 2.0 on ImageNet-A. For each trained model, the average accuracy is computed and the number of adapters in each of the last three layers is separately computed",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "bb921111-8c41-401a-b96d-f71da28178f0",
                                            "requirements": "SEMA is separately trained with expansion thresholds 1.0, 1.1, 1.2, ...., 2.0 on ImageNet-A",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "9254bba9-cd1d-4d1b-a51a-1e5585a0b9ba",
                                            "requirements": "For each SEMA model trained with a different expansion threshold, the average accuracy at the end of training on the ImageNet-A dataset has been computed using the test split at the end of each task",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "2d255c7d-aca3-4032-93e5-87606f0a272e",
                                            "requirements": "For each SEMA model trained with a different expansion threshold on ImageNet-A, the number of adapters at the end of training in each of the last three layers is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "5ef68d3c-e689-46ba-ba6f-2dbd5a30dfbe",
                                    "requirements": "SEMA is separately trained with expansion thresholds 1.0, 2.0, 3.0, ...., 8.0 on VTAB. For each trained model, the average accuracy is computed and the number of adapters in each of the last three layers is separately computed",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "1a82caf9-c8cd-4e7e-ac8f-925b10ef676c",
                                            "requirements": "SEMA is separately trained with expansion thresholds 1.0, 1.1, 1.2, ...., 2.0 on VTAB",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "9e2e9c35-5b31-4c23-ada6-25cadcb089b3",
                                            "requirements": "For each SEMA model trained with a different expansion threshold, the average accuracy at the end of training on the VTAB dataset has been computed using the test split at the end of each task",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "db0f6083-9914-49e6-91d8-5d7552307fa8",
                                            "requirements": "For each SEMA model trained with a different expansion threshold on VTAB, the number of adapters at the end of training in each of the last three layers is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "fa164f8a-3efb-4ac1-8c25-1b4cc7069d1b",
                            "requirements": "The recorded metrics show that the results in Section 4.3 on \"Study of expansion threshold\" have been replicated",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "cac935d6-0663-4748-92e0-6f91b32e6a35",
                                    "requirements": "The recorded metrics show that the average accuracy of the SEMA models trained on ImageNet-A does not significantly vary over expansion thresholds 1.0, 1.1, 1.2, ...., 2.0",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b1205f44-85ca-4494-a143-eb9e5a362521",
                                    "requirements": "The recorded metrics show that the incremental accuracy of the SEMA models trained on ImageNet-A does not significantly vary over expansion thresholds 1.0, 1.1, 1.2, ...., 2.0",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a50983cd-2b51-4f3d-8b7a-934ebf53813b",
                                    "requirements": "The recorded metrics show that the SEMA models trained on ImageNet-A have more adapters when trained with lower expansion thresholds then when they are trained with higher expansion thresholds",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "a302cd1d-26d1-498c-a96f-3691052e040c",
                                    "requirements": "The recorded metrics show that the average accuracy of the SEMA models trained on VTAB is higher with low expansion thresholds (1.0, 2.0) than high expansion thresholds (7.0, 8.0)",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e9857488-805e-4c0b-b6ee-445ae79380cf",
                                    "requirements": "The recorded metrics show that the incremental accuracy of the SEMA models trained on VTAB is higher with low expansion thresholds (1.0, 2.0) than high expansion thresholds (7.0, 8.0)",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d91d9aa5-72fd-4d78-b923-df6bc4510d7e",
                                    "requirements": "The recorded metrics show that the SEMA models trained on VTAB have more adapters when trained with lower expansion thresholds then when they are trained with higher expansion thresholds",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "a6727e55-a678-4b0a-ba17-5969dcea2d1c",
                    "requirements": "The results in Section 4.3 on \"Analysis of multi-layer expansion\" have been replicated",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "1a68fcad-d5e9-4f66-b46c-13aaa3df44f8",
                            "requirements": "The experiments required to replicate the results in Section 4.3 on \"Analysis of multi-layer expansion\" have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "4bebc34b-bb55-4a3a-bb0b-4e2d2feccc88",
                                    "requirements": "Different SEMA models are trained on ImageNet-A with varying number of layers that are allowed for self-expansion: 11-12 (last 2 layers), 10-12 (last 3 layers), and 9-12 (last 4 layers). For each trained model, the average accuracy is computed and the number of adapters in each of the last three layers is separately computed",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "df30022a-2ae3-4cbf-a303-a0b599a06978",
                                            "requirements": "A variant of SEMA is trained on ImageNet-A where the only layers allowed for self-expansion are 11-12 (the last 2 layers)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "0a1ec651-be06-442d-b56a-6b5bd11c4a4f",
                                            "requirements": "A variant of SEMA is trained on ImageNet-A where the only layers allowed for self-expansion are 10-12 (the last 3 layers)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "1fac6183-d19f-4061-baaa-5879a87781db",
                                            "requirements": "A variant of SEMA is trained on ImageNet-A where the only layers allowed for self-expansion are 9-12 (the last 4 layers)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "7960f0dc-ff3d-483c-ac44-74865510d7fb",
                                            "requirements": "For each SEMA variant trained on ImageNet-A allowing different layers for self-expansion, the average accuracy at the end of training has been computed using the test split at the end of each task",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "e92d099c-b0d7-414b-b92f-e6bff6d7e6e0",
                                            "requirements": "For each SEMA variant trained on ImageNet-A allowing different layers for self-expansion, the total number of added adapters at the end of training is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "66567970-59ca-4fa6-a841-e7b24b72f4c6",
                                    "requirements": "Different SEMA models are trained on VTAB with varying number of layers that are allowed for self-expansion: 11-12 (last 2 layers), 10-12 (last 3 layers), and 9-12 (last 4 layers). For each trained model, the average accuracy is computed and the number of adapters in each of the last three layers is separately computed",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "b4c0cd35-5f88-458b-89a2-2e7669d67aaa",
                                            "requirements": "A variant of SEMA is trained on VTAB where the only layers allowed for self-expansion are 11-12 (the last 2 layers)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "1a95e296-a68c-4aac-8b19-88e2eec2fe88",
                                            "requirements": "A variant of SEMA is trained on VTAB where the only layers allowed for self-expansion are 10-12 (the last 3 layers)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "411ec21b-24e6-42cc-bde6-31b602f51e59",
                                            "requirements": "A variant of SEMA is trained on VTAB where the only layers allowed for self-expansion are 9-12 (the last 4 layers)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "18fa0271-4d56-4a56-80ab-52ca2aa24beb",
                                            "requirements": "For each SEMA variant trained on VTAB allowing different layers for self-expansion, the average accuracy at the end of training has been computed using the test split at the end of each task",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "5f4eb916-549e-45cf-be21-9ad2a6a33ae9",
                                            "requirements": "For each SEMA variant trained on VTAB allowing different layers for self-expansion, the total number of added adapters at the end of training is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Logging, Analysis & Presentation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "907de1eb-df14-4a77-a095-7e0f82e4d7b3",
                            "requirements": "The recorded metrics show that the results in Section 4.3 on \"Analysis of multi-layer expansion\" have been replicated",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "14696e47-fa4c-4f3f-9557-2e22ba3825f1",
                                    "requirements": "The recorded metrics show that the average accuracy of SEMA trained on ImageNet-A is higher when layers 9-12 are allowed for self-expansion compared to when only layers 11-12 are allowed for self-expansion",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "bf0ca018-644d-41a7-b0a1-8d1d54690e51",
                                    "requirements": "The recorded metrics show that the average accuracy of SEMA trained on VTAB is higher when layers 9-12 are allowed for self-expansion compared to when only layers 11-12 are allowed for self-expansion",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "30593624-21a7-44b0-ac75-8635e4d418e3",
                                    "requirements": "The recorded metrics show that the incremental accuracy of ImageNet-A trained on VTAB is higher when layers 9-12 are allowed for self-expansion compared to when only layers 11-12 are allowed for self-expansion",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8de7c979-b748-487b-920d-ddf4ce21fa99",
                                    "requirements": "The recorded metrics show that the incremental accuracy of SEMA trained on VTAB is higher when layers 10-12 are allowed for self-expansion compared to when only layers 11-12 are allowed for self-expansion",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2048f2e3-9d3a-4608-bf4f-2f58b41284de",
                                    "requirements": "The recorded metrics show that for the SEMA model trained on ImageNet-A, more adapters are added in total when more layers are allowed for self-expansion",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b74040f4-5aaa-432d-b18a-ea365cbb06b4",
                                    "requirements": "The recorded metrics show that for the SEMA model trained on VTAB, more adapters are added in total when more layers are allowed for self-expansion",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "ecb88764-edd6-47d0-8b5a-1a2ed705490c",
                    "requirements": "The results in Section 4.3 on \"Ablation studies on adapter variants\" have been replicated",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "95464d0f-faeb-4d6d-8124-ddcf0c5f3abb",
                            "requirements": "The experiments required to replicate the results in Section 4.3 on \"Ablation studies on adapter variants\" have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "0b6228bc-0e83-4ba3-af3f-893ca51f9e6d",
                                    "requirements": "A variant of the SEMA architecture using the \"Adapter\" adapter from the baseline has been trained on ImageNet-A and VTAB, and the average accuracy and incremental accuracy has been recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "d3fd124f-0830-4c8d-b622-219c65a0f411",
                                            "requirements": "A variant of the SEMA architecture using the \"Adapter\" adapter from the baseline has been trained on ImageNet-A, and the average accuracy and incremental accuracy has been recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "65b2a690-5e4f-40dd-bea6-e4d65224621b",
                                                    "requirements": "A variant of the SEMA architecture that uses the \"Adapter\" adapter from the baseline has been trained on the ImageNet-A dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "aa20dc32-9478-4b25-a65a-1aa9757040a4",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the \"Adapter\" adapter, the average accuracy (of all seen tasks after training on all tasks) at the end of training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9ae9841e-3a43-484a-9766-567c4bf99cba",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the \"Adapter\" adapter, the incremental accuracy at the end of training on the ImageNet-A dataset has been computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "394f956c-2655-4794-b1b2-3702ab43814a",
                                            "requirements": "A variant of the SEMA architecture using the \"Adapter\" adapter from the baseline has been trained on VTAB, and the average accuracy and incremental accuracy has been recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "aa90c0b1-8464-44b0-9244-8de8acebfcf8",
                                                    "requirements": "A variant of the SEMA architecture that uses the \"Adapter\" adapter from the baseline has been trained on the VTAB dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "8a3631d4-e7ab-42c8-8e41-2452c4c3870c",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the \"Adapter\" adapter, the average accuracy (of all seen tasks after training on all tasks) at the end of training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "539d5540-287f-45f8-b033-9687094d9710",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the \"Adapter\" adapter, the incremental accuracy at the end of training on the VTAB dataset has been computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "ecad216b-9a46-480e-81ad-4fd34c78b2dc",
                                    "requirements": "A variant of the SEMA architecture using the LoRA adapter has been trained on ImageNet-A and VTAB, and the average accuracy and incremental accuracy has been recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "8b7efa84-4fc2-4820-afe7-ed1c31e7b1a4",
                                            "requirements": "A variant of the SEMA architecture using the LoRA adapter has been trained on ImageNet-A, and the average accuracy and incremental accuracy has been recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ef151297-8bd5-4d7f-8468-b920e61f2360",
                                                    "requirements": "A variant of the SEMA architecture that uses the LoRA adapter has been trained on the ImageNet-A dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "7f08f53d-e894-48a1-9907-273fc4d7e1cd",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the LoRA adapter, the average accuracy (of all seen tasks after training on all tasks) at the end of training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "fac6eece-4f0c-4288-b874-13a9f4b12b0b",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the LoRA adapter, the incremental accuracy at the end of training on the ImageNet-A dataset has been computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "d7402a76-7798-4d54-85df-30b401d3d008",
                                            "requirements": "A variant of the SEMA architecture using the LoRA adapter has been trained on VTAB, and the average accuracy and incremental accuracy has been recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "84f686ae-76b7-41ad-bea9-4a0a49db75ee",
                                                    "requirements": "A variant of the SEMA architecture that uses the LoRA adapter has been trained on the VTAB dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "412c97f9-1cb1-4a81-b088-39cc2f82af40",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the LoRA adapter, the average accuracy (of all seen tasks after training on all tasks) at the end of training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "4926a287-b5c6-4d38-9a72-61376eb43dc5",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the LoRA adapter, the incremental accuracy at the end of training on the VTAB dataset has been computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "415d6a77-d0f4-45f0-bc04-66b2492f8e3d",
                                    "requirements": "A variant of the SEMA architecture using the LoRA adapter has been trained on ImageNet-A and VTAB, and the average accuracy and incremental accuracy has been recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "692a6212-8c45-4442-8726-25094e90f102",
                                            "requirements": "A variant of the SEMA architecture using the Convpass adapter has been trained on ImageNet-A, and the average accuracy and incremental accuracy has been recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "02dd9608-1f23-42bb-9669-8aa6456186ca",
                                                    "requirements": "A variant of the SEMA architecture that uses the Convpass adapter has been trained on the ImageNet-A dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "fa28b20d-541a-45e9-9887-864ecf30124c",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the Convpass adapter, the average accuracy (of all seen tasks after training on all tasks) at the end of training on the ImageNet-A dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "dc29184c-4604-47d6-b67f-442e2b0d0e37",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the Convpass adapter, the incremental accuracy at the end of training on the ImageNet-A dataset has been computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "1867d701-6b4e-42ed-b162-82a666115a3b",
                                            "requirements": "A variant of the SEMA architecture using the Convpass adapter has been trained on VTAB, and the average accuracy and incremental accuracy has been recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "34f8c2f8-8713-4c8f-8f16-412fac11218d",
                                                    "requirements": "A variant of the SEMA architecture that uses the Convpass adapter has been trained on the VTAB dataset",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "6a6a58c7-0ec1-447f-a847-721f9c0268ed",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the Convpass adapter, the average accuracy (of all seen tasks after training on all tasks) at the end of training on the VTAB dataset has been computed using the test split",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "3609cd4d-1702-47b2-8271-916014e48336",
                                                    "requirements": "Using a variant of the SEMA architecture that uses the Convpass adapter, the incremental accuracy at the end of training on the VTAB dataset has been computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "a73cf324-f031-467f-919c-38e87592d2b9",
                            "requirements": "The recorded metrics show that the results in Section 4.3 on \"Ablation studies on adapter variants\" have been replicated",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "6329ed8e-e09f-4736-910e-b8a71402fde8",
                                    "requirements": "The recorded metrics show that for each dataset (ImageNet-A, VTAB) all models trained on such dataset have similar average accuracies and incremental accuracies (<4%)",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4a7122fc-b365-4bc7-ad97-346be8b23f78",
                                    "requirements": "The recorded metrics show that all models trained on the ImageNet-A dataset achieve an average accuracy >50% and an incremental accuracy >60%",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5ca4eec8-4f2d-495a-9565-669aa37b0483",
                                    "requirements": "The recorded metrics show that all models trained on the VTAB dataset achieve an average accuracy >85% and an incremental accuracy >88%",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "a2179131-956f-40f8-95ed-b6d2bded7dc7",
                    "requirements": "The results in Section 4.3 on \"Sub-linear growth of parameters\" have been replicated",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "918b9273-aafb-4c0d-a7fe-da67f85de064",
                            "requirements": "Code for computing the total number of parameters added by each method is implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "da88bff7-d60f-47ea-a705-f21d74d9fba8",
                            "requirements": "The total number of parameters added by each method is computed over the course of training at the end of each task",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "f53730cc-c27f-4d37-8565-6a13417533de",
                            "requirements": "The experiments required to replicate the results in Section 4.3 on \"Ablation studies on adapter variants\" have been executed",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "2185ffad-3111-410a-921e-fe18f43df530",
                                    "requirements": "L2P has been trained on ImageNet-A",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "5ce798f5-bfc2-4867-bba3-568bf4435bce",
                                    "requirements": "DualPrompt has been trained on ImageNet-A",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "8ddf9659-1674-4d25-ae92-6527a3258791",
                                    "requirements": "CODA-P has been trained on ImageNet-A",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "5c1a9ec3-78a4-4d60-8d5e-b178264d7625",
                                    "requirements": "SEMA has been trained on ImageNet-A",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "ff316f63-7ebe-4984-a14b-a20787da04a5",
                            "requirements": "The recorded metrics show that the results in Section 4.3 on \"Sub-linear growth of parameters\" have been replicated",
                            "weight": 4,
                            "sub_tasks": [
                                {
                                    "id": "7c95cb96-0d92-4f49-b252-df415e6c3d13",
                                    "requirements": "Methods CODA-P and DualPrompt exhibit linear growth in number of added parameters over the course of training",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1457caf5-6f03-4b8b-afec-743465692762",
                                    "requirements": "A sublinear growth in the number of added parameters is observed for SEMA over the course of training",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "88a3e48c-5e3e-42a7-a03b-c69c6043c725",
                                    "requirements": "The number of parameters added by L2P remains at zero over the course of training",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        }
    ],
    "task_category": null,
    "finegrained_task_category": null
}