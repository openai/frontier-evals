diff --git a/src/hooks/useActiveWorkspaceFromNavigationState.ts b/src/hooks/useActiveWorkspaceFromNavigationState.ts
deleted file mode 100644
index db7d13a00aa..00000000000
--- a/src/hooks/useActiveWorkspaceFromNavigationState.ts
+++ /dev/null
@@ -1,33 +0,0 @@
-import {useNavigationState} from '@react-navigation/native';
-import Log from '@libs/Log';
-import type {BottomTabNavigatorParamList} from '@libs/Navigation/types';
-import SCREENS from '@src/SCREENS';
-
-/**
- *  Get the currently selected policy ID stored in the navigation state. This hook should only be called only from screens in BottomTab.
- *  Differences between this hook and useActiveWorkspace:
- *  - useActiveWorkspaceFromNavigationState reads the active workspace id directly from the navigation state, it's a bit slower than useActiveWorkspace and it can be called only from BottomTabScreens.
- *    It allows to read a value of policyID immediately after the update.
- *  - useActiveWorkspace allows to read the current policyID anywhere, it's faster because it doesn't require searching in the navigation state.
- */
-function useActiveWorkspaceFromNavigationState() {
-    // The last policyID value is always stored in the last route in BottomTabNavigator.
-    const activeWorkpsaceID = useNavigationState<BottomTabNavigatorParamList, string | undefined>((state) => {
-        // SCREENS.HOME is a screen located in the BottomTabNavigator, if it's not in state.routeNames it means that this hook was called from a screen in another navigator.
-        if (!state.routeNames.includes(SCREENS.HOME)) {
-            Log.warn('useActiveWorkspaceFromNavigationState should be called only from BottomTab screens');
-        }
-
-        const policyID = state.routes.at(-1)?.params?.policyID;
-
-        if (!policyID) {
-            return undefined;
-        }
-
-        return policyID;
-    });
-
-    return activeWorkpsaceID;
-}
-
-export default useActiveWorkspaceFromNavigationState;
diff --git a/src/libs/Navigation/types.ts b/src/libs/Navigation/types.ts
index 5597e7ce00d..c2efcf68e5e 100644
--- a/src/libs/Navigation/types.ts
+++ b/src/libs/Navigation/types.ts
@@ -79,6 +79,7 @@ type BackToParams = {
 };
 
 type SettingsNavigatorParamList = {
+    [SCREENS.SETTINGS.ROOT]: undefined;
     [SCREENS.SETTINGS.SHARE_CODE]: undefined;
     [SCREENS.SETTINGS.PROFILE.ROOT]: undefined;
     [SCREENS.SETTINGS.PROFILE.PRONOUNS]: undefined;
@@ -853,9 +854,9 @@ type WelcomeVideoModalNavigatorParamList = {
 };
 
 type BottomTabNavigatorParamList = {
-    [SCREENS.HOME]: {policyID?: string};
-    [SCREENS.SEARCH.BOTTOM_TAB]: {policyID?: string};
-    [SCREENS.SETTINGS.ROOT]: {policyID?: string};
+    [SCREENS.HOME]: undefined;
+    [SCREENS.SEARCH.BOTTOM_TAB]: undefined;
+    [SCREENS.SETTINGS.ROOT]: undefined;
 };
 
 type SharedScreensParamList = {
diff --git a/src/libs/PolicyUtils.ts b/src/libs/PolicyUtils.ts
index b39c8465bd7..f98aed2e973 100644
--- a/src/libs/PolicyUtils.ts
+++ b/src/libs/PolicyUtils.ts
@@ -11,7 +11,9 @@ import type {PolicyFeatureName, Rate, Tenant} from '@src/types/onyx/Policy';
 import type PolicyEmployee from '@src/types/onyx/PolicyEmployee';
 import type {EmptyObject} from '@src/types/utils/EmptyObject';
 import {isEmptyObject} from '@src/types/utils/EmptyObject';
-import Navigation from './Navigation/Navigation';
+import getPolicyIDFromState from './Navigation/getPolicyIDFromState';
+import Navigation, {navigationRef} from './Navigation/Navigation';
+import type {RootStackParamList, State} from './Navigation/types';
 import * as NetworkStore from './Network/NetworkStore';
 import {getAccountIDsByLogins, getLoginsByAccountIDs, getPersonalDetailByEmail} from './PersonalDetailsUtils';
 
@@ -403,6 +405,13 @@ function getAdminEmployees(policy: OnyxEntry<Policy>): PolicyEmployee[] {
     return Object.values(policy?.employeeList ?? {}).filter((employee) => employee.role === CONST.POLICY.ROLE.ADMIN);
 }
 
+/**
+ *  Get the currently selected policy ID stored in the navigation state.
+ */
+function getPolicyIDFromNavigationState() {
+    return getPolicyIDFromState(navigationRef.getRootState() as State<RootStackParamList>);
+}
+
 /**
  * Returns the policy of the report
  */
@@ -530,6 +539,7 @@ export {
     getXeroBankAccountsWithDefaultSelect,
     getCustomUnit,
     getCustomUnitRate,
+    getPolicyIDFromNavigationState,
     sortWorkspacesBySelected,
 };
 
diff --git a/src/pages/home/sidebar/SidebarLinksData.tsx b/src/pages/home/sidebar/SidebarLinksData.tsx
index 3852cb0d12e..36b2ab53d33 100644
--- a/src/pages/home/sidebar/SidebarLinksData.tsx
+++ b/src/pages/home/sidebar/SidebarLinksData.tsx
@@ -6,7 +6,7 @@ import type {OnyxCollection, OnyxEntry} from 'react-native-onyx';
 import {withOnyx} from 'react-native-onyx';
 import type {EdgeInsets} from 'react-native-safe-area-context';
 import type {ValueOf} from 'type-fest';
-import useActiveWorkspaceFromNavigationState from '@hooks/useActiveWorkspaceFromNavigationState';
+import useActiveWorkspace from '@hooks/useActiveWorkspace';
 import useCurrentUserPersonalDetails from '@hooks/useCurrentUserPersonalDetails';
 import useLocalize from '@hooks/useLocalize';
 import type {PolicySelector} from '@hooks/useReportIDs';
@@ -41,7 +41,7 @@ function SidebarLinksData({insets, isLoadingApp = true, onLinkClick, priorityMod
     const {accountID} = useCurrentUserPersonalDetails();
     const isFocused = useIsFocused();
     const styles = useThemeStyles();
-    const activeWorkspaceID = useActiveWorkspaceFromNavigationState();
+    const {activeWorkspaceID} = useActiveWorkspace();
     const {translate} = useLocalize();
 
     const policyMemberAccountIDs = getPolicyEmployeeListByIdWithoutCurrentUser(policies, activeWorkspaceID, accountID);
diff --git a/src/pages/home/sidebar/SidebarScreen/BaseSidebarScreen.tsx b/src/pages/home/sidebar/SidebarScreen/BaseSidebarScreen.tsx
index f0fa320c148..fa694c73f9e 100644
--- a/src/pages/home/sidebar/SidebarScreen/BaseSidebarScreen.tsx
+++ b/src/pages/home/sidebar/SidebarScreen/BaseSidebarScreen.tsx
@@ -1,12 +1,12 @@
 import React, {useEffect} from 'react';
 import {View} from 'react-native';
 import ScreenWrapper from '@components/ScreenWrapper';
-import useActiveWorkspaceFromNavigationState from '@hooks/useActiveWorkspaceFromNavigationState';
 import useLocalize from '@hooks/useLocalize';
 import useThemeStyles from '@hooks/useThemeStyles';
 import * as Browser from '@libs/Browser';
 import TopBar from '@libs/Navigation/AppNavigator/createCustomBottomTabNavigator/TopBar';
 import Performance from '@libs/Performance';
+import {getPolicyIDFromNavigationState} from '@libs/PolicyUtils';
 import SidebarLinksData from '@pages/home/sidebar/SidebarLinksData';
 import Timing from '@userActions/Timing';
 import CONST from '@src/CONST';
@@ -21,7 +21,7 @@ const startTimer = () => {
 
 function BaseSidebarScreen() {
     const styles = useThemeStyles();
-    const activeWorkspaceID = useActiveWorkspaceFromNavigationState();
+    const activeWorkspaceID = getPolicyIDFromNavigationState();
     const {translate} = useLocalize();
 
     useEffect(() => {
diff --git a/tests/perf-test/SidebarLinks.perf-test.tsx b/tests/perf-test/SidebarLinks.perf-test.tsx
index 5aadb6d67ae..40165d81727 100644
--- a/tests/perf-test/SidebarLinks.perf-test.tsx
+++ b/tests/perf-test/SidebarLinks.perf-test.tsx
@@ -10,7 +10,6 @@ import wrapOnyxWithWaitForBatchedUpdates from '../utils/wrapOnyxWithWaitForBatch
 
 jest.mock('@libs/Permissions');
 jest.mock('@hooks/usePermissions.ts');
-jest.mock('@src/hooks/useActiveWorkspaceFromNavigationState');
 jest.mock('../../src/libs/Navigation/Navigation', () => ({
     navigate: jest.fn(),
     isActiveRoute: jest.fn(),
diff --git a/tests/unit/SidebarOrderTest.ts b/tests/unit/SidebarOrderTest.ts
index 97088736555..044a36c32f1 100644
--- a/tests/unit/SidebarOrderTest.ts
+++ b/tests/unit/SidebarOrderTest.ts
@@ -14,7 +14,6 @@ import wrapOnyxWithWaitForBatchedUpdates from '../utils/wrapOnyxWithWaitForBatch
 jest.mock('@libs/Permissions');
 jest.mock('@hooks/usePermissions.ts');
 jest.mock('@components/Icon/Expensicons');
-jest.mock('@src/hooks/useActiveWorkspaceFromNavigationState');
 
 const ONYXKEYS = {
     PERSONAL_DETAILS_LIST: 'personalDetailsList',
diff --git a/tests/unit/SidebarTest.ts b/tests/unit/SidebarTest.ts
index 7b4d2a99db7..9fa3df8949a 100644
--- a/tests/unit/SidebarTest.ts
+++ b/tests/unit/SidebarTest.ts
@@ -12,7 +12,6 @@ import wrapOnyxWithWaitForBatchedUpdates from '../utils/wrapOnyxWithWaitForBatch
 // Be sure to include the mocked Permissions and Expensicons libraries as well as the usePermissions hook or else the beta tests won't work
 jest.mock('@src/libs/Permissions');
 jest.mock('@src/hooks/usePermissions.ts');
-jest.mock('@src/hooks/useActiveWorkspaceFromNavigationState');
 jest.mock('@src/components/Icon/Expensicons');
 
 describe('Sidebar', () => {
