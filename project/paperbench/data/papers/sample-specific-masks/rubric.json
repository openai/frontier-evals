{
    "id": "ed9c4cb1-46d3-49bc-abe3-7af02b23b385",
    "requirements": "The paper \"Sample-specific Masks for Visual Reprogramming-based Prompting\" has been replicated",
    "weight": 1,
    "sub_tasks": [
        {
            "id": "f6ca71c4-f327-40bf-826a-27298bf9b564",
            "requirements": "Code for making the required models and datasets available has been implemented",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "3a53fc0d-6969-4948-9967-04e861e22efa",
                    "requirements": "Code for making the required models available for further training and evaluation has been implemented",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "3982c682-eeb3-4298-8ecc-894dee051bdc",
                            "requirements": "Code for making ResNet-18, pre-trained on ImageNet-1K, available for further training and evaluation has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "57d7b55b-a190-4f96-9468-4446a8343575",
                            "requirements": "Code for making ResNet-50, pre-trained on ImageNet-1K, available for further training and evaluation has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "6c6b1ad5-64e9-4985-be0b-97841918c297",
                            "requirements": "Code for making ViT-B32, pre-trained on ImageNet-1K, available for further training and evaluation has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "af5c68cb-0f2b-44af-937f-f80f02add6fb",
                    "requirements": "Code for accessing the required datasets has been implemented",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "f84d16cb-9fa4-4a48-a998-8341fbda33df",
                            "requirements": "Code for accessing the train and test splits from the CIFAR10 dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "d79dc535-2f03-42da-a0dc-d3ec04ce2a3c",
                            "requirements": "Code for accessing the train and test splits from the CIFAR100 dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "08e02fff-9106-4d26-8fab-75b400762f68",
                            "requirements": "Code for accessing the train and test splits from the SVHN dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "95f3c004-5727-4bb0-afb2-6d1ea62209a5",
                            "requirements": "Code for accessing the train and test splits from the GTSRB dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "bfed30a3-49a1-44a6-810c-c04822744046",
                            "requirements": "Code for accessing the train and test splits from the Flowers102 dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "75fd216b-5141-4c86-afe7-458d5f121c5e",
                            "requirements": "Code for accessing the train and test splits from the DTD dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "fe02873b-c79e-40c2-9c7c-04b61bf0f8a5",
                            "requirements": "Code for accessing the train and test splits from the UCF101 dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "b0ddd385-32f8-4cdd-9549-96989613d593",
                            "requirements": "Code for accessing the train and test splits from the Food101 dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "4c9b219d-860f-4571-9ab7-1262786f28e1",
                            "requirements": "Code for accessing the train and test splits from the EuroSAT dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "f45b8463-27f2-4014-8fdb-2c95c23c98be",
                            "requirements": "Code for accessing the train and test splits from the OxfordPets dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "66937e8a-d389-42ad-b860-9090226c8abf",
                            "requirements": "Code for accessing the train and test splits from the SUN397 dataset has been implemented",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "bbd58ef8-54a9-4ed6-a0db-9edac4cd8c6a",
            "requirements": "Iterative label mapping is implemented, following Chen et al. (2023)",
            "weight": 2,
            "sub_tasks": [
                {
                    "id": "34d20504-34c2-4354-8448-41a1120cd46b",
                    "requirements": "The frequency distribution of the dataset of the new task can be computed, following Algorithm 2",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "2a23ed70-e265-48b3-add8-52b8fed355b3",
                            "requirements": "When computing the frequency distribution of the dataset, a matrix $d$ is initialized with zeros; $d \\leftarrow \\{0\\}^{|\\mathcal{Y}^P| \\times |\\mathcal{Y}^T|}$, where $\\mathcal{Y}^T$ are the labels of the target task, and $\\mathcal{Y}^P$ are the labels of the pre-trained task",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "04ab5a91-e779-4ae7-adc2-b2542e8a53dc",
                            "requirements": "When computing the frequency distribution of the dataset, given a target training set $\\{(x_i^T,y_i^T)\\}_{i=1}^n$, for each sample in the training set, the output label is computed as $\\hat{y}_i^P \\leftarrow f_P\\left(f_\\text{in}\\left(x_i^\\top \\vert \\theta \\right)\\right)$, where $f_P$ is the pre-trained model, and $f_{\\text{in}}(\\cdot | \\theta)$ is the visual reprogramming model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "e72bdc32-4752-4664-bf89-cf19d5f1c06a",
                            "requirements": "When computing the frequency distribution of the dataset, for each predicted label $\\hat{y}_i^P$, the frequency distribution matrix is updated; $d_{\\hat{y}_i^P, y_i^T} \\leftarrow d_{\\hat{y}_i^P, y_i^T} + 1$",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "281460e5-70fc-4f12-accd-95bd66047834",
                    "requirements": "The output mapping can be computed, following Algorithm 4",
                    "weight": 2,
                    "sub_tasks": [
                        {
                            "id": "1aa39331-a96a-4a15-b149-8bdc40a8ab9f",
                            "requirements": "When computing the output mapping using Iterative label mapping, at the start of each epoch the frequency distribution of the target training set is first computed",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "2da66162-8014-4073-b299-a2ba8a6aeea5",
                            "requirements": "When computing the output mapping using Iterative label mapping, on each epoch the following algorithm is applied; $\\mathcal{Y}_\\text{sub}^P$ is initialized as $\\emptyset$. Until the size of $\\mathcal{Y}_\\text{sub}^P$ is $|\\mathcal{Y}^T|$ the following steps are taken: 1) the maximum $d_{y^P, y^T}$ in frequency distribution $d$ is found and added to $\\mathcal{Y}_\\text{sub}^P$, 2) the label mapping is updated as $f_\\text{out}^\\text{Ilm} (y^P) \\leftarrow y^T$, 3) the frequency distribution is updated as $d_{y^P, t} \\leftarrow 0 \\text{ for } t=1,2,...,|\\mathcal{Y}^T|$, and $d_{s, y^T} \\leftarrow 0 \\text{ for } s=1,2,...,|\\mathcal{Y}^P|$",
                            "weight": 2,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "ef1d5203-7d97-4795-a4fd-0fed9b7c0e43",
            "requirements": "The baselines have been implemented",
            "weight": 4,
            "sub_tasks": [
                {
                    "id": "3a223807-4b60-4385-b54c-f95882915e51",
                    "requirements": "The Pad baseline has been implemented, where the original image is centered then the noise pattern is added around the image",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "1659bb57-01ba-4637-9645-ed781a6123c1",
                            "requirements": "For the Pad baseline, a pattern is initialized, with shape equivalent to the expected input shape of the pre-trained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "d41661a4-c34a-44c9-8493-f2bcd86e5649",
                            "requirements": "For the Pad baseline, the input image is centered, then the noise pattern is concatenated around the image to form the expected input shape for the pre-trained model (only if the input image is smaller than the required input size for the pre-trained model)",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "09a272e5-cd45-468f-aa8a-ed481a93e7a1",
                            "requirements": "For the Pad baseline, the input image (that has the masked pattern concatenated around it) is fed into the pretrained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "a7cee3c7-4e8d-42a9-8638-24ba50532c76",
                            "requirements": "For the Pad baseline, the predicted label from the pre-trained model is mapped using the iterative label mapping (ILM)",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "2f60699e-e7ed-481b-b151-01ba070f0a9a",
                            "requirements": "For the Pad baseline, cross-entropy loss is computed between the predicted labels and the target labels",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "49822754-dac4-45aa-802f-101732638dce",
                            "requirements": "For the Pad baseline, only the noise pattern is updated through gradient descent",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "7caa69bf-7ba7-4fc6-aeb6-942f0f0da3e5",
                    "requirements": "The Narrow baseline has been implemented, which adds a narrow padding binary mask with a width of 28 to the noise pattern that covers the whole image",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "82aec253-a90a-4515-95c5-a98a45f2b16b",
                            "requirements": "For the Narrow baseline, a pattern is initialized, with shape equivalent to the expected input shape of the pre-trained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "7b29d3dc-4ebf-4b89-a00e-bc6bb6774d95",
                            "requirements": "For the Narrow baseline, a mask is defined with shape equivalent to the expected input shape to the pre-trained model. All values are masked aside from the edges of the image, with this edge having width 28",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "029e1a82-664e-40b0-8e98-56202d5f080c",
                            "requirements": "For the Narrow baseline, each input image is resized using bilinear interpolation to match the expected size of the pre-trained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "c3885380-1f1d-4339-9e6d-0432536f505f",
                            "requirements": "For the Narrow baseline, the pattern is added to the input image only where the mask permits",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "3010baa0-2eb1-427b-b0c3-c27f12c4a06d",
                            "requirements": "For the Narrow baseline, the input image (that has the masked pattern added to it) is fed into the pretrained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "727cea73-8c1c-4015-ab8f-884837a9574f",
                            "requirements": "For the Narrow baseline, the predicted label from the pre-trained model is mapped using the iterative label mapping (ILM)",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "5760dac1-e5e8-4510-8dcb-93786fe80c5c",
                            "requirements": "For the Narrow baseline, cross-entropy loss is computed between the predicted labels and the target labels",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "3d9bfc0b-52b0-4276-9fb8-c828d5d4a82a",
                            "requirements": "For the Narrow baseline, only the noise pattern is updated through gradient descent",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "20e014d4-f9f5-45de-8648-bc1cf2f5eb82",
                    "requirements": "The Medium baseline has been implemented, which adds a mask being a quarter of the size of watermarks",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "c2bd1ec0-4155-49cb-aac2-04b567980314",
                            "requirements": "For the Medium baseline, a pattern is initialized, with shape equivalent to the expected input shape of the pre-trained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "a354fa2f-cb60-4102-9716-a642ce4e98ba",
                            "requirements": "For the Medium baseline, a mask is defined with shape equivalent to the expected input shape to the pre-trained model. All values are masked, aside from a central shape being a quarter of the size of the height and width of the expected input shape to the pre-trained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "07faea63-1076-4e47-bd1a-ce590440dda9",
                            "requirements": "For the Medium baseline, each input image is resized using bilinear interpolation to match the expected size of the pre-trained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "011c0d8d-d496-43d2-bcdc-b11680a3a1d0",
                            "requirements": "For the Medium baseline, the pattern is added to the input image only where the mask permits",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "76426b26-b4c3-48cd-9b3d-f13897a25f75",
                            "requirements": "For the Medium baseline, the predicted label from the pre-trained model is mapped using the iterative label mapping (ILM)",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "67c77561-a6e0-4f29-aa3a-572b8ca05390",
                            "requirements": "For the Medium baseline, cross-entropy loss is computed between the predicted labels and the target labels",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "a1acec74-2544-4769-814f-76e865385127",
                            "requirements": "For the Medium baseline, only the noise pattern is updated through gradient descent",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "d338a856-de24-4b1e-b521-74f92e5057bf",
                    "requirements": "The Full baseline has been implemented, adding a full watermark to cover whole images",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "2b92cd04-d3d9-4e2f-bf77-00b305a79595",
                            "requirements": "For the Full baseline, a pattern is initialized, with shape equivalent to the expected input shape of the pre-trained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "19720506-113d-45b6-9a81-ba89ed523ec8",
                            "requirements": "For the Full baseline, each input image is resized using bilinear interpolation to match the expected size of the pre-trained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "d9690901-0608-43bc-ba05-de5f7fdd866a",
                            "requirements": "For the Full baseline, the pattern is added to the input image",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "618c8e96-f4d0-41bb-acc6-6c39ea233ac7",
                            "requirements": "For the Full baseline, the input image (that has the pattern added to it) is fed into the pretrained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "11e338dc-981c-4f78-989f-d170e615bd5c",
                            "requirements": "For the Full baseline, the predicted label from the pre-trained model is mapped using the iterative label mapping (ILM)",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "cda0f380-0bfd-4658-83e0-5214fc81e560",
                            "requirements": "For the Full baseline, cross-entropy loss is computed between the predicted labels and the target labels",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "7b3f1fd1-149c-450f-b823-c7fa64e15c23",
                            "requirements": "For the Full baseline, only the noise pattern is updated through gradient descent",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "8d58ac61-3e5e-4058-a69e-8ac758ec9555",
            "requirements": "SSM has been implemented",
            "weight": 10,
            "sub_tasks": [
                {
                    "id": "fe4f42fb-ee29-4c26-9385-f1a6472e6b23",
                    "requirements": "For SSM, each input image is resized using bilinear interpolation to match the expected size of the mask generator",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Data Processing & Preparation"
                },
                {
                    "id": "7b6e10a8-0eae-4b90-9360-e7b2f0680029",
                    "requirements": "The mask generator module is implemented, following Section 3.2",
                    "weight": 6,
                    "sub_tasks": [
                        {
                            "id": "1ab8f27b-1af7-45f6-b0f6-694fabcbbed8",
                            "requirements": "The mask generator for SSM is implemented",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "d31c0a41-d99a-489c-ac50-c227c61d35ab",
                                    "requirements": "When the SSM method is used with ResNet-18 or ResNet-50, the mask generator has the correct architecture",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "28be07ce-4482-4813-ae60-9824fdb26970",
                                            "requirements": "When using the SSM method with ResNet-18 or ResNet-50, the mask generator is a 5-layer CNN",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "c4ae713d-03bc-487d-82b0-61414ace95cc",
                                            "requirements": "When using the SSM method with ResNet-18 or ResNet-50, the first layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 8 output channels, followed by BatchNorm, ReLU, then a 2*2 Max Pool",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "02c368c6-9447-4d0b-bdb9-3e8b6719be02",
                                            "requirements": "When using the SSM method with ResNet-18 or ResNet-50, the second layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 16 output channels, followed by BatchNorm, ReLU, then a 2*2 Max Pool",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "b3bb8a27-abe3-4b9b-a22e-0a2a0df25ef8",
                                            "requirements": "When using the SSM method with ResNet-18 or ResNet-50, the third layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 32 output channels, followed by BatchNorm, ReLU, then a 2*2 Max Pool",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "adad65b3-7c4f-46a0-89b8-c4c0b1db4969",
                                            "requirements": "When using the SSM method with ResNet-18 or ResNet-50, the fourth layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 64 output channels, followed by BatchNorm, then ReLU",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "a3709fb5-e8d2-4e18-9fd0-5f819c20f278",
                                            "requirements": "When using the SSM method with ResNet-18 or ResNet-50, the fifth layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 3 output channels",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "8cf2d714-61dc-4863-9c89-13625e0df128",
                                    "requirements": "When the SSM method is used with ViT-B32, the mask generator has the correct architecture",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "50319077-9185-444a-abb3-124e17143454",
                                            "requirements": "When using the SSM method with ViT-B32, the mask generator is a 6-layer CNN",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "59ff8add-298c-476e-96e2-8820acd6ef7f",
                                            "requirements": "When using the SSM method with ViT-B32, the first layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 8 output channels, followed by BatchNorm, ReLU, then a 2*2 Max Pool",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "33204cda-df15-4390-8472-934e7cbc217f",
                                            "requirements": "When using the SSM method with ViT-B32, the second layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 16 output channels, followed by BatchNorm, ReLU, then a 2*2 Max Pool",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "5fc09bcb-ded4-4641-9d18-050c13edb383",
                                            "requirements": "When using the SSM method with ViT-B32, the third layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 32 output channels, followed by BatchNorm, ReLU, then a 2*2 Max Pool",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "c43bdbe6-744c-4a35-8001-9e6411387b2a",
                                            "requirements": "When using the SSM method with ViT-B32, the fourth layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 64 output channels, followed by BatchNorm, then ReLU",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "7719f69d-f138-46d3-a528-fd338f5e37e0",
                                            "requirements": "When using the SSM method with ViT-B32, the fifth layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 128 output channels, followed by BatchNorm, then ReLU",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "a03cef9e-9922-4be5-8d4e-81169f7c307d",
                                            "requirements": "When using the SSM method with ViT-B32, the sixth layer of the mask generator is a 3*3 convolution of padding size 1 and stride 1 with 3 output channels",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "43b56ae9-41a4-42f0-b947-f3ad5c90714a",
                            "requirements": "In the mask generator module in SSM, given a three-channel image as input with height $H$ and width $W$, the mask generator outputs a three-channel mask with dimensions $\\left\\lfloor \\frac{H}{2^l} \\right\\rfloor \\times \\left\\lfloor \\frac{W}{2^l} \\right\\rfloor$, where $l$ denotes the number of pooling layers in the mask generator CNN",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "08725404-1845-4277-94ed-3e68477b2a54",
                    "requirements": "The Patch-wise Interpolation Module is implemented, following Section 3.3",
                    "weight": 4,
                    "sub_tasks": [
                        {
                            "id": "0315e7cf-6348-4a44-ba10-56eb29ff07e7",
                            "requirements": "In the Patch-wise Interpolation Module in SSM, if the number of pooling layers in the mask generator CNN is not zero, each pixel is enlarged to $2^l \\times 2^l$ pixels using bilinear interpolation. If this expansion does not evenly cover the image area (e.g. near the image edges) the value of the nearest available pixel is used to fill in any gaps.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "1148dc53-dfe7-43b8-9565-1b4d057ac44d",
                            "requirements": "In the Patch-wise Interpolation Module in SSM, if the number of pooling layers in the mask generator CNN is zero, then the input image is not enlarged",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "d84cf01b-8534-47a5-b11b-c491809f14dd",
                    "requirements": "The learning strategy is implemented, following Algorithm 1",
                    "weight": 3,
                    "sub_tasks": [
                        {
                            "id": "613293bb-9868-458a-98bb-eb25b05ef5f7",
                            "requirements": "When training a model using the SSM method, the parameters of the CNN mask generator are initialized randomly",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "d032889a-bbe7-4d7b-a912-195f277c3566",
                            "requirements": "When training a model using the SSM method, the pattern $\\delta$ is initialized to zeros",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "dc46fc23-12fd-44ef-845f-c435dc4ae22e",
                            "requirements": "When training a model using the SSM method, for each training batch, each image is first resized using bilinear interpolation if they do not match the expected input shape of the pre-trained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "0fde2a77-a2d2-452e-bfce-ef78b96531ab",
                            "requirements": "When training a model using the SSM method, individual masks for each image in the training batch are generated by the mask generator",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "0cea4c76-6b6d-4b12-959f-cbbfe2a8afa5",
                            "requirements": "When training a model using the SSM method, the generated masks for each image in each training batch are resized using the patch-wise interpolation module",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "27c360ce-967b-49ec-81e7-80c9af5e93f7",
                            "requirements": "When training a model using the SSM method, for each image in the batch, the pattern $\\delta$ is multiplied with the mask on a pixel-wise basis and added to the resized input image (which has just resized using the patch-wise interpolation module)",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "fa5b099d-814a-4a0f-a5fb-c13522e80285",
                            "requirements": "When training a model using the SSM method, the resized input image (with the masked pattern added) is fed into the pretrained model",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "00b9d128-545c-4ed3-b493-2200bbd21fa7",
                            "requirements": "When training a model using the SSM method, the predicted label from the pre-trained model is mapped using the computed iterative label mapping",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "37ad5b36-37c2-477a-94f4-699ac646af46",
                            "requirements": "When training a model using the SSM method, cross-entropy loss is computed between the predicted labels and the target labels",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "2ec1cff4-ac72-44af-9033-08232cca5f92",
                            "requirements": "When training a model using the SSM method, the pattern and parameters of the CNN mask generator are updated through gradient descent",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "0d282c58-e27c-41ce-8a76-186140292559",
            "requirements": "The results from section 5 have been replicated",
            "weight": 10,
            "sub_tasks": [
                {
                    "id": "a3cb3b40-b503-44ac-b2d1-007d23d35c15",
                    "requirements": "The correct hyperparameters have been implemented",
                    "weight": 3,
                    "sub_tasks": [
                        {
                            "id": "447beb51-ef8e-4154-aa60-6fecc7285568",
                            "requirements": "The hyperparameters for the Pad, Narrow, Medium and Full baselines have been implemented",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "e1b7d56c-f670-444e-86ea-011fad9c1c97",
                                    "requirements": "The Pad, Narrow, Medium and Full baselines are trained with an initial learning rate of 0.01",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "c19f72e5-3023-4ab6-9435-9a87058406d2",
                                    "requirements": "The Pad, Narrow, Medium and Full baselines are trained with a learning rate decay of 0.1, which is applied on the 100th and 145th epochs",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "23394dfb-c8f2-4f59-b760-3c4df5532ca2",
                                    "requirements": "The Pad, Narrow, Medium and Full baselines are trained for two hundred epochs",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "0e394886-4be0-4413-a051-9fb926330dd3",
                                    "requirements": "The Pad, Narrow, Medium and Full baselines trained on any of the CIFAR10, CIFAR100, SVHN, GTSRB, FLOWERS102, UCF101, FOOD101, SUN397, EUROSAT datasets use a batch size of 256",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "ff567973-3773-46fc-8c25-afa9d193097d",
                                    "requirements": "The Pad, Narrow, Medium and Full baselines trained on either of the DTD and OXFORDPETS datasets use a batch size of 64",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "0bea2ad5-705e-49f1-ae08-52c115c1ee0d",
                            "requirements": "The hyperparameters for SSM have been implemeneted",
                            "weight": 6,
                            "sub_tasks": [
                                {
                                    "id": "e4008f21-5f73-4495-85b9-8c81b0e95444",
                                    "requirements": "The dataset-specific hyperparameters for SSM have been implemented correctly",
                                    "weight": 4,
                                    "sub_tasks": [
                                        {
                                            "id": "87b4dcc3-ae76-4d29-b521-8374efd8e1ab",
                                            "requirements": "All ResNet models trained on any of the CIFAR10, CIFAR100, SVHN, GTSRB, FLOWERS102, UCF101, FOOD101, SUN397, EUROSAT datasets use a batch size of 256, initial learning rate of 0.01 and learning-rate decay of 0.1",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "2ac32251-5599-4888-9ad1-4be5532e7447",
                                            "requirements": "All ResNet models trained on either the DTD or OXFORDPETS dataset use a batch size of 64, initial learning rate of 0.01 and learning-rate decay of 0.1",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "7799ad6e-56a5-43c5-958d-6bc0ad6c9f4b",
                                            "requirements": "All ViT models trained on any of the CIFAR10, CIFAR100, SVHN, GTSRB, FLOWERS102, UCF101, FOOD101, SUN397, EUROSAT datasets use a batch size of 256, initial learning rate of 0.001 and learning-rate decay of 1",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "81fdf891-093d-4879-87a9-0fe1c97a5213",
                                            "requirements": "All ViT models trained on either the DTD or OXFORDPETS dataset use a batch size of 64, initial learning rate of 0.001 and learning-rate decay of 1",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "a27fe007-59e6-4ccd-a8c0-1eb856cfe9ed",
                                    "requirements": "Unless otherwise stated, the patch size for SSM is set to $2^l$ where $l$ is the number of max-pooling layers",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "913baecd-873f-4fe9-a701-99ed55502290",
                                    "requirements": "When training models with the SSM method, if a learning rate decay that isn't 1 is used, the learning rate scheduler applies the decay factor on the 100th and 145th epochs",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "ca0ce50b-517c-4f35-8f4f-51af260d89e6",
                    "requirements": "The experiments and results for the \"Results on ResNets\" subsection have been replicated",
                    "weight": 6,
                    "sub_tasks": [
                        {
                            "id": "5929e33d-9bc8-44a0-8b06-dc297d8ad58c",
                            "requirements": "The experiments under the \"Results on ResNets\" subsection have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "dc97d9d9-0c7d-4a2c-9514-803c7be2adad",
                                    "requirements": "For each input reprogramming method \"Pad\", \"Narrow\", \"Medium\", \"Full\", \"Ours\", ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "aa4ef20b-75c6-49f8-a41d-44d798a51068",
                                            "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "29ccdd70-e06c-4317-8fce-b698657e6859",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "507aac89-d860-4cc5-a8f5-a4953412c82a",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "cc6cc6c8-b198-4a7a-99db-5256e0e73240",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "780ff552-bbe9-4d3d-bb73-bc704acd4a6a",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "55186fba-a6e3-4296-872e-3cf423508676",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "890db47b-85d4-4fc7-bfd5-8695a090cad8",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9435d586-0ad5-4276-8ef4-3b7f84ecd883",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "7d3baa68-7210-4700-ae69-81edfe605a14",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "179ec066-78af-4c98-b33a-8a996015b8b2",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "5eff8822-110b-454b-9453-1e77d0da3ed9",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "e345f418-b3b7-412f-a792-fcd1fd2b8d8b",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "2241a4de-ed71-4c3a-ae0d-a406d5e7a58d",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "28778123-dfc5-4cee-a284-131270c0f159",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "bc1ed4f4-55f3-4600-9a44-6285695ac92e",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "cfb894a7-3cdc-48fa-b307-b93d75fcc4c4",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "6b70962f-569c-4526-897d-66f07d70264a",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "0b93529d-971a-47ec-a6b1-1eab09d5577d",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "854a61a6-8efd-460c-b801-f4aa7e8f058d",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "a0666b7f-f5a4-4210-bfa2-e94baeaa3f9d",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "2665ab5f-488b-4bb5-bac7-cad8f8a0006a",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c5196646-8166-4f11-bc17-07f2d6938bf5",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "5e68176b-47e9-46cc-bb67-a4c909ecd762",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "67ee77ae-e13b-459f-ac99-ff9ab3889a19",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "88af9a93-ed42-41df-811e-351e52cc1c5c",
                                            "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "1453da88-a0b4-43f4-92aa-305c06b56c9b",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "b6e34e59-9b30-48d0-9d67-e0b73209eeed",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "a1104084-44e6-431b-83fd-a3ff16203159",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "5915df12-91e2-445d-8938-520188dcd02e",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "5f73fbf7-a070-4fee-beeb-74960688368c",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "c4b92a9c-4961-42a7-98d6-c7c9ac993847",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "89abb1eb-a439-44b8-9a3a-3c83b8318200",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "5c66af9c-cc0c-41ca-8417-550bb4b931a4",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "955b0715-d788-4f0a-818b-90736f25a360",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "5b3bc88a-1aa8-4bcb-aad7-7f9a0b9e2fd2",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "938918ed-4ba3-4cb5-a7b1-e0ef8e8fa629",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "5921c312-87b7-4f27-8d4e-4324848f0af5",
                                            "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ef08558e-06dd-4168-b274-2fd1d5de1c1e",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c420319f-a681-45c1-8869-3d9d2db0679c",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "f3f20f30-4785-4854-addf-c5297541e019",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "71dcda3d-7d5a-45c0-9b7d-7884f8126569",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "e59d6acb-ad45-4e95-bdb6-727bc2d5ed03",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "80bcba6f-a09f-4907-a871-bc461da20a16",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "8ce8c977-a950-4e41-9c8c-ae5208fc67a2",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "2710a81b-28a7-4440-95bf-376522377e0b",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "ce5a7f07-8650-47e2-9271-4052061201e0",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "a73f93c3-6820-4954-b332-99e09bef9e5b",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c42da8be-4177-4372-bba2-dd8d50e24358",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "b96f2194-3c2f-4648-bf7a-5fd15e8d8a19",
                                            "requirements": "Using the SNS method (\"Ours\") method, ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "4e8a2662-0cbf-4d73-8b57-49cc0727f30b",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "495e381e-68e4-4b1d-a59e-55f3a63116ad",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "8d6e26aa-8470-4af6-b372-8b43d3d64dad",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "14755d1a-a325-4c39-ac0b-c35b8fc4a69b",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "bc63b917-7f1a-4102-beff-30a5c62ca8ca",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "5e321fad-a1f8-4571-b113-31d82214a317",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c5d8822e-2d53-4d54-83e8-a9687c694f6c",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "468a2a76-7ffc-48aa-bcec-0cb2946f623b",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "f6cb53fa-d651-4557-b693-a82d5937805e",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "6b00f1df-6407-4f2b-afe0-7e9d46e3046b",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "d7e8316a-b815-424c-bed3-2cfd9509dc91",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "85429a81-ad78-487a-b9c2-f92e73f2ab78",
                                    "requirements": "For each input reprogramming method \"Pad\", \"Narrow\", \"Medium\", \"Full\", \"Ours\", ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "776981bd-9e5f-4a8b-b7c0-7059588ba646",
                                            "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "83f678ea-5f73-42d5-8512-3093fe35b4c5",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "7968f4a6-b007-48c7-ad1a-23215c223b2a",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "5565a652-2ac5-4ca8-95b4-fc936f71291b",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "2fba687d-b9ce-4dcc-b8d8-84197538ce1b",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "e9a1a7b1-39d1-4cb3-a977-7b9262a0f591",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "10f5e67c-a065-408d-a72b-1e6bd54cf2a0",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "07a67783-16e1-47bf-9f91-9939e1dd18aa",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9b54a965-1cb8-43d5-b417-16819d33656f",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "99eb0dbf-09b6-4e1a-8462-3fd7abdcc4a6",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9a2fb5fe-926d-47a9-a73c-7724ced34915",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "f764b439-0d7d-4fb3-a00a-149d06eb1a41",
                                                    "requirements": "Using the \"Pad\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "59a61269-a38c-44e1-8c1d-d9bd43de6c1b",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "32489ae8-3e3f-4b98-a26d-25ceecaef662",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "a034d906-bd34-42d4-bfd5-a95f1ed437cb",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "5dfcb1ba-7497-4941-b323-9f26ca8f6e65",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "b69ea444-84d1-42f3-a1f6-7b56782d149a",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c0fc1fa5-ece1-44fc-a8c8-9b7616761cef",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "d5f0f39e-e0b5-4900-bf34-fb227db50403",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "edeea2d0-e7dc-4eca-b9e6-a4c295888259",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "e8d66a6d-7472-4519-a446-6a26d3fabc05",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "95b4b89e-9a09-4dd1-9b6e-92f715187368",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "7442d669-f15e-4585-8aa9-93900ee9e4af",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9559594d-ce98-446a-8593-000786a69af6",
                                                    "requirements": "Using the \"Narrow\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "dfa1ba4b-55ad-4986-8a04-091fd27bf008",
                                            "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "58735ef8-a1e9-4df9-9c32-c712715f62f1",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "b698d089-8b6b-47f9-bbe7-fab47b8b164f",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "98a95e4e-0bf0-4b57-bf6d-d76f66b1b8b8",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "24039560-d8bb-4afd-9a95-c7287791d21c",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "0bba9e2e-f524-447e-84ed-16b002d98244",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "92c3101e-9169-4c03-9505-e92f88591d21",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9150117a-4e00-45ba-a940-1c01f14ac5ed",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "3301b18f-c642-40e0-9cad-afdce9c4f637",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "d95f1d64-1235-4164-82eb-d246084b5201",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "3450328c-0773-4325-b8f8-0c32ba0279a3",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "41d6bccb-cff7-4bdd-98fb-300a56b0977e",
                                                    "requirements": "Using the \"Medium\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "0876cd83-7614-49fd-b15c-8b16e7bc2724",
                                            "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "9f41ef29-a3d6-4ec3-92ce-82566db70798",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "11c8c88e-2a95-42ee-a6ce-3fc5a055928f",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c1effc96-953b-4bf5-9481-66629ec73072",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9f77f402-9a84-4832-bb56-aac26818ebef",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "946fa5d8-acca-4a9e-a09a-60842c291c74",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "d5db6a1b-37b5-4c02-9e19-ae8aee6fcc1b",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "0b4fe8c3-0306-40aa-82dd-a8351b3eb7ac",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "d655c4ad-e3e9-44f4-980a-a5d5920baa26",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "1583dd48-8e9a-4fef-bd5a-9d585b87cc70",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "6c196096-ef61-4479-a0a9-445fdbeb5d01",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "dcd5d8f4-6feb-49df-b62e-fe88e29ff552",
                                                    "requirements": "Using the \"Full\" reprogramming method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "b418bb95-f880-4f60-8c1b-d19887ca0a2b",
                                            "requirements": "Using the SNS method (\"Ours\") method, ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "6c15c084-aac0-449f-8605-d1c5dc358014",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "a14d923a-3eee-431d-b317-0ecce2c6a749",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "7aae7881-87c4-46ee-a870-d805c2811fb8",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9c5f6794-9b12-4f9b-b0fe-632c387819df",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "6e482102-b67f-4e1c-a8a7-15445abf75bf",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "275f8b37-9731-423f-bac6-08362b0e3ce0",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "7a933ee3-2907-4780-b739-cdc4d55629a5",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "d5073146-7a28-4f48-ae90-7f80be8e20f9",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "087d756b-3a54-42a3-a8ed-4ab5c8be52f1",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9fde268b-642c-4de9-b68d-859aa8cf98ae",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "417f9acb-c222-41c1-89fe-a9c32a995190",
                                                    "requirements": "Using the SNS method (\"Ours\"), ResNet-50 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "c60474a1-6f48-4fdc-9a69-2f47a2a68f91",
                            "requirements": "The results under the \"Results on ResNets\" subsection have been replicated",
                            "weight": 6,
                            "sub_tasks": [
                                {
                                    "id": "e252d7b2-0ce6-49d2-b1b8-3022ca99f085",
                                    "requirements": "The recorded metrics show that SMM yields higher accuracy compared to all other input reprogramming methods for ResNet-18 on almost all datasets",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1415e5b0-7934-4e3e-b7d3-7ab84d1b7da8",
                                    "requirements": "The recorded metrics show that SMM yields higher accuracy compared to all other input reprogramming methods for ResNet-50 on almost all (or all) datasets",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "28aade60-b9c2-4d87-b732-3454e221f4a2",
                                    "requirements": "The recorded metrics show that SMM roughly has a 6% (absolute) improvement over the next best input reprogramming method when using ResNet-18 on the SVHN dataset",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "97149f22-4d19-451e-8a86-9e407cda5c0d",
                                    "requirements": "The recorded metrics show that SMM roughly has a 3% (absolute) improvement over the next best input reprogramming method when using ResNet-50 on the SVHN dataset",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e3db8d69-e576-4a86-99ca-ca09f7b233e9",
                                    "requirements": "The recorded metrics show that SMM roughly has a 10% (absolute) improvement over the next best input reprogramming method when using ResNet-18 on the Flowers102 dataset",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "36b3e62b-e1ae-41ab-9c61-4a51053e9b71",
                                    "requirements": "The recorded metrics show that SMM roughly has a 10% (absolute) improvement over the next best input reprogramming method when using ResNet-50 on the Flowers102 dataset",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b1f97919-8387-45c0-8c72-5127475b255b",
                                    "requirements": "The recorded metrics show that the Pad method performs the best, or amongst the best, compared to other input reprogramming methods when using ResNet-18 on the DTD dataset",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "49a90fac-eb65-4cd0-a65f-14395e89b6d4",
                                    "requirements": "The recorded metrics show that SMM has the highest average accuracy across all datasets when using ResNet-18",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "7a6194fb-9f1b-4ede-8cab-9a3f53a3a9f9",
                                    "requirements": "The recorded metrics show that SMM has the highest average accuracy across all datasets when using ResNet-50",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "e94e6b1e-41aa-4c56-9241-842a280ffa25",
                    "requirements": "The experiments and results for the \"Results on ViT\" subsection have been replicated",
                    "weight": 4,
                    "sub_tasks": [
                        {
                            "id": "ecc41c79-7a97-4486-a88d-a67d224c00a5",
                            "requirements": "The experiments under the \"Results on ViT\" subsection have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "6767625b-bd9b-45ea-8576-e5358f174332",
                                    "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "7dc555f2-f658-4371-83e1-9d282611b244",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "a4cb092c-7ead-48c8-a457-3777e86c974e",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "e3784854-210a-4e49-a0c4-2da72d546278",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "3bda93fb-a0ad-4ab0-b695-fbebbc1f2ff2",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "cdc0c7bb-577b-4f3c-83fe-34094d4248d7",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "9a3215ff-923e-4c39-89f5-c78fa0409b09",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "4c4295aa-f234-4271-b51f-30682ed8a836",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "861a7718-9e50-4dd5-8b18-51f75e41f0e4",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "9b37d411-0d4d-4c9f-bc2a-2171a18fcc2d",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "61528951-e962-4356-950d-ea9b19205418",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "007014ce-e63c-4d91-83ca-d43f6e35a78b",
                                            "requirements": "Using the \"Pad\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "31d17bdd-11f0-478d-b2b8-a7eb2d0df3c2",
                                    "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "d3de71e0-6ea5-4d62-8445-c6cbc548812b",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "7d0c7ab5-2637-4536-9993-a1040d2b2093",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "aec8c31f-42d3-4232-81b1-e7ccb1a170f7",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "143eeb00-fb65-45cf-8cc8-abf6d889e89f",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "dfc8a555-d9af-420d-b41c-8e6392e6b0e8",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "1f1e30fa-97d3-4e06-9ace-d0c8b47d37d4",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "e37ef9d5-0d92-413b-8be5-4d721666d043",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "afe9b04f-1a4a-438b-9d3a-b28ec47ee2de",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "02d0cdaa-3646-4d36-b1e8-71e8142aae3b",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "07137382-42ef-488e-bda0-89658f0fa86d",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "b8eb525b-553b-4b4a-bb0e-6906c3b570a7",
                                            "requirements": "Using the \"Narrow\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "4de24724-40f1-473c-9301-a034c5c30ceb",
                                    "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "4da5e242-4a52-41f7-adb8-a8508d3c2596",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "28fe8c6f-b124-4ce7-a0df-5c99a059c841",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "2966827f-f671-4cfe-ae2c-010fef9c2c43",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "5b2cf32c-d3cf-4d64-b6b9-6fb707ed7b75",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "e0ac3242-11cb-4f2f-9e79-28ecb4b275de",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "7f079120-3868-457e-9ecb-6edf2d53720b",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "363351dd-8141-4789-9977-0c35273159dd",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "e1234c1a-928f-4229-9e09-714dcbb75700",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "4d17958c-fa70-47a8-8ba8-624d7d6298e7",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "b923fa20-f96a-4615-9b63-d40cb2264347",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "5c925894-e2f0-4eee-83bc-f3a81dc08af8",
                                            "requirements": "Using the \"Medium\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "27a903f3-ba72-435c-92a1-e13b6b1d8945",
                                    "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "22ef5a0c-4a35-4514-8457-d5651f1a1e83",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "ef4bc970-bc9a-4c55-a6fd-d346c89bfbc3",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "24558a39-92c2-4d6c-a9e8-2804de1a49c2",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "70d90d62-24fe-425a-8599-d202675276bf",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "8fdd510b-5c9b-4399-9146-8b0ced98da88",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "1cdfef7d-cdca-42b5-8dd5-698c637b5b6d",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "00425b26-1080-4365-b1da-8585ab59848f",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "c91b790d-0331-46a8-8595-f509968ab135",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "430082f8-6cee-428a-a969-2b16fb27031e",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "af3101ed-66b0-4eaf-b328-578722fea0c6",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "55b2acbd-744b-4ef7-984d-98037c25939d",
                                            "requirements": "Using the \"Full\" reprogramming method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "99139ae7-7045-4935-8950-fbc1ce984f64",
                                    "requirements": "Using the SNS method (\"Ours\") method, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "d70c899c-d646-4f38-a5c2-4f62c640a0ac",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "8fb53b93-758d-4dea-8be2-2cb8b8d56bbc",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "537b5685-9202-4469-8368-1e439989a60d",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "32543e16-0c23-4ca2-bc2d-5f4f16ad85d0",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "1055ba97-54aa-4e2f-8877-999c11c7ce34",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "c506baff-8a3f-42a6-92b9-9bb590d7223a",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "79f4440d-1313-4660-aca0-d49f177b173f",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed. Here, ViT-B32 is trained with an initial learning rate of 0.01 and learning rate decay of 0.1",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "43767618-84d8-40e1-8a26-7d170b93d451",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "fde40183-7405-4529-9e68-0b48d4f8e41a",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "46ce4412-102f-44c6-b900-cf7043c63c11",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "9d7ca2f0-26fb-4678-9952-a452aefae37d",
                                            "requirements": "Using the SNS method (\"Ours\"), ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "33cea5bf-2b70-4b3d-bdf8-2288f866dc3c",
                            "requirements": "The results under the \"Results on ViT\" subsection have been replicated",
                            "weight": 4,
                            "sub_tasks": [
                                {
                                    "id": "80b9098e-1af8-42a0-bd45-8eebd0fac155",
                                    "requirements": "The recorded metrics show that SMM achieves roughly a 22% (absolute) improvement over the next best input reprogramming method for ViT on the Flowers102 dataset",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "688a2c83-0e01-4629-8e56-67c46a3c5371",
                                    "requirements": "The recorded metrics show that SMM achieves roughly a 15% (absolute) improvement over the next best input reprogramming method for ViT on the Food101 dataset",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "d061ec1a-8fd3-4b4f-b582-e14ffb92f688",
                                    "requirements": "The recorded metrics show that SMM achieves roughly a 7% (absolute) improvement over the next best input reprogramming method for ViT on the SUN397 dataset",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b20f72ec-e4b0-47e2-b870-ce5a8ff3acbc",
                                    "requirements": "The recorded metrics show that pad performs the best, or amongst the best, compared to other input reprogramming methods for ViT on the EuroSAT dataset",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "254a0ee2-b82d-4370-8a08-383fd1e63c47",
                                    "requirements": "The recorded metrics show that SMM, trained with the ViT version with an initial learning rate of 0.01 and learning rate decay of 0.1, achieves the best accuracy on the UFC101 dataset compared to all other input reprogramming methods",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "3ba0b378-7720-41f4-80f8-b943868d140f",
                    "requirements": "The ablation-study experiments and results for the \"Impact of Masking\" subsection have been replicated",
                    "weight": 6,
                    "sub_tasks": [
                        {
                            "id": "60ee4ddb-edf1-459d-b68b-30280da599ef",
                            "requirements": "The SMM variants for the \"Impact of Masking\" subsection have been implemented",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "4ab4e8e2-9fe0-41bd-8f53-6950e8230b23",
                                    "requirements": "The Shared-pattern VR variant (aka. \"only $\\delta$\") is implemented by defining visual reprogramming as $f_\\text{in}(x_i)=r(x_i)+\\delta$, where $r$ is bilinear interpolation, i.e., no masking is used",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "b525d390-b25f-4635-b848-dbd5845c0a67",
                                    "requirements": "The sample-specific pattern without masking variant (aka. \"only $f_{mask}$\") is implemented by defining visual reprogramming as $f_\\text{in}(x_i)=r(x_i)+f_\\text{mask}(r(x_i))$ where $r$ is bilinear interpolation, i.e., no pattern is used",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "647e8cc8-d90f-43f5-8ff1-6d24d5cce58c",
                                    "requirements": "The Single-channel version of SMM variant (aka. \"Single-Channel $f_\\text{mask}^s$\") is implemented by implementing VR as $f_\\text{in}(x_i)=r(x_i)+\\delta \\odot f_\\text{mask}(r(x_i))$, i.e., a single-channel version of SMM is used, averaging the penultimate-layer output of the mask generator",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "50e188d6-ca01-42bb-8954-e5d08dc1d320",
                            "requirements": "The experiments under the \"Impact of Masking\" subsection have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "d7612d5a-a154-426a-b021-ebc3707323cf",
                                    "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "bb1e2cb0-d8eb-4a85-b42a-f6b104ff1fda",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "01b09996-0e4d-49f5-b4ba-4fac65b3364c",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "ca6cd119-552d-4d7c-80cc-aef42d6fa342",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "76919e09-f9d4-4b2f-a5b5-3db205b416d0",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "4f62b012-fa80-4899-8adb-9e7f240203dc",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "5ddba7bd-23ff-4b0f-9569-9b04d6261abe",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "12d6d708-4740-44c9-82b8-9c31f3026ef7",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "ec58b52e-9130-47ce-98b0-992c1fedd24b",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "05fb0ae1-e802-45a9-ae41-7ab94448e244",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "850b7e2a-f61d-4289-afbf-e8ecf57502aa",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "82737700-10b7-44d7-a158-eec43ddc8254",
                                            "requirements": "Using the \"Shared-pattern VR variant\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "c4ec3202-8406-4ea6-bf5a-c70aa22c0077",
                                    "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "ded7a725-4b1b-47b5-9c72-5145cd84c28b",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "d5023250-623b-4979-a8e3-11337668ad3b",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "3c7a8443-b6cf-4317-be07-b9cb4cf0cc20",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "58fa0ebb-150c-474f-b93f-85181300e01d",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "86c2b1ea-48b0-4c34-8978-b367ab8d3679",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "b7f5c413-0c1d-4192-ab41-c9a8b1d1e2b1",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "cb58e7bb-b960-47eb-87bc-76dce05c5761",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "5060ba82-8c58-46b5-8ceb-28405ca04ccb",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "b737cf67-10f5-4848-8606-7015f70f9ce6",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "53387120-fc5f-4c05-bdc8-f07472041752",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "a2ab7f2f-9e7b-4761-9d6f-e5d20065212a",
                                            "requirements": "Using the \"sample-specific pattern without masking\" SMM variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "71892f2a-c72c-4a05-a9e2-ef32089d718a",
                                    "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of all datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "645fe9c1-d993-41b9-a227-2a89b0647041",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR10 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "6832335d-c86f-4aa7-b7a7-e7adf0e2531a",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "ccc82fe7-9338-463b-994e-34e08182ad99",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "c7adc31d-2cfb-4c68-adb0-fb9fcc1b2532",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the GTSRB dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "08f30815-c66a-419a-a750-e1e15377ecb7",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "e9030090-75a9-4752-8f93-fe062f303b8a",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the DTD dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "31684286-d9d8-496e-a6d7-91c9617b3508",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the UCF101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "c603cb34-a59b-4d93-bed3-5c67784e9311",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the FOOD101 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "8b6a66ba-207e-40f4-97ea-1f163a36a35e",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the SUN397 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "16dbc97f-c485-44f2-978d-1a0585eba671",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "ad45e93e-06b0-44b7-966c-d58787c72357",
                                            "requirements": "Using the \"The Single-channel version of SMM\" variant, ViT-B32 (pre-trained on ImageNet-1K) has been fine-tuned on the train split of the OXFORDPETS dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "573030cb-29bc-4e10-946c-99254725d554",
                            "requirements": "The results under the \"Impact of Masking\" subsection have been replicated",
                            "weight": 4,
                            "sub_tasks": [
                                {
                                    "id": "f516bb4c-c129-4857-8d80-2203a9e0260d",
                                    "requirements": "The recorded metrics show that the default SMM (\"Ours\") method achieves the best average accuracy for each dataset across all mask variants for ViT",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "105c14cc-bf0d-486c-ada0-815d82a92613",
                                    "requirements": "The recorded metrics show that the Sample-specific pattern without masking variant (aka. \"Only $f_\\text{mask}$\") achieves the lowest average accuracy for ViT for the CIFAR10, SVHN, GTSRB, and SUN397 datasets",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "251d1112-d76b-463a-add8-6f6b6e801f16",
                                    "requirements": "The recorded metrics show that the Single-channel version of SMM variant (aka. \"Single-Chanel $f_\\text{mask}^s$\") performs significantly worse (at least 5%) than the default SMM (\"Ours\") method for ViT for the GTSRB and Flowers102 datasets",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "831c1eb8-9795-49fe-a54b-69fb43eb176d",
                    "requirements": "The ablation-study experiments and results for the \"Impact of Patch Size\" subsection have been replicated",
                    "weight": 4,
                    "sub_tasks": [
                        {
                            "id": "64f1fdd6-3676-42ab-b14a-112591d3b510",
                            "requirements": "The experiments under the \"Impact of Patch Size\" subsection have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "ab7f2c53-49e2-4a21-9ad2-908ae8aabc12",
                                    "requirements": "Using the SNS method (\"Ours\") method, ResNet-18 (pre-trained on ImageNet-1K) with patch size 1 (i.e. the mask generator has zero max-pooling layers) has been fine-tuned on the train split of the CIFAR100, SVHN, FLOWERS102, EUROSAT datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "336893af-7dcb-4791-8cf6-40bbf4f57083",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 1 (i.e. the mask generator has zero max-pooling layers) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "b016a53e-5a12-403a-840f-c879d8383220",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 1 (i.e. the mask generator has zero max-pooling layers) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "75c8bfe3-6502-478e-8d27-eace694ba330",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 1 (i.e. the mask generator has zero max-pooling layers) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "f426b856-22cf-4aed-ab75-dd8ac47cc614",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 1 (i.e. the mask generator has zero max-pooling layers) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "667389fe-58f0-4249-a1c0-9576d95d0b2b",
                                    "requirements": "Using the SNS method (\"Ours\") method, ResNet-18 (pre-trained on ImageNet-1K) with patch size 2 (i.e. the mask generator has one max-pooling layer) has been fine-tuned on the train split of the CIFAR100, SVHN, FLOWERS102, EUROSAT datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "d4753360-0c17-4baa-810d-e250383108b3",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 2 (i.e. the mask generator has one max-pooling layer) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "1090e6b8-5ccd-4af2-b27c-203a8504bb87",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 2 (i.e. the mask generator has one max-pooling layer) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "83dc0195-4330-478d-95b5-047aab7e656d",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 2 (i.e. the mask generator has one max-pooling layer) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "ec9f30cb-af3f-47d2-aeef-e250093f3cbc",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 2 (i.e. the mask generator has one max-pooling layer) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "862e12a9-491a-47fc-a5c4-5ff4ad9dcebc",
                                    "requirements": "Using the SNS method (\"Ours\") method, ResNet-18 (pre-trained on ImageNet-1K) with patch size 4 (i.e. the mask generator has two max-pooling layers) has been fine-tuned on the train split of the CIFAR100, SVHN, FLOWERS102, EUROSAT datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "476f144c-c94b-4b67-8e03-da4d4733e29b",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 4 (i.e. the mask generator has two max-pooling layers) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "513d9f00-8b1b-4bc6-8541-c012b9c2e8cf",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 4 (i.e. the mask generator has two max-pooling layers) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "426e262b-dfe8-4198-8c6f-ab4a7e7ec49d",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 4 (i.e. the mask generator has two max-pooling layers) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "79d207fe-1f04-4462-a311-b67a5911e7ef",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 4 (i.e. the mask generator has two max-pooling layers) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "aebe1514-adb4-48ee-88ac-7d0bcd6934ab",
                                    "requirements": "Using the SNS method (\"Ours\") method, ResNet-18 (pre-trained on ImageNet-1K) with patch size 16 (i.e. the mask generator has four max-pooling layers) has been fine-tuned on the train split of the CIFAR100, SVHN, FLOWERS102, EUROSAT datasets separately with three seeds, then the mean and standard deviation of the test accuracy is recorded",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "ee7c7b65-ad80-4c72-a013-5bb147982603",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 16 (i.e. the mask generator has four max-pooling layers) has been fine-tuned on the train split of the CIFAR100 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "6b2a337f-7fc7-4637-b0d5-4953ff3dbef7",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 16 (i.e. the mask generator has four max-pooling layers) has been fine-tuned on the train split of the SVHN dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "d288eb7a-78f2-4d79-b86c-638b17075f67",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 16 (i.e. the mask generator has four max-pooling layers) has been fine-tuned on the train split of the FLOWERS102 dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "002ff71b-c421-43af-b49c-09f3bf6d3177",
                                            "requirements": "Using the SNS method (\"Ours\"), ResNet-18 (pre-trained on ImageNet-1K) with patch size 16 (i.e. the mask generator has four max-pooling layers) has been fine-tuned on the train split of the EUROSAT dataset, then the accuracy at the end of training on the test split is recorded. This is repeated three times with three unique seeds, and the mean and standard deviation of the test accuracy is computed",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "41895716-8630-4ff8-a4ef-3bf3edc41eba",
                            "requirements": "The results under the the \"Impact of Patch Size\" subsection have been replicated",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "4087ac21-483d-4598-985c-fb90f5bd6f94",
                                    "requirements": "The recorded metrics show that the accuracy of the SMM with patch size 4 is greater than the accuracy of SMM with patch size 1. This result holds for all datasets CIFAR100, FLOWERS102, SVHN, and EUROSAT",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e18ae43e-86d7-437d-9eec-7adeb956cc6b",
                                    "requirements": "The recorded metrics show that the accuracy of the SMM with patch size 16 is similar the accuracy of SMM with patch size 4, i.e., the difference is smaller than the difference when comparing patch size 4 to patch size 1. This result holds for all datasets CIFAR100, FLOWERS102, SVHN, and EUROSAT",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "9e227d6b-b3d8-4a33-b2d8-393d2b2d6c33",
                    "requirements": "The experiments and results for the \"Feature Space Visualization Results\" subsection have been replicated",
                    "weight": 2,
                    "sub_tasks": [
                        {
                            "id": "b42d2587-6220-4fd4-8325-b01d1b66278f",
                            "requirements": "The experiments under the \"Feature Space Visualization Results\" subsection have been executed",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "78ac48cc-7ba9-4469-a1dc-ea3c0b379b53",
                                    "requirements": "5000 samples are (separately) randomly selected from the training sets of the SVHN and EuroSAT datasets",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "dcc68c79-615d-4951-8eed-56ecf9153dce",
                                    "requirements": "The embeddings of the randomly selected samples in the training sets of the SVHN and EuroSAT datasets are computed using ResNet-18",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "26dfdf0f-17c6-429d-8d0b-a90218aaaff2",
                                    "requirements": "The embeddings of the randomly selected samples in the training sets of the SVHN and EuroSAT datasets are computed for each of the input reprogramming methods, with ResNet-18 as the pre-trained model",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "9e037051-8d0b-422f-99aa-185da29ffb2a",
                                            "requirements": "The embeddings of the randomly selected samples in the training sets of the SVHN and EuroSAT datasets are computed using the \"Pad\" reprogramming method, with ResNet-18 as the pre-trained model",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "ca6af6fc-70fe-4dda-a146-9b4eb409591b",
                                            "requirements": "The embeddings of the randomly selected samples in the training sets of the SVHN and EuroSAT datasets are computed using the \"Narrow\" reprogramming method, with ResNet-18 as the pre-trained model",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "5691f99a-0131-4429-b37c-cdd7ca59a643",
                                            "requirements": "The embeddings of the randomly selected samples in the training sets of the SVHN and EuroSAT datasets are computed using the \"Medium\" reprogramming method, with ResNet-18 as the pre-trained model",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "6f88164d-6b79-4a95-8894-d180f7a69789",
                                            "requirements": "The embeddings of the randomly selected samples in the training sets of the SVHN and EuroSAT datasets are computed using the \"Full\" reprogramming method, with ResNet-18 as the pre-trained model",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "a8339d1b-0b94-4cf7-99f8-1e76f33d25c4",
                                            "requirements": "The embeddings of the randomly selected samples in the training sets of the SVHN and EuroSAT datasets are computed using the SMM (\"Ours\") reprogramming method, with ResNet-18 as the pre-trained model",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "9d2a4385-abc9-415e-901a-6993b2963de0",
                                    "requirements": "tSNE is applied to the embeddings to project the embeddings to 2 dimensions",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "a3ec7636-5b71-4216-8c12-e2f1531dfc12",
                            "requirements": "The results under the the \"Feature Space Visualization Results\" subsection have been replicated",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "237676cb-e3d2-4934-bd0f-0eb47f928c28",
                                    "requirements": "The recorded metrics show that before applying any VR methods (i.e. just looking at ResNet-18 embeddings), the output feature space has limited class separation",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5f41a380-ebed-4a1f-afee-0939eccc95f7",
                                    "requirements": "The recorded metrics show that the \"Ours\" method has the best class separation in output feature space compared to other baseline methods, across both datasets",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        }
    ],
    "task_category": null,
    "finegrained_task_category": null
}