{
    "id": "79226778-ec1a-4a64-b878-f67193180d3d",
    "requirements": "The core contributions of the paper \"Refined Coreset Selection: Towards Minimal Coreset Size under Model Performance Constraints\" have been reproduced.",
    "weight": 1,
    "sub_tasks": [
        {
            "id": "640d0bf7-ec10-4426-b0cf-55a59b05e2fb",
            "requirements": "The relevant datasets necessary for the experiments in the paper have been setup such that they can be accessed and used",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "e42431df-d224-4d47-a7bc-3ea940d49974",
                    "requirements": "F-MNIST has been setup such that it can be accessed and used",
                    "weight": 6,
                    "sub_tasks": [
                        {
                            "id": "b7f0907f-9784-4075-88bf-e0ecbd9b08e6",
                            "requirements": "Code has been implemented for such that F-MNIST can be obtained or streamed without API keys or credentials",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "678e11f2-5b55-45d3-8b90-f72c4015d1c1",
                            "requirements": "Code has been executed such that F-MNIST has been succesfully obtained or streamed",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "dc8d3ae3-193d-43ac-bdb3-b1f6df1af3e5",
                    "requirements": "SVHN has been setup such that it can be accessed and used",
                    "weight": 4,
                    "sub_tasks": [
                        {
                            "id": "794e8775-9a23-4238-93fb-2fdfe275e61d",
                            "requirements": "Code has been implemented for such that SVHN can be obtained or streamed without API keys or credentials",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "86398fb4-1e7a-44cd-85dd-2e804c8ea9f2",
                            "requirements": "Code has been executed such that SVHN has been successfully obtained or streamed",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "0e69e43c-f127-4590-883c-378ded29f4d3",
                    "requirements": "CIFAR-10 has been setup such that it can be accessed and used",
                    "weight": 3,
                    "sub_tasks": [
                        {
                            "id": "fc3a56cf-3dc8-4a81-be6f-7dce5d9b9878",
                            "requirements": "Code has been implemented for such that CIFAR-10 can be obtained or streamed without API keys or credentials",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "87fc7a9a-c2b8-4c0d-9470-19a083fbbae3",
                            "requirements": "Code has been executed such that CIFAR-10 has been successfully obtained or streamed",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "26daae65-c335-4e4d-b82b-d7adb065d686",
                    "requirements": "MNIST-S has been setup such that it can be accessed and used",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "65fdb2a0-c7b7-4034-89f9-349ba45e498b",
                            "requirements": "Code has been implemented for such that MNIST can be obtained or streamed without API keys or credentials",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "8412c41c-9bb1-44a2-8d75-ef8d2f89ed57",
                            "requirements": "Code has been executed such that MNIST has been successfully obtained or streamed",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Dataset and Model Acquisition"
                        },
                        {
                            "id": "d4190392-7b1a-47d1-8cad-bbbbe9612882",
                            "requirements": "Code has been implemented such that MNIST-S can be formed by randomly sampling 1000 points from the MNIST dataset",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Data Processing & Preparation"
                        },
                        {
                            "id": "afd013da-3b47-4ef9-b61b-5022caee2ee3",
                            "requirements": "Code has been executed such thath MNIST-S has been succesfully formed",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Data Processing & Preparation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "a9f551b4-7798-43a6-96b9-269ff570bd78",
            "requirements": "The results of Figure 1 have been reproduced",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "91dcd283-365b-4dfe-a6cb-44caec7bd906",
                    "requirements": "Equations (3) and (4) have been individually optimized in a bilevel coreset selection loop for a CNN training on a random subset of MNIST (such as MNIST-S), and the f_1 and f_2 objectives have been measured for various values of k",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "ec47f2db-70b3-45e8-9c8b-9b3c0be7be84",
                            "requirements": "For evaluating equations (3) and (4), a convolutional neural network has been implemented as outlined in Appendix C.3",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "856e2447-bd98-487e-8623-89b2468e27cd",
                                    "requirements": "For evaluating equations (3) and (4), a convolutional neural network has been implemented such that it is made of two blocks of convolution, as outlined in Appendix C.3",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "485dae39-9025-43e6-9905-526b6ce79a31",
                                    "requirements": "For evaluating equations (3) and (4), a convolutional neural network has been implemented such that dropout is used, as outlined in Appendix C.3",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "c4c39def-a7dd-4e3d-9328-55374d27f723",
                                    "requirements": "For evaluating equations (3) and (4), a convolutional neural network has been implemented such that max-pooling is used, as outlined in Appendix C.3",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "0c0a274e-1344-47f6-adcf-82b7a5d19123",
                                    "requirements": "For evaluating equations (3) and (4), a convolutional neural network has been implemented such that ReLU is used, as outlined in Appendix C.3",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "0c0a274e-1344-47f6-adcf-82b7a5d19156",
                                    "requirements": "For evaluating equations (3) and (4), a convolutional neural network has been implemented such that it matches the architecture of Zhou et al, 2022, outlined in the addendum.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "b01c7e33-ecf1-41b6-8431-ad165554569f",
                            "requirements": "For evaluating equations (3) and (4), code has been implemented such that a CNN can be trained on a random subset of MNIST (such as MNIST-S), as outlined in Appendix C.3",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "00ea5742-ef4f-43ec-b1e8-751a886d9808",
                                    "requirements": "For evaluating equations (3) and (4), code has been implemented such that a CNN can be trained on a random subset of MNIST (such as MNIST-S) using the SGD optimizer",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "8bbd7a69-5314-4776-9c9c-a753edd30a10",
                                    "requirements": "For evaluating equations (3) and (4), code has been implemented such that a CNN can be trained on a random subset of MNIST (such as MNIST-S) using the SGD optimizer with a learning rate of 0.1",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "210a9a60-7fc2-42f6-9ee6-369ccc4355b8",
                                    "requirements": "For evaluating equations (3) and (4), code has been implemented such that a CNN can be trained on a random subset of MNIST (such as MNIST-S) using the SGD optimizer with a momentum of 0.9",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "30959f61-69dd-44c1-8865-d06dca2a6036",
                                    "requirements": "For evaluating equations (3) and (4), code has been implemented such that a CNN can be trained on a random subset of MNIST (such as MNIST-S) for 100 epochs",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "5a9f820a-24ab-4aa5-93b6-18a5ea36db2f",
                            "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3) for various values of k",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "56e722eb-4c84-496a-9084-66d4308f85e2",
                                    "requirements": "Code has been implemented for running coreset selection using equation (3) on a CNN training on a random subset of MNIST (such as MNIST-S) for various values of k",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "9e96c75f-270f-47bb-bc5b-39528a58897d",
                                            "requirements": "Code has been implemented such that bilevel coreset selection (as roughly outlined in the addendum) can be run using equation (3) as the outer objective to be minimized",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "cf6679e1-f445-4c7b-a127-2edabd88fdf1",
                                            "requirements": "Code has been implemented such that when running bilevel coreset selection using equation (3) as the outer objective, the minimization of equation (3) can be done via Adam with a learning rate of 2.5 and a cosine scheduler.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "dfc8c3a3-4bdf-449b-bdb2-78449eb2e53b",
                                            "requirements": "Code has been implemented such that when running bilevel coreset selection using equation (3) as the outer objective, f_1(m) can be measured over the outer loop iterations",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "4e6b9f3b-c143-4ae9-ba05-95d18e125823",
                                            "requirements": "Code has been implemented such that when running bilevel coreset selection using equation (3) as the outer objective, f_2(m) can be measured over the outer loop iterations",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "80ef50a8-0a7a-40f2-bb41-0eb0d6de8024",
                                            "requirements": "Code has been implemented such bilevel coreset selection using equation (3) as the outer objective can be been run for a CNN training on a random subset of MNIST (such as MNIST-S)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "a6f5a5d1-ccd1-44cb-9ae4-580166e07800",
                                            "requirements": "Code has been implemented such that bilevel coreset selection using equation (3) as the outer objective can be run with a pre-optimization coreset size of $k \\in {100, 150, 200, 250}$",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "27887ca9-94f8-4da8-bfa6-c09d6dbdae9b",
                                                    "requirements": "Code has been implemented such that bilevel coreset selection using equation (3) as the outer objective can be run with a pre-optimization coreset size of $k =100$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "704d6f7c-2eaf-48f2-9be5-c746157acd27",
                                                    "requirements": "Code has been implemented such that bilevel coreset selection using equation (3) as the outer objective can be run with a pre-optimization coreset size of $k =150$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "5c434a79-37e9-41bf-b17d-33dd2435b213",
                                                    "requirements": "Code has been implemented such that bilevel coreset selection using equation (3) as the outer objective can be run with a pre-optimization coreset size of $k =200$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "3b68bd83-01be-49d4-8348-6182825680d5",
                                                    "requirements": "Code has been implemented such that bilevel coreset selection using equation (3) as the outer objective can be run with a pre-optimization coreset size of $k =250$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "f34c2040-a1c9-44ad-8eb9-384b0f766198",
                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3) for various values of k",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "ece1c3ee-f25d-45a2-88d8-8866d02cf8a5",
                                            "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3), measuring f_1(m) over the outer loop iterations for various values of k",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "6bfb3f92-e283-4a3c-a874-4c2f4106e4dd",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3), measuring f_1(m) over the outer loop iterations for k=100",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "3ea1e5c4-9171-4a9a-a079-cd4d2d83cf06",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3), measuring f_1(m) over the outer loop iterations for k=150",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "ceb84a35-793f-4a87-b919-4022fe615a09",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3), measuring f_1(m) over the outer loop iterations for k=200",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "65ca9b72-9459-41ff-ac9c-5b47d4764469",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3), measuring f_1(m) over the outer loop iterations for k=250",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "8e22e127-b9fc-446e-95f3-8476e434d703",
                                            "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3), measuring f_2(m) over the outer loop iterations for various values of k",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "44fa4c45-835c-4fa3-8dfa-096dd6b62232",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3), measuring f_2(m) over the outer loop iterations for k=100",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "8bc66934-a54f-402d-be95-e5dff6a07e77",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3), measuring f_2(m) over the outer loop iterations for k=150",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "dba7c6fa-94ec-46f2-92aa-fcdf1cc031b2",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3), measuring f_2(m) over the outer loop iterations for k=200",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "a0026cf7-7e6a-4fe5-a062-171c6a71aff9",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (3), measuring f_2(m) over the outer loop iterations for k=250",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Method Implementation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "f16d54b4-083b-4328-b78d-31acb236f491",
                            "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4) for various values of k",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "70772c4c-3126-4a77-9215-539be68be920",
                                    "requirements": "Code has been implemented for running coreset selection using equation (4) on a CNN training on a random subset of MNIST (such as MNIST-S) for various values of k",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "ddfb36ef-039c-4747-ae3f-51beee652a19",
                                            "requirements": "Code has been implemented such that bilevel coreset selection (as roughly outlined in the addendum) can be run using equation (4) as the outer objective to be minimized",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "7fd52e10-d37c-4ea8-bd93-799006bd8341",
                                            "requirements": "Code has been implemented such that when running bilevel coreset selection using equation (4) as the outer objective, the minimization of equation (4) can be done via Adam with a learning rate of 2.5 and a cosine scheduler.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "5dcb9f87-f245-403d-81bc-a487b6fb0d4a",
                                            "requirements": "Code has been implemented such that when running bilevel coreset selection using equation (4) as the outer objective, f_1(m) can be measured over the outer loop iterations",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "f561845b-edf6-43c1-a75c-2bd9a0c65a41",
                                            "requirements": "Code has been implemented such that when running bilevel coreset selection using equation (4) as the outer objective, f_2(m) can be measured over the outer loop iterations",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "69b3d16f-be28-4670-a2dd-741201117771",
                                            "requirements": "Code has been implemented such bilevel coreset selection using equation (4) as the outer objective can be been run for a CNN training on a random subset of MNIST (such as MNIST-S)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "cf8ec731-0d5f-406b-90ab-62e1656d9291",
                                            "requirements": "Code has been implemented such that bilevel coreset selection using equation (4) as the outer objective can be run with a pre-optimization coreset size of $k \\in {100, 150, 200, 250}$",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "f550d38b-aea9-43f7-8520-5c1ee8533c53",
                                                    "requirements": "Code has been implemented such that bilevel coreset selection using equation (4) as the outer objective can be run with a pre-optimization coreset size of $k =100$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "4fbc2162-80a0-4b25-b9d3-e2a5a86cf132",
                                                    "requirements": "Code has been implemented such that bilevel coreset selection using equation (4) as the outer objective can be run with a pre-optimization coreset size of $k =150$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "80e1837d-23da-4bb8-bb70-47062c4c27d3",
                                                    "requirements": "Code has been implemented such that bilevel coreset selection using equation (4) as the outer objective can be run with a pre-optimization coreset size of $k =200$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "8162e837-2f82-48b7-ae8d-79b3ea3d8dce",
                                                    "requirements": "Code has been implemented such that bilevel coreset selection using equation (4) as the outer objective can be run with a pre-optimization coreset size of $k =250$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "dd6189f4-f5fb-49f3-8d66-e00291a70112",
                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4) for various values of k",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "9c736978-3326-4e1a-ad8e-4af3b2df4dcf",
                                            "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4), measuring f_1(m) over the outer loop iterations for various values of k",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "33a3e1a2-0507-4b0a-ab82-537682396981",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4), measuring f_1(m) over the outer loop iterations for k=100",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "b17eaa14-f08a-42ff-abbe-b1affbb10b16",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4), measuring f_1(m) over the outer loop iterations for k=150",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "c21f452d-2e8b-4538-ac0b-2288df4a3292",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4), measuring f_1(m) over the outer loop iterations for k=200",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "dbc7b8e5-7628-4b12-9d89-23ea6933e2fc",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4), measuring f_1(m) over the outer loop iterations for k=250",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "3e68147f-d7fb-492a-8381-325498beacf8",
                                            "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4), measuring f_2(m) over the outer loop iterations for various values of k",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "4a29a0b6-1e6f-43b4-994e-9bf0682d805a",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4), measuring f_2(m) over the outer loop iterations for k=100",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "ba2aed1d-404d-40f8-8964-b7c1f01275be",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4), measuring f_2(m) over the outer loop iterations for k=150",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "c28fad3d-b7d8-49ce-a9c4-dee20298774e",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4), measuring f_2(m) over the outer loop iterations for k=200",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "c69bebdc-ac02-4dcb-976d-df8c32ea3003",
                                                    "requirements": "Coreset selection has been run for a CNN training on a random subset of MNIST (such as MNIST-S) using equation (4), measuring f_2(m) over the outer loop iterations for k=250",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "d1989155-208d-456b-9f46-ce8c764a75d3",
                    "requirements": "The results of Figure 1 have been reproduced",
                    "weight": 2,
                    "sub_tasks": [
                        {
                            "id": "df0108f4-f393-45f2-b655-e564006e0548",
                            "requirements": "The results pertaining to equation (3) have been reproduced",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "201ffd17-8ded-4780-ba21-07dfa41daddd",
                                    "requirements": "The f_1(m) measured when optimizing equation (3) in the outer loop shows that f_1(m) can effectively be minimized, settling on values below 2.0",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "1c1d7417-df01-48b4-b088-746d9f834633",
                                    "requirements": "The f_2(m) measured when optimizing equation (3) in the outer loop shows that f_2(m) roughly remains close to the predefined coreset size",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "74dc1501-1cce-485a-ab54-b181a2b893bb",
                            "requirements": "The results pertaining to equation (4) have been reproduced",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "dd7a36d8-aea2-4de1-8cfa-97fe2af69a6d",
                                    "requirements": "The f_1(m) measured when optimizing equation (4) in the outer loop shows that in general f_1(m) fails to settle below values of 5.0 -- or in other words when optimizing equation (4), a worse f_1(m) is achieved compared to when optimizing equation (3).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "96cf7868-f90f-4c08-a916-48eb8e49803d",
                                    "requirements": "The f_2(m) measured when optimizing equation (4) in the outer loop shows that f_2(m) drops considerably.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "35beda89-9e02-413b-a2c8-d3c79c7447ce",
            "requirements": "The relevant coreset selection methods have been implemented",
            "weight": 4,
            "sub_tasks": [
                {
                    "id": "f7d8c22a-45dd-45c9-b616-80c6130fc078",
                    "requirements": "LBCS has been implemented as outlined in Algorithm 1 and Algorithm 2, with Algorithm 2 called at step 4 of algorithm 1",
                    "weight": 8,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                },
                {
                    "id": "63ee000c-9bfc-44e2-99b0-19a0c948b129",
                    "requirements": "The baseline methods have been implemented",
                    "weight": 5,
                    "sub_tasks": [
                        {
                            "id": "14cb47f7-0317-41ea-b58a-c1761483d051",
                            "requirements": "Uniform sampling coreset selection has been implemented, as outlined in section 5.2, Appendix D.1 and the addendum",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "61491c86-d471-465c-9210-de2f85ad9cc9",
                            "requirements": "EL2N coreset selection has been implemented, as outlined in section 5.2, Appendix D.1 and the addendum",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "c635a069-7d6e-4100-959b-0226f2c41b4f",
                            "requirements": "GraNd coreset selection has been implemented, as outlined in section 5.2, Appendix D.1 and the addendum",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "5d9352f6-a6a5-4767-b208-4e01d36b0853",
                            "requirements": "Influential coreset (\"Influential\") coreset selection has been implemented, as outlined in section 5.2, Appendix D.1 and the addendum",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "58a6b0aa-7c06-4220-bf07-ef900afefe03",
                            "requirements": "Moderate coreset (\"Moderate\") coreset selection has been implemented, as outlined in section 5.2, Appendix D.1 and the addendum",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "15a006bd-5315-4b4b-9bb7-0cf87c732d3e",
                            "requirements": "CCS coreset selection has been implemented, as outlined in section 5.2, Appendix D.1 and the addendum",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "22483d52-1909-4228-ae6f-04ed4b3108fd",
                            "requirements": "Probabilistic coreset (\"Probabilistic\") coreset selection has been implemented, as outlined in section 5.2, Appendix D.1 and the addendum",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "cac2163b-856c-4e4a-bcc8-b22106f80df9",
                    "requirements": "LBCS+Moderate coreset selection has been implemented as outlined in the caption of Table 5, i.e. in step 2 of Algorithm 1, the mask is initialized by running Moderate coreset rather than randomly. Algorithm 2 is used in step 4 of Algorithm 1, like in vanilla LBCS.",
                    "weight": 1,
                    "sub_tasks": [],
                    "task_category": "Code Development",
                    "finegrained_task_category": "Method Implementation"
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "cc5a86db-2d9a-49f8-b4c6-1c0aa6109391",
            "requirements": "The results of Section 5.1 have been reproduced",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "601833ac-a46f-4c82-8fc0-8b06211db8b2",
                    "requirements": "LBCS has been run for finding the optimal refined coreset for training a CNN on MNIST-S at different initial predefined coreset sizes k and different performance compromises $\\epsilon$",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "2d2efde8-bd0a-4e37-9306-da9ab5006d10",
                            "requirements": "Code has been implemented such that LBCS can be run for finding the optimal refined coreset for training a CNN on MNIST-S at different initial predefined coreset sizes k and different performance compromises $\\epsilon$",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "d9fb1ffa-65dd-4797-9602-37f12649e545",
                                    "requirements": "Code has been implemented such that when running LBCS for finding the optimal refined coreset for training a CNN on MNIST-S, f_1(m) and f_2(m) can be measured at the beginning and at the end of coreset refinement",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "5ffd95a1-9f36-462d-8509-d9ef553535da",
                                    "requirements": "Code has been implemented such that when running LBCS for finding the optimal refined coreset for training a CNN on MNIST-S, the run can be repeated 20 times",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "4399ad7b-f264-42c9-9512-78128813f791",
                                    "requirements": "Code has been implemented such that when running LBCS for finding the optimal refined coreset for training a CNN on MNIST-S, the mean and standard deviation of f_1(m) and f_2(m) can be measured across the repeated runs",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "258a9296-800f-4802-9787-8be0e14d248a",
                                    "requirements": "Code has been implemented such that when running LBCS for finding the optimal refined coreset for training a CNN on MNIST-S, the CNN described in section 5.1 can be trained on MNIST-S",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "9693ca83-3006-49aa-94fa-f952c51c2d52",
                                    "requirements": "The convolutional neural network (CNN) to be trained on MNIST-S for refined coreset selection has been implemented as outlined in section 5.1",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "e44839ec-b242-4831-9679-1458dab74784",
                                            "requirements": "The convolutional neural network (CNN) to be trained on MNIST-S for refined coreset selection has been implemented such that it is composed of two blocks convolution, as outlined in section 5.1",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "7162dc4d-c74d-4cbe-9497-60f05de8ff6b",
                                            "requirements": "The convolutional neural network (CNN) to be trained on MNIST-S for refined coreset selection has been implemented such that it is employs dropout during training, as outlined in section 5.1",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "d84a8cba-27c6-44c1-88a5-21e4c72f2159",
                                            "requirements": "The convolutional neural network (CNN) to be trained on MNIST-S for refined coreset selection has been implemented such that it is employs max pooling, as outlined in section 5.1",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "053af4e8-0b58-4415-92db-28ab7c935228",
                                            "requirements": "The convolutional neural network (CNN) to be trained on MNIST-S for refined coreset selection has been implemented such that it is employs ReLU activation functions, as outlined in section 5.1",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "0c0a274e-1344-47f6-adcf-82b309d19156",
                                            "requirements": "The convolutional neural network (CNN) to be trained on MNIST-S for refined coreset selection has been implemented such that it matches the architecture of Zhou et al, 2022, outlined in the addendum.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "99c1a1a0-6a5c-4d78-a67d-928ff1437f18",
                                    "requirements": "Code has been implemented such that LBCS can be run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size of 200 and different performance compromises $\\epsilon$ various performance compromises",
                                    "weight": 3,
                                    "sub_tasks": [
                                        {
                                            "id": "8aaf15df-d092-430f-9272-f43dd879c5e6",
                                            "requirements": "Code has been implemented such that LBCS can be run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size of 200 and a performance compromise $\\epsilon$ of 0.2",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "7723ca55-64d8-4488-9be8-559ab0641319",
                                            "requirements": "Code has been implemented such that LBCS can be run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size of 200 and a performance compromise $\\epsilon$ of 0.3",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "c45b3f06-e979-4c0c-acad-32757518c7ff",
                                            "requirements": "Code has been implemented such that LBCS can be run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size of 200 and a performance compromise $\\epsilon$ of 0.4",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "56c5ead8-0c31-4d7c-86ab-24141308bb40",
                                    "requirements": "Code has been implemented such that LBCS can be run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size of 400 and different performance compromises $\\epsilon$ various performance compromises",
                                    "weight": 3,
                                    "sub_tasks": [
                                        {
                                            "id": "70f2299a-61bb-4b42-a980-98e8857696d3",
                                            "requirements": "Code has been implemented such that LBCS can be run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size of 400 and a performance compromise $\\epsilon$ of 0.2",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "a78cd20e-6f40-448b-ad4c-538b100006f8",
                                            "requirements": "Code has been implemented such that LBCS can be run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size of 400 and a performance compromise $\\epsilon$ of 0.3",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "939b0cc5-716c-41bf-8ed4-1949cf47a65d",
                                            "requirements": "Code has been implemented such that LBCS can be run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size of 400 and a performance compromise $\\epsilon$ of 0.4",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "c2ae9a0b-cb01-4c0b-a9e4-812addf87523",
                            "requirements": "LBCS has been run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size of 200 for various performance compromises",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "33255c05-5059-4bfb-b1ec-4eb1d2336d3c",
                                    "requirements": "LBCS has been run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size k of 200 and a performance compromise $\\epsilon$ of 0.2, measuring f_1(m) and f_2(m) at the beginning and end of the LBCS process",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "59b52eb6-8309-4726-a6e6-cd578844a8f7",
                                    "requirements": "The LBCS experiment for the CNN trained on MNIST-S with $k=200$ and $\\epsilon=0.2$ has been repeated 20 times and the mean and standard deviation of the f_1(m) and f_2(m) metrics has been recorded across those 20 repetitions",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "42279a41-9f85-44d8-8af3-f5d19757538c",
                                    "requirements": "LBCS has been run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size k of 200 and a performance compromise $\\epsilon$ of 0.3, measuring f_1(m) and f_2(m) at the beginning and end of the LBCS process",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8e4d64af-2e46-43c7-8599-2d28b802f28f",
                                    "requirements": "The LBCS experiment for the CNN trained on MNIST-S with $k=200$ and $\\epsilon=0.3$ has been repeated 20 times and the mean and standard deviation of the f_1(m) and f_2(m) metrics has been recorded across those 20 repetitions",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "dbb32fa8-5f2d-457e-b1b4-3d0f5a81f915",
                                    "requirements": "LBCS has been run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size k of 200 and a performance compromise $\\epsilon$ of 0.4, measuring f_1(m) and f_2(m) at the beginning and end of the LBCS process",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "5ca0d99e-1e62-4fa7-822a-379f189647ab",
                                    "requirements": "The LBCS experiment for the CNN trained on MNIST-S with $k=200$ and $\\epsilon=0.4$ has been repeated 20 times and the mean and standard deviation of the f_1(m) and f_2(m) metrics has been recorded across those 20 repetitions",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "dda94f12-2655-4457-8a0b-a22a91ae883f",
                            "requirements": "LBCS has been run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size of 400 for various performance compromises",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "e7fe9f64-b931-4893-90c7-696b0a3cc257",
                                    "requirements": "LBCS has been run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size k of 400 and a performance compromise $\\epsilon$ of 0.2, measuring f_1(m) and f_2(m) at the beginning and end of the LBCS process",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "0e72e89d-c1bd-4978-8b5d-8b93744b1f0f",
                                    "requirements": "The LBCS experiment for the CNN trained on MNIST-S with $k=400$ and $\\epsilon=0.2$ has been repeated 20 times and the mean and standard deviation of the f_1(m) and f_2(m) metrics has been recorded across those 20 repetitions",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                },
                                {
                                    "id": "bcbdc185-2d7f-4498-b6c4-c6e6d08323ff",
                                    "requirements": "LBCS has been run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size k of 400 and a performance compromise $\\epsilon$ of 0.3, measuring f_1(m) and f_2(m) at the beginning and end of the LBCS process",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "c655de7c-2f0b-4be5-b33d-404905852d8f",
                                    "requirements": "The LBCS experiment for the CNN trained on MNIST-S with $k=400$ and $\\epsilon=0.3$ has been repeated 20 times and the mean and standard deviation of the f_1(m) and f_2(m) metrics has been recorded across those 20 repetitions",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "70cf1904-b2a1-4293-a2b1-e5d71edc4c7c",
                                    "requirements": "LBCS has been run for finding the optimal refined coreset for training a CNN on MNIST-S with an initial predefined coreset size k of 400 and a performance compromise $\\epsilon$ of 0.4, measuring f_1(m) and f_2(m) at the beginning and end of the LBCS process",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "938c9740-72b3-4383-af1b-b0737e6ed905",
                                    "requirements": "The LBCS experiment for the CNN trained on MNIST-S with $k=400$ and $\\epsilon=0.4$ has been repeated 20 times and the mean and standard deviation of the f_1(m) and f_2(m) metrics has been recorded across those 20 repetitions",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "a3a3cfa0-6ab9-4cb6-a5a9-9b001b0a90f2",
                    "requirements": "The results of Section 5.1 have been reproduced",
                    "weight": 2,
                    "sub_tasks": [
                        {
                            "id": "6a2c4936-cf41-4205-a4a4-30988e95980d",
                            "requirements": "The measured f_1(m) and f_2(m) show that throughout all tested configuration settings, f_1(m) and f_2(m) are lower than their initial measurement after running LBCS",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "61aadf18-4bf0-4a32-ba23-70da4bd3ae56",
                            "requirements": "The measured f_2(m) show that larger performance compromise values result in lower f_2(m) after running LBCS across all tested coreset sizes k",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Logging, Analysis & Presentation"
                        },
                        {
                            "id": "42fc1312-a959-4560-b504-3edcda58ae68",
                            "requirements": "The measured f_1(m) show that larger performance compromise values result in larger f_1(m) after running LBCS across all tested coreset sizes k, for large enough experiment numbers",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "828c131d-b0eb-4ca9-9543-aaef4373cd00",
            "requirements": "The results of Section 5.2 have been reproduced",
            "weight": 2,
            "sub_tasks": [
                {
                    "id": "c48278a0-8ce5-4b1b-9798-e75fc0d1fbd1",
                    "requirements": "Code that is agnostic to the predefined coreset size and benchmark has been implemented",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "9f16dd06-fa26-4f29-8be8-2bd6edfdeaba",
                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the appropriate proxy network can be used",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "4b9c1614-b110-4266-b790-a38d62f3765e",
                                    "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST benchmark at a given predefined coreset size, a LeNet can be used as the proxy network used for coreset selection",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "e33454a1-96be-43c5-9c1c-c07d71fe4b82",
                                    "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the SVHM benchmark at a given predefined coreset size, the CNN in the left column of Table 7 can be used as the proxy network used for coreset selection",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "4720bf5d-e987-41f3-9ec6-294b2182b8ee",
                                    "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the CIFAR-10 benchmark at a given predefined coreset size, the CNN in the right column of Table 7 can be used as the proxy network used for coreset selection",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "21ebce23-d1cf-449a-a1d3-272d26a94580",
                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST, SVHM and CIFAR-10 at a given predefined coreset size, when training the proxy network for coreset selection, this network can be trained using an Adam optimizer with a learning rate of 0.001",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "4400d8b6-f567-4196-9a4f-87cefb814016",
                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the appropriate network and parameters can be used for training and evaluation AFTER coreset selection",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "f728be43-9b1f-4eca-a892-2ebff1227f0e",
                                    "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST benchmark at a given predefined coreset size, the appropriate network and parameters can be used for training and evaluation AFTER coreset selection",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "91128d33-ac3a-470e-9eb9-eb5f89d5bd12",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST benchmark at a given predefined coreset size, a LeNet can be used as the network trained after coreset selection on the selected coreset and evaluated on the F-MNIST test set",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "c887b213-a774-47d0-ac4f-10b64fa866cd",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST benchmark at a given predefined coreset size, when training the LeNet on the constructed coreset, the LeNet can be trained using an Adam optimizer with a learning rate of 0.001",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "a9ced9f3-9cd8-46e2-a6c8-030f88a8f49b",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST benchmark at a given predefined coreset size, when training the LeNet on the constructed coreset, the training can be run for 100 epochs",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "e46272fd-fae5-40f9-aac7-21a0c261e40a",
                                    "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the SVHM benchmark at a given predefined coreset size, the appropriate network and parameters can be used for training and evaluation AFTER coreset selection",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "49010e88-19e2-4155-980c-ffd60b9a23f9",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the SVHM benchmark at a given predefined coreset size, the CNN from Table 7, center column can be used as the network trained after coreset selection on the selected coreset and evaluated on the SVHM test set",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "d9fef6da-92d9-47ab-944d-9c0313566485",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the SVHM benchmark at a given predefined coreset size, when training the CNN from Table 7, center column on the constructed coreset, the CNN from Table 7, center column can be trained using an Adam optimizer with a learning rate of 0.001",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "066f4dea-9ae9-4194-8201-b28974d39674",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the SVHM benchmark at a given predefined coreset size, when training the CNN from Table 7, center column on the constructed coreset, the training can be run for 100 epochs",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "5071aaa2-a5d1-497b-8584-93137e0137e6",
                                    "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the CIFAR-10 benchmark at a given predefined coreset size, the appropriate network and parameters can be used for training and evaluation AFTER coreset selection",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "7852c64a-2b7c-477c-8e99-57be03a19746",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the CIFAR-10 benchmark at a given predefined coreset size, a ResNet-18 network can be used as the network trained after coreset selection on the selected coreset and evaluated on the CIFAR-10 test set",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "d726e0e4-a665-4e42-a87f-315fb627ec13",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the CIFAR-10 benchmark at a given predefined coreset size, when training the ResNet-18 on the constructed coreset, the Resnet-18 can be trained using an SGD optimizer with a learning rate of 0.1, momentum of 0.9, and a cosine scheduler.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "631a8052-395e-4017-bf09-b691a316e664",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the CIFAR-10 benchmark at a given predefined coreset size, when training the ResNet-18 on the constructed coreset, the training can be run for 200 epochs",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "7272acea-7aa8-4304-97ed-8a21b645cfea",
                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the test accuracy of the model trained on the selected coreset and evaluated on the benchmark test set can be measured",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "a8b64156-202c-45d0-ae04-ced11538ccf7",
                    "requirements": "The results shown in Table 2 and Figure 3 have been reproduced",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "5660973a-bc2d-4211-96d7-4e62f117686a",
                            "requirements": "LBCS and the 7 Baselines have been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various predefined coreset sizes",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "425851c2-780d-468a-ae15-803153bf1852",
                                    "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the test accuracy per coreset data point of the model trained on the selected coreset and evaluated on the benchmark test set can be measured",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "8051df14-b42c-467a-93bb-12fe3363938e",
                                    "requirements": "LBCS has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "f7f7e8d6-75a2-4cbf-aaea-2bda425c9511",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the final coreset size at the end of LBCS can be measured",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "82eb4f38-01ac-4ee6-9a72-d6db11d362fd",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the outer loop can run for 500 iterations (i.e. T=500)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "b9c8e4ab-6683-42e0-b71e-8764911f24de",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the voluntary performance compromise can be set to $\\epsilon=0.2$",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "0bad0fc5-0a0e-4baa-8eb9-f7fe5b854583",
                                            "requirements": "LBCS has been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "7bc4536f-a5ed-420e-9217-91cb86fa74fb",
                                                    "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "42a59dfe-33f0-4cc6-9779-c2ea5d8c0a70",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "ed93fb00-0d41-4848-82c3-04b8d55e06c2",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d8fdfd13-ad7c-41c0-a537-f4d405a6c932",
                                                    "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5d7e83dd-dd4b-412f-85e4-c4207d7337e3",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "11a49e4e-c141-4c89-a58b-f7d08da3ee33",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "4a7a77b6-5841-44e9-8583-b967554ed35e",
                                                    "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d45b3b32-d7fb-4d11-a578-d09d23174c65",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "be8db4b0-933f-4857-9462-6fa163cbdaff",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "75e256f1-cd66-47e7-9b70-91a71a02d5e6",
                                                    "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "64abb1ad-2a91-482f-ad8c-a859ecae9093",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "8f7044af-dd36-4b27-bfbc-6a3bcf9a325f",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "b056bd7f-3721-4601-8abb-d3475697eddd",
                                            "requirements": "LBCS has been evaluated on the SVHM benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "55f7e485-04c6-41df-9d43-40f79aa33b59",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4a0a2e1f-c80e-49f8-b3e2-cab8163d4e0b",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "1e62b66c-641f-4262-88c2-f47e7dc5fb14",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "7f7bcf76-a2ae-41f4-8467-79bc57240561",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ad00f370-4eb8-431f-9430-9b7a78201cd3",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "0484fceb-e3b8-4ffe-9f0f-0cd563e6df1d",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "e592bb51-2de0-4022-9510-e7baf4386919",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3f836077-184c-4441-8b8a-46f85ea42363",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "366c21d1-7ed7-481d-9c6c-7a9a39e0e129",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "57f5e6b4-ee9e-44cd-8e05-e30cd66053d1",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "743a6b10-ea76-422a-a2b8-f14d4bbe2ffc",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "21c3bced-8466-4fa2-b122-f499ccdb2d1c",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "6cf72493-78ad-4df1-8709-045ebf7cdf0a",
                                            "requirements": "LBCS has been evaluated on the CIFAR-10 benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "103aeaa5-3bd3-4d32-aa5f-dee259c8736d",
                                                    "requirements": "LBCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2fe7e35e-4bff-4e9e-b96f-86a3870124f0",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a38f2355-a478-4e90-83d1-bed0e802893f",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "be4bf49f-1525-4852-93bd-6c4333de6852",
                                                    "requirements": "LBCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a964f84c-4ab8-424a-a6e2-8ac803f60b4c",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "f348dd18-a5ee-4f32-9845-d59eb52ca7e3",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c7144e12-54fa-4003-91cc-28eb1dd63920",
                                                    "requirements": "LBCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "66b11e89-7a31-45f3-84dd-b94f96b38d16",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "e287ab0b-9112-46f8-922f-873c8f5fb7f0",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "de5638b9-abdf-49bf-8b2f-2ac109f7c780",
                                                    "requirements": "LBCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "42d4456d-0484-4637-8dac-4b3cb13b7f48",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4a35cef3-19cf-4c33-8119-538ffbfbdb20",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "bee2e398-aab5-4f97-8e9c-a89032e90cef",
                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "a6c06439-876e-4cf4-98a3-64f3806ac19e",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "d32b632e-7a5c-4ad8-ba71-b523263f5e60",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f58e19d8-c875-4a1f-810b-69c8d28e5fe0",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "95dc3e2e-1570-4fe6-9d46-4248cf2bfbd4",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "583d652d-e34a-4e73-acea-db71d20a8e16",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a24de89e-d186-4ad8-ad1e-5feb6393173a",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "07fd2625-f37b-4a42-b4f4-b7f782876339",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "fe9ded72-dcb9-47e9-8835-82d516fcb06c",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "22b3f642-b88e-4ee1-afba-3817b259eca9",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "afaa22ca-db66-4c1a-b57b-e4a9d3b4f278",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c72d6406-6eb5-4b73-98b5-5ace75674adb",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "7f3246c5-f98c-4622-a46f-1a0bd8d05f2a",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4029e9a8-32d0-44e5-bb40-a2dca15aa5a0",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "23887de9-6f43-431c-9c4d-37ab2ab05da1",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "a828995f-b5f3-4c42-a645-9786ad3b681a",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "33fce958-5808-448d-8a83-268a43f51d3f",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c64b9b79-7c9e-4b9b-8063-097fa6dfe74c",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "2a8b8553-f383-45fc-b3d4-a17e9eab3859",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2155e813-9566-45f5-87b1-74a153407092",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "32aa2c8c-7472-4a9b-a184-a0834ba6b89c",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "5148a5f6-5247-4efb-91a2-f9d448f9b72b",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "211f859b-8b74-4a11-828c-4e2993ac32ee",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c381f182-e22f-45c2-b187-9586d05014b2",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "8e567d62-9ca6-4c49-be08-dba43fa80a20",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5c789b63-80e2-49eb-8577-9bcd1b723a7f",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "21d6932b-4269-465c-9302-21a2a08e5b83",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "aae830ef-07d8-49ef-8f7c-1b6908e1490b",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the CIFAR-10 benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "b653c2a6-c237-4b59-9f70-7d59da266e79",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "468ffc47-c357-463e-9a80-b2338f8f7d30",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "dbfa5770-5f5e-4d02-b2c8-a903344abb29",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "630d32cc-69e9-4131-8d4b-721a32f4be17",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "18d389f1-3af7-4555-9ed9-111acfe468fb",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "c7c63282-6f3e-4916-b5df-ff24ea713ad8",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "df3ef90a-06f6-4593-8779-f9186d88e14a",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ef1db506-80de-45f3-b1fb-3502f4502c50",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "abb91707-7233-4870-a95a-3bbf3d802ee9",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "adcfbbe7-0484-46e2-bbcd-bc2e478dd0f4",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ec643f32-a54e-4a90-954c-eb5f1ab355a8",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "e0a7d6d4-7856-4f3e-9f2e-6b8a0e3c75cb",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "b744a87c-76a9-4e68-9341-0c5ced5fe3b9",
                                    "requirements": "EL2N has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "f897c387-5649-4283-827f-e62b99db3cba",
                                            "requirements": "EL2N has been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "f8c3b688-1ca0-4fca-878d-97a1d6ec8128",
                                                    "requirements": "EL2N has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2acfb390-023a-484b-81a0-dbd4e7450b19",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a7f0c7da-f789-4c4d-a676-831cbd877191",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c408e4bc-a38a-4ce0-9bef-d4392b25dd71",
                                                    "requirements": "EL2N has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "34b3fde9-44b9-4d2f-a54b-337617f648e5",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "e6060f7e-ee13-4c23-bdca-2eb0bc8ddc76",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9f05a682-49ec-48ac-b361-3f17983fb727",
                                                    "requirements": "EL2N has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "0e397fd8-82b0-4b21-92d9-c9262532633d",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "bc2f8e93-c997-4c66-980c-8c6c86f66eb6",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "eab6eefc-b630-404c-91df-8288c19d6532",
                                                    "requirements": "EL2N has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "317d6d18-c9f7-4030-9822-b64d9492edb0",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9edcf5e2-b408-4933-83dc-7f66507cdd35",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "04e62f69-77e6-4047-b8c4-a7799368e411",
                                            "requirements": "EL2N has been evaluated on the SVHM benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "02bd71f5-80f7-4401-8984-2a009150bf24",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "eaf53c3d-7e5f-4ccd-b67f-e92dc1b1f6db",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a6cc043f-d244-4d00-a62e-89bb22225340",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "48f3d34a-7430-4e2b-9b17-6f7b48f2ed9b",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a7f76345-1c29-44f3-8f3d-6f844438b608",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "96699e91-33f2-4254-91a0-fb6233960b39",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "8e958073-1f15-4e52-bff6-b472cbe04399",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "636badf0-a3cc-4b4d-87d9-91530050b26b",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4d648c9f-d38d-472f-bd7d-8a863a48a11a",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "4437903a-3497-4efa-8080-ddcf7fae4c15",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "681f1cbc-691d-4502-a3fb-f68adb4bacce",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4fb2d690-dcc9-458d-a565-9343a00aec36",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "f57d82be-e9a6-4c80-b72d-3374d618e71b",
                                            "requirements": "EL2N has been evaluated on the CIFAR-10 benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ae660449-bd5f-4170-a7ca-28252a186651",
                                                    "requirements": "EL2N has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e2a1063a-9e5b-4f0d-91e6-9f9457856946",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c40e6af2-6527-4ff9-863a-0d193e540710",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "dd5b4764-9d12-449a-bb40-63c75274639f",
                                                    "requirements": "EL2N has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "10b059e4-f31a-4a9f-b693-b182b1683c01",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "cb9726ae-6c1f-4668-9344-9915e0e3ff2c",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "f615c31d-d77d-4b2b-8a13-090d52ae6d46",
                                                    "requirements": "EL2N has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "baa2b998-b189-410f-b9eb-81e6806a0ed1",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "20b0c9f4-a457-4295-8781-cd08b984af95",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "adcb309d-db16-428f-8238-20a0bac90ce8",
                                                    "requirements": "EL2N has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f693d203-7e4a-4ed6-b809-bec1dedc0c63",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "06ae38ca-9753-4400-a86a-0fc2cb075e5a",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "4aa25e4d-6c53-4ad1-9828-90dd2f312812",
                                    "requirements": "Influential coreset has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "5aad6a79-d5f2-4a86-9d59-2ff37866efa0",
                                            "requirements": "Influential coreset has been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "d78c72c6-d9f7-4778-86f4-4e6d7cb0c201",
                                                    "requirements": "Influential coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3f98c7d1-6d23-41c0-896c-e014a085b53f",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "245f0a2a-1f4e-46b9-ad16-9fc612ff8765",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "2ce6189d-0158-47d3-bc25-4d79c2b0b0f9",
                                                    "requirements": "Influential coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "793626b6-e835-48ce-a3ff-4333822a9d97",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "da41ab0b-ef2e-401b-8046-eef7622eeb9e",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "157d8c06-666d-4b09-a350-4fc0e096dcff",
                                                    "requirements": "Influential coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "7da79c7d-9dec-4a9e-9f62-4b71ae794426",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "713b049b-cbb7-4d84-bc14-196241522817",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c1ef3a6d-be17-42ab-851c-c6f6de8bea03",
                                                    "requirements": "Influential coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "efadbfa0-b14c-4652-9432-a1f3d6ed9727",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9a786b06-712c-4035-bc8f-96a1a387c423",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "c800c3da-7ea5-4d8b-bcf3-c9364db606ad",
                                            "requirements": "Influential coreset has been evaluated on the SVHM benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "da6d60a4-e49a-46d0-b060-eea5a16d8470",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e480c89f-c9c4-4f57-93e1-4c83bb9e276e",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "e0db68b2-f797-427e-919f-145905fd8eff",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "5dd5d898-484c-476f-b4a2-02232f9a51b7",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "b19218b2-def1-4af3-8ebc-b6d8fec976f8",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "6df7767f-8005-4fcf-9568-b78fa53b0641",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "df68e56b-a1ca-41f7-9ab5-474de262ccd7",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e4ec4abb-214d-418f-a5e0-a93f39d5da0e",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "7b6b2e8b-74e9-444d-bcb6-8f60bbf47fe8",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "35002d90-9a4e-41ae-b193-66747cb9b7bb",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3524990e-1f2a-4085-bc8c-6223fe7cbc3d",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9fbb3804-19c8-4390-b6c5-c32175d0b6dd",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "a26df5a8-e05d-40e6-b136-babb343d9e48",
                                            "requirements": "Influential coreset has been evaluated on the CIFAR-10 benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "aa6b0751-1877-4c73-94a9-2298c874073f",
                                                    "requirements": "Influential coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a8680ea3-2757-4114-9a26-9c5e1906239a",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "321d579c-ace1-4819-900c-516f97fa749d",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "50631f05-0286-4b65-b70e-388722d74636",
                                                    "requirements": "Influential coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d7647a63-b75e-4f41-ab89-b7afbeb5b319",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "5ce3b9d5-59bb-43ad-a70d-af71ed17a07d",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ea71f6ca-2841-4f9f-9ff0-b258f1d5afd4",
                                                    "requirements": "Influential coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4a8d82ff-793a-4dfe-9b93-a279f3f1cae7",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "f3bb4b55-b1a9-45db-a91a-afac96cc6586",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "a6bcd267-cd40-4f1e-99b4-e503a96927d9",
                                                    "requirements": "Influential coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "6d2ee476-7f62-4a45-b462-978279cfa5d0",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "0fd6b3bd-db02-4799-b2b9-a2a5f01136a7",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "fefe7007-f061-47cd-b566-20f493792836",
                                    "requirements": "Moderate coreset has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "8eef2c06-a320-4044-a1d9-3a9e7246eeb4",
                                            "requirements": "Moderate coreset has been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ede7dbf4-c92f-4ecb-b168-6396101c0dac",
                                                    "requirements": "Moderate coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "7bdcc020-4b66-46ab-9cc7-f6c505e72dfc",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "a32cf42a-8a33-494f-bbaa-5c3d3c9ffdb8",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "6491b2bd-01c5-4713-b537-f83589bf41f2",
                                                    "requirements": "Moderate coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "efb4ca11-e516-44af-9ea1-6f7bf3c0d3c6",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "df44e808-b626-48bc-86f8-e92eb656181f",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "26f5bd0d-3768-4875-810a-1d10d3cb8a38",
                                                    "requirements": "Moderate coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f62220e4-ed4c-4c99-8c98-b53a459d375f",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "8c4096e1-1fad-4e90-ad9c-d1178a19c80f",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "529f262b-eecb-4c4e-a446-8c8b2f7e29b3",
                                                    "requirements": "Moderate coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "7fb92b85-bfc6-4780-b5b3-323f486979c9",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "7fc8290b-a24b-4a1c-b376-e08f796596e6",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "b00ccb06-9725-44b7-b7d7-bc50eb26841e",
                                            "requirements": "Moderate coreset has been evaluated on the SVHM benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ae8abfda-edcb-40c8-a1a9-7f0bfe5b4e3a",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e0e262e5-4636-44ff-9dbc-ad068a678124",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "0c991e52-a95e-4a6c-ba35-1870c4093fd0",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ceb0707c-ce3a-46f7-ae0f-26513399fd9a",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "43736dae-5231-4baf-896c-b2ddb1b55a4e",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c07e239a-327e-4ff6-89f4-a9e812faa7c2",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "6a15b31d-656e-42ae-85de-87fa00f7db7a",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "91708bfe-f85f-4566-a8d3-bab761b12a04",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "82c0636f-2111-4b67-a815-2e5f3f347741",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ade1a2b8-8fbc-454f-bf42-14b2e3b16d19",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "cf3ae416-0c51-45fd-b4c1-39c148d25de1",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9431c236-82c7-41ff-b33b-2e15fcbc3439",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "211af7f2-73aa-432f-9fa8-da051525d763",
                                            "requirements": "Moderate coreset has been evaluated on the CIFAR-10 benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "8aad790e-cfb3-420c-bc3c-c8d3abc3dc3a",
                                                    "requirements": "Moderate coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "128a6cec-98b4-4888-9f8e-71cc5dba7ced",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "8f6c4611-b89d-4d80-96ae-6628712223ee",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ae4e1420-26b5-47af-aebf-9d1e5143264f",
                                                    "requirements": "Moderate coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2e19915a-db3d-474e-9a03-2aa7cad181c4",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "85541cde-cfd5-474d-8e44-159f96cc73fb",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ef7b5fec-6871-4b63-9377-66d0a4e74f15",
                                                    "requirements": "Moderate coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "354e6e2c-bf03-46ec-b3bc-2abb19275ede",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "50ebb79a-fddf-49ad-b2b1-ef54b32c7a78",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "10f222d9-57ca-4245-9d71-5774e994fee1",
                                                    "requirements": "Moderate coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2878e8cd-7112-45d9-95d8-334ea796f82a",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "7c69e7bc-8130-4c7b-ab5a-e9ff18104762",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "8bb51806-b093-4e71-b6bb-a6f1bd2a4620",
                                    "requirements": "CCS has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "e993453b-8b93-4762-b43e-b3941fb29ea6",
                                            "requirements": "CCS has been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "13bde73a-4d2d-4ab0-9551-de03494c0ff5",
                                                    "requirements": "CCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "355eefb9-ae33-43cc-b24b-e8cc61f15ffa",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "bb827180-e0f9-415c-b1a1-4f0e0197f865",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c579fea1-76a1-416c-b76a-60cede2e7632",
                                                    "requirements": "CCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "378b2380-f04d-4560-aff0-8facf8e65f0d",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "83d9991a-3e69-4751-a7a5-7b0265c265e5",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d5ffb6ca-3ef2-4fa9-8a48-f1d99f6eddad",
                                                    "requirements": "CCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ddc2460f-87a9-428d-b660-9f0514a451cf",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4e2d4552-801b-4263-9ad1-aaa3ede31452",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "aa94a897-31f8-40f6-a21d-b1b52b8d859e",
                                                    "requirements": "CCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "08fdba38-a36d-4757-8d81-725072fccbc2",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "64713abc-1100-41a4-a775-10cfb56e19bf",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "e6de8fc0-ce69-4e38-827b-2766d57dead3",
                                            "requirements": "CCS has been evaluated on the SVHM benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "811d8748-46f7-4c9b-9bab-70270a4502ba",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "8d4c8e7e-bef1-460e-9cdf-986336163be8",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "6061eb92-2e93-4c01-8cc6-b8d856979c01",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "88124de3-d517-49c2-a2a1-538bbcbb838e",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3c46492e-b852-4cfe-b3de-07f9ea8ea132",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4c15c69d-5b18-433d-a415-73431ceca803",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "1383f10f-7252-4952-8e64-e43db1bec779",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e3136178-16b2-40f9-8d4a-9788c9378af4",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "bc3dd321-1a3a-4737-8b76-1e5b648c864b",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "dd22e65a-9e08-4ad0-9198-1dacd1f3cdd8",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e8400f83-8062-4a8c-a87a-5032a65cb793",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a30042ee-13b6-4677-95a8-3f3b412c2783",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "e05c1a89-b1cb-476f-aad7-05947688a96e",
                                            "requirements": "CCS has been evaluated on the CIFAR-10 benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "690deeaf-b2f3-433a-8695-75ea316becb1",
                                                    "requirements": "CCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "b58bc074-1724-4f64-b006-b4b7cb915fb3",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "f91af7b5-b654-4cc4-bb7a-67275febd73f",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "aeb0629e-c385-4a4a-9601-ad7ff4df9d8f",
                                                    "requirements": "CCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "987174e6-7225-4f14-81a3-17a8e6291272",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "8deb7502-e823-4461-b23b-06fad796a379",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "4444a3ad-c77f-49df-ad6a-7552f05b946a",
                                                    "requirements": "CCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4d560b37-9ee9-4cd8-ba76-e37de39ebf42",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "b6eb340f-26cb-43eb-b0e6-c3012f472551",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "87b83244-507e-449b-af8f-45cbea2857be",
                                                    "requirements": "CCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f683fc78-cfd8-4440-9ec3-ed19bff77176",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "b5ba29ff-f5c4-4879-b95a-63a556129457",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "43540168-8eae-43c2-9530-7e84f5043b41",
                                    "requirements": "Probabilistic coreset has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "1e19dfc2-721b-481e-9924-4aa95242a32a",
                                            "requirements": "Probabilistic coreset has been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "29dc3a48-745e-47e5-9ea6-91ada1e81e55",
                                                    "requirements": "Probabilistic coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2d3d2db3-d500-47c5-af07-73e4a79800a7",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c53240eb-439a-4e71-8665-9f8be4f60734",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "cdd74167-5450-4c1c-ba72-eca0a4ae15fe",
                                                    "requirements": "Probabilistic coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5af79443-9f16-4ea3-8145-71a54fd2899b",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "926df311-859f-4f67-be27-df0e5cace85c",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c44723a1-1c22-4d34-88c1-69a021151dde",
                                                    "requirements": "Probabilistic coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "927102fe-8106-46fb-a6a5-3a1b609876e7",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "82f792d2-65fb-4fee-8fa1-468a414aa675",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "a399e6ea-31d0-4a99-af59-804d145e573f",
                                                    "requirements": "Probabilistic coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3e759be8-0df1-4b75-976f-54f714269fba",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a715fead-36b8-4583-b0fb-0bee420500e7",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "a783176d-db5c-4583-9c49-97cb08a34f41",
                                            "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "793a9f7f-9360-4a22-b9b2-203034a8f82e",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f061c18c-88ba-4317-96f0-132e405c891e",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9de60804-d1b5-4a2d-bfe9-e7a7b4b49cc0",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "a4952947-9897-4241-b997-6803104ba8d3",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "0c7fede5-dbf9-4158-9518-13f43b8bc323",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "e3101092-0cb8-4b91-b249-210aecafaa25",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ca923cf5-ec53-4347-a19e-b9268a3f5919",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a5c293ea-568d-4003-a1ab-34dc1f94def9",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "1c16d802-1d01-4d0f-8452-cf8326cacb38",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "93d9a4c6-9362-4a64-84f7-4fa1afa298bb",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "47a311d4-ed24-4ad8-81b7-1cfa477fe327",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "5d14905a-9318-45f0-a85f-b7be9c3dae12",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "56f6d51f-2dfd-4686-9184-640e90ceefba",
                                            "requirements": "Probabilistic coreset has been evaluated on the CIFAR-10 benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "c6ac4308-12fb-46a1-abaa-ecd7335021d4",
                                                    "requirements": "Probabilistic coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ac2f207e-d9df-4973-a939-8ab53b9f006d",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "798af7d5-c124-492d-88e0-c2b51eed8dd8",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9b8959bc-2e33-4081-a0be-532c8e5e486e",
                                                    "requirements": "Probabilistic coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2c383f29-50f1-425b-8728-debb9746cbd4",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "803aff38-3b2a-4ca9-ad0e-5741f51450d3",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "e441ac65-ab3b-48ac-96ba-f3ecd3379849",
                                                    "requirements": "Probabilistic coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3e5f5595-87a8-46d9-bca4-5a4c8be38406",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "399becff-bf8c-44de-9935-1a2f5acd30f1",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "a9b8b9df-47b6-4b16-ae72-a78360e889fc",
                                                    "requirements": "Probabilistic coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "035bb845-7ef7-4fbb-aa84-5dcdde0dd822",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "6e2993fb-5437-4e80-9538-e0816a137e03",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "ca56b02e-4971-483d-a6b2-e109cd716492",
                                    "requirements": "GraNd has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "8fc0c860-99ee-4a0f-a36f-a0073f454b6e",
                                            "requirements": "GraNd has been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "528194df-38af-4071-9eab-20f212b851a2",
                                                    "requirements": "GraNd has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "35f966a5-86bb-42e2-9fa3-ce04d4561cf2",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "fe808434-c7dc-48ab-94e4-7b0da1c46ec0",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "3e8e0fd8-362e-440b-9f26-7194432f280b",
                                                    "requirements": "GraNd has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "62f12ef7-2e67-435d-b6a0-867751e0a1b0",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "3bae5722-ffdb-4e51-a4e4-806640542eb3",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "cac2ec74-bc59-464c-95de-44633ac242fa",
                                                    "requirements": "GraNd has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d43763bc-4426-4476-9bba-6f1506f1a55a",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "5d4a757a-d765-42f2-9cb3-6f9d138e659a",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d5309422-21b7-4294-af9a-0734be87cf28",
                                                    "requirements": "GraNd has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "03b1e1e2-c69b-4faa-9681-96dd50541d0b",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "e8e4aeb3-b4fd-4f5b-aa6b-ec09191fe352",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the LeNet trained on the constructed coreset on the F-MNIST test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "6edf2c2e-c142-438d-a4e2-c9c09f78a649",
                                            "requirements": "GraNd has been evaluated on the SVHM benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "902a2366-7d9c-4bef-82a6-ebefba0bd8a4",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5c655122-1359-4d1d-a1a3-9036831988b1",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "eb3bab74-5688-4c59-8b5e-915950b08dbc",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9508d6cd-1d79-49cf-993f-5a65612bfac9",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "aa8ac38e-3005-44db-a73c-55d5b10dd71d",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "6be4d156-f1ab-4c26-beed-0e7ff638e69e",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b47801bd-5036-4c92-84b8-3a26a40dfca5",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e420817b-fc70-4aea-abcb-96a544fc340c",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "88f0c371-5acc-48f2-af4d-cee89d666359",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "1ee31b5e-58dd-41d2-b490-c8483e368be0",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "7d0f837c-ce8d-44b6-aeb8-eeecbf7e3cb2",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "6c760104-cdb5-46d4-a010-6dfe6e860940",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "8fa6d8ab-092f-4fb9-af08-5f522d99952e",
                                            "requirements": "GraNd has been evaluated on the CIFAR-10 benchmark at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "bcdf1fc0-6175-4ece-b444-042fa59adce6",
                                                    "requirements": "GraNd has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2c1f5c8d-99e2-47fe-b48f-b460790a2b5b",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "754154a1-4715-4ce3-9c99-055ed8225dfe",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "eadb6503-ef50-49ee-b51c-ecf40cab0bc8",
                                                    "requirements": "GraNd has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c6c06edc-ea40-4b05-a343-edc0fd64bec1",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "e02ed25e-e826-47e2-99cb-95a35960e3fd",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "5b4116c1-002d-438d-aec7-bbb6880eb8d0",
                                                    "requirements": "GraNd has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2de234ca-22d1-4d29-83b9-9cceeb9822aa",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "68ed3b1f-e1ca-4a75-bcd3-f7953b61832d",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c115d7e6-6223-48bf-a5f0-ecfcf7f0b051",
                                                    "requirements": "GraNd has been evaluated on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ca5125a0-cd34-4506-bcb4-203d544f8731",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size of k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "a8f68237-4bff-4aac-b565-b44addc0ec11",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy and test accuracy per coreset data point of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "34ac885a-2c25-4b03-bba3-8f15d702d356",
                            "requirements": "The results shown in Table 2 and Figure 3 have been reproduced",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "e45b1b5f-8513-4d05-9e87-a9d89ea853ca",
                                    "requirements": "The measured test accuracy on the SVHN benchmark shows that LBCS outperforms all other methods across all tested predefined coreset sizes k",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "bfa6ce7d-0c3f-4fc1-aca7-4a0b2c016543",
                                    "requirements": "The final coreset sizes measured on the SVHN, F-MNIST and CIFAR-10 benchmarks show that LBCS always leads to smaller coreset sizes than the predefined coreset size across all tested predefined coreset sizes k",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "2912c726-a3f5-4404-91e8-c4ce5527a8cc",
                                    "requirements": "The measured test accuracy on the F-MNIST and CIFAR-10 benchmark across the tested predefined coreset sizes k shows that LBCS outperforms all other methods most of the time",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "eb07a367-3c62-4325-840f-3c6eb3a0284f",
                                    "requirements": "The measured test accuracy on the F-MNIST and CIFAR-10 benchmark across the tested predefined coreset sizes k shows that when LBCS does not outperform a given method, it remains competitive, i.e. within the error bars",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "03dfa769-293d-4d03-a7a9-685af76a7250",
                                    "requirements": "The calculated test set accuracy per coreset data point on F-MNIST, CIFAR-10 and SVHN across the tested predefined coreset sizes k shows that LBCS always achieves the highest test set accuracy per coreset data point.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "e3a19145-2061-457d-9828-91ed79f66c94",
                    "requirements": "The results shown in Table 3 have been reproduced",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "2545850b-d9aa-4457-8f24-78bc1e67bfa6",
                            "requirements": "LBCS and the 7 Baselines have been benchmarked on the F-MNIST, SVHM and CIFAR-10 benchmarks at various LBCS-determined coreset sizes",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "75e61828-11dd-4ed8-8c41-86fedaf8d8d7",
                                    "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the test accuracy per coreset data point of the model trained on the selected coreset and evaluated on the benchmark test set can be measured",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "6406c546-dec1-44b3-86e3-d171208a71e6",
                                    "requirements": "LBCS has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various LBCS-determined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "18aeea81-718f-4919-a8af-f04fdfa3d9f4",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the final coreset size at the end of LBCS can be measured",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "b47ab927-5272-48fd-aa88-02ce4c2e30ab",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the outer loop can run for 500 iterations (i.e. T=500)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "01c2dd15-d4ac-4fd5-ba0d-4963d2dd348b",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST, SVHM and CIFAR-10 benchmarks at a given predefined coreset size, the voluntary performance compromise can be set to $\\epsilon=0.2$",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "ed677556-a9a9-4c04-9cfe-716c9cce765e",
                                            "requirements": "LBCS has been evaluated on the F-MNIST benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "de3648d0-31bc-4764-81f3-ffe537d670f1",
                                                    "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9a613e0c-dce8-4cca-94ea-568cf0c04ebb",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "8de96cdd-923b-455c-a202-2cf8be7406e6",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "4b529926-b492-4a4b-aaad-67c3c419f5a7",
                                                    "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "cfda7061-e1aa-493c-ae8d-31e73abecedb",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "eab3ebc1-64e4-4fbe-84fb-2ba5cebce4c8",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "bd3921f4-94db-4759-849b-a64e99f5b423",
                                                    "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5a301133-75f8-4355-8ef2-82e70254133c",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "db95f95b-e780-4b96-ae18-97fad8842887",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9844d00e-a6ce-4efb-8af7-dfea6fc9a4fa",
                                                    "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4381924f-40ea-49c0-b66a-b009b1d47b62",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "d031341f-373b-4cc5-882c-40b7f4284ece",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "6265cf57-c4b7-449f-bc2a-63316a4c42f6",
                                            "requirements": "LBCS has been evaluated on the SVHM benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "9c43a389-d106-4d6f-a9c7-5a1ef9dd63ba",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "46477a73-7ec5-4632-b741-9d6f4b3f5fdb",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "04c557c7-1694-4c7c-bfc7-8d0aa33f0b1c",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b5b57cc2-83e1-4db9-a2ee-652397c5b839",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5df3b450-c55a-4334-be6c-9e72e9124002",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9684d342-d950-4fe6-98e5-c6ae13f144fe",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "6e5f39b7-377a-4051-a36c-12f6806a752e",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3da631c1-1522-4f19-a5e3-44aa9466e8e9",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "6bae4760-d892-4886-91be-916e8ceada69",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d6877b1a-680f-4f8f-adab-6da547c1b648",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "8e54a56b-7948-499c-a4f9-fc219c043e96",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "67caeb7a-4d3f-4976-b0d3-82507ca6baa2",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "5d12a24a-23da-4e40-9cb7-0e6b8826e08a",
                                            "requirements": "LBCS has been evaluated on the CIFAR-10 benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "00c56a83-2925-4bb8-93a7-8675a91f3dd9",
                                                    "requirements": "LBCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f89b0faf-c4b9-44ea-ae75-9a97946b4861",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c157bc1c-b264-4a7f-8252-e0d316695fab",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "6800ed2d-94b0-4154-993d-e596b1d0c32e",
                                                    "requirements": "LBCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "61e8dc11-1a23-4f00-992f-84130d19a1cc",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "899b59d7-1d89-4b65-b9ed-30080b50dc25",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "f81ba357-c433-479d-b9b6-7d989c0740e6",
                                                    "requirements": "LBCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "91444d99-0b0d-4a79-99be-805c07c60cc2",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "b7498965-a1f1-4f2a-887b-d049003e6c64",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "7dffa509-ac98-4880-9788-1100f8ec4c26",
                                                    "requirements": "LBCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "954393a0-9d5f-4573-8d36-9a6f8bbab8b8",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "0f349e84-fb6a-47d7-9845-c453afb7056f",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set and the constructed coreset size have been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "d28bae74-083d-47af-a834-3e17ad60d3a8",
                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various LBCS-determined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "234d4644-cfb1-48a6-9ed8-01bc03a27ec9",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "c59df777-a70b-4811-a57a-5c64c366701e",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5f4dcab4-d72a-4130-a88d-0041229ccf9a",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "0a486be5-a392-4223-b551-21f1e91c1790",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "2a5944f3-bd5d-490b-a44a-b39b794c4eb6",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5dca7b9f-1851-480e-9c47-dba75b292e85",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "74cadad8-bfe3-40c8-a86d-e383c6f893db",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "093913a3-a22a-4a59-9443-1b845e1271fd",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f2a3a257-043e-43b6-930c-49ac1afca943",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "d8296643-7cf3-45d3-b25f-b99c741c7b95",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "505adbef-b1ba-4622-a845-a93eec17a482",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "76c30862-ef21-4b89-86ef-645e46bcda54",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "8e369550-6423-4b07-a9cc-bf7ca547c86b",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "58421a09-94c7-49ac-8a79-d812cbfcb649",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "a5e9da49-3e14-4756-9d07-210f1c238308",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c7ac41ee-2852-46a2-a146-5b3a7f2b9429",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "1a38e79f-3bbf-4424-9fad-9b179431ece2",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c188cae2-5b78-4918-bfef-f757f06487b4",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "287b8cb9-e772-4f86-a545-82db5c18a2b9",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "edf29af8-37fa-4e0f-9a31-79376089e35e",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "75c6ac1f-0dd2-4436-861d-ce1f17b00402",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c07029c4-5223-419a-932c-a8ce07e17d05",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "1c5be0d9-ba03-42db-930c-caeb2ff503a9",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b941b8f1-07c9-4149-8582-cc304f61b2d5",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "6bd2f8d9-c627-4a99-b1ac-1c9fb4c0d2eb",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "cabd4283-b621-4aff-ae9d-8e9163d24047",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "a4454e1d-dbf2-4c27-a067-8bdc2e9fceb0",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the CIFAR-10 benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "2b57b0a9-0411-43c1-846e-21c3353cd427",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "dc3ce96c-90b3-4dba-b464-0ed4d614c648",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "462b84fa-f0dd-42c9-b0a1-13ae023a2ce8",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "aaa02fed-95f8-4483-887c-30ae30b6a5f2",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d06710ac-70aa-4e11-811a-2d6401b416dc",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "65db6bae-15cd-4f00-a5f4-0a5cf1084d59",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "6ac5dc41-6ae7-45cf-8040-077e7fb0cd88",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ad358c29-f62e-4da7-8144-603d97b8f13e",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "82f1bede-7a23-409f-adf9-0df034a54dc8",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "a833cfb3-6430-4285-bb9d-82b83f8d93ec",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4efc3b8c-4382-4e28-8029-7aac13432dc5",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "72f3cce2-6256-4a38-b799-40800aea5a6b",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "ad350a09-500e-4720-90f7-92261d518cc3",
                                    "requirements": "EL2N has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various LBCS-determined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "edd32e7e-e04d-4221-a1e9-497c4477e14b",
                                            "requirements": "EL2N has been evaluated on the F-MNIST benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "e36138a7-dad4-4a32-b34a-54648eec95d2",
                                                    "requirements": "EL2N has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "0d6c882c-eab1-4ef6-8857-ede72f882369",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "682f47e9-d11f-4eb2-9f3c-6e6bdc99d436",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "0f87fea7-d8b2-4968-baf2-88cf12c51127",
                                                    "requirements": "EL2N has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "00f95f57-2655-42b2-b4ba-fa8ed5a68a26",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "8a7d019c-036c-451d-9249-a55e36de67c4",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "60e4681c-46b2-4519-a508-c1c6aa639ca5",
                                                    "requirements": "EL2N has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "0da44fba-a2bc-4905-bac0-10d9fdeba950",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9c68b7ec-59cb-4541-9f10-693801c85fd2",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "3bce58ba-4615-4a49-ba85-7189938ec27a",
                                                    "requirements": "EL2N has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "081f01dd-f9c7-4caa-97d6-cc09bacfc85c",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4860b2d4-63cc-4a37-9878-c76516d242fc",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "3ba4ff30-b249-4a5e-9937-fd1a98d5c1cd",
                                            "requirements": "EL2N has been evaluated on the SVHM benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "5b31b6f8-9612-449d-9a5c-f6984bbc858a",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e5594d57-cbc7-4f4f-9a29-3048a0943587",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "b5c9c0d8-8c41-41f1-886c-163477e9cd97",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b95b804c-435a-420b-9668-cf320e3861ee",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a058818f-b340-4e60-bf04-1a9263ef7143",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "480a4e54-814f-466c-bcdd-5ba704e298c9",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b5b6f7c7-68e2-4e72-b262-8264f53946a0",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "bbe1c458-016d-4e1e-829c-1009b0ad5fc5",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "437b1225-b6bb-4905-b9c5-a705545a6190",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "4f8b51fb-5962-462e-93c2-d9ff3609b853",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5e81d480-542f-4c17-aa49-caec23de5250",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c3e74bbc-f903-4c22-9ea7-ef3ce6485d71",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "e2427ea0-ff07-419b-8267-25314057aa48",
                                            "requirements": "EL2N has been evaluated on the CIFAR-10 benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "905b3445-7781-484c-8345-ff817dac003a",
                                                    "requirements": "EL2N has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "121a1efb-f46e-4b74-926f-c92c426ca645",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "186d9610-faf5-4c02-b40f-92b2202925d7",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "cd55bb8c-7f2f-440a-a2dd-970cbc320480",
                                                    "requirements": "EL2N has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ff259fd2-1722-4bc5-8057-c8659dd20f5f",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c81c61bf-5396-4d6c-ae5e-498dfad05847",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "8a8d01b8-a9f4-4f41-bdee-c14d54fa117f",
                                                    "requirements": "EL2N has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c1e61bd5-a3f8-4934-b9e6-f13e5ac939d8",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "e878b270-e068-4b28-9f3c-5df04c1c7180",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "a08e9757-b57f-4c3a-824e-a06eece2ea66",
                                                    "requirements": "EL2N has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ec91d43f-a0e1-4ee3-a8be-7cab31ca683c",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "5700cfc9-d800-490a-b907-6e598c30599a",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "822807cc-fd67-4ed9-ad30-226ee01e8263",
                                    "requirements": "Influential coreset has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various LBCS-determined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "e48868a4-a8be-46b4-92f2-60b124ac11df",
                                            "requirements": "Influential coreset has been evaluated on the F-MNIST benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "91a2b60a-738a-40d2-9dac-ec1ff7bfe242",
                                                    "requirements": "Influential coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "6b670c16-ba50-4a4f-bf52-b3bc1a141642",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c6219484-8bca-4b5e-9900-0a61096ee417",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "65d0cd5a-0dbe-4439-b6e2-d933d34f4eac",
                                                    "requirements": "Influential coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "dd6a161e-8da6-41f5-9706-e8315453b891",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "19cf5847-263c-4c39-8cd0-d7a2c0e6e102",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "24a19386-62b9-4768-9c0d-9fd5ad2a9432",
                                                    "requirements": "Influential coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "8deecc68-9ab7-48d3-a7b8-327d9c7187df",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "fae89989-f9d3-4de5-ad0c-320b95b61b0a",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "55d8515d-b5d5-4597-a226-8e526d8b485f",
                                                    "requirements": "Influential coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "03ca2658-eb63-4599-a275-5f3ec53f6662",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "32d7fc17-e872-470d-a82c-3d202995e413",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "7ee0140e-0035-4b7a-af68-dee5ee532629",
                                            "requirements": "Influential coreset has been evaluated on the SVHM benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "d3533577-4f38-4811-9ade-147ad15303ae",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "89381dc3-6f3f-42b2-bc57-47ed70679150",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "6e16ea30-345f-4e8b-b9a9-b379dbd6e1eb",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "f156de9d-6d94-450a-a8e7-5c675f6b7da1",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9c543b00-cc3f-4d8f-8e17-637217535e00",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "f39380a0-5109-4c1c-a41f-7ad6cf1ecbc1",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c11c2aab-827f-4e0e-b432-4a9a4d2be145",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c7472c76-3947-474a-8bbe-d3e70ea9f0c6",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "ffa9db76-1630-4026-94b4-36394b477cc5",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d72deeeb-0de3-458b-bba6-91d27b3c8c51",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "628b7126-48fa-41f7-b497-e7d921aabfdf",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "69d84bdb-7351-44ce-ac5d-ed28ea3b1fb7",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "f1822468-4b30-4918-8749-a00db456461f",
                                            "requirements": "Influential coreset has been evaluated on the CIFAR-10 benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "62e5c7c7-a286-4843-bd0e-567aea41472e",
                                                    "requirements": "Influential coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "fbbab2c4-6068-462d-b35f-1664f6998c97",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "502b358e-6510-47cf-bc27-0e38eb00b923",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "415ccec2-8d93-45fe-b95c-a2f1db8f5249",
                                                    "requirements": "Influential coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "b4fa2099-bffd-4c5e-b884-94d949eeacc5",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "cbf1888f-e9de-4fbe-989b-c32896747957",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d40be831-349f-4c2c-bd57-a7fa226b076a",
                                                    "requirements": "Influential coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4c20174d-e28d-4355-99dc-0c49bc44fcc9",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "0b3aba70-ec29-4cc0-9f4f-da662791c853",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "1b735a13-5c1e-489d-ad1e-5a39eff70be3",
                                                    "requirements": "Influential coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "12372c2e-9c08-4157-9484-1c9d4ac4e342",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9887e5bc-fdf4-4fd9-842b-81db3fe9d57d",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "61cd2e6a-a6b4-4b06-a755-afa3905d3c2c",
                                    "requirements": "Moderate coreset has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various LBCS-determined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "e2b354a1-0b11-4de6-ba97-1edbe28291a4",
                                            "requirements": "Moderate coreset has been evaluated on the F-MNIST benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ef443100-b140-499f-92c8-b3b393308846",
                                                    "requirements": "Moderate coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "06f1c687-6898-4366-97e2-774d1bf7fe12",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "acf1548c-2ed3-4931-bee0-374201b6801b",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c76a9cd1-be54-4d2f-b2f1-c606f0a697e2",
                                                    "requirements": "Moderate coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "86e7f93a-11ba-4165-a4e9-ccdfa14260d0",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "d87f7fe1-39c5-4b40-a97a-1e479e034d17",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "66e358c2-e6a8-4f8f-8537-5688c5f3bf4e",
                                                    "requirements": "Moderate coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3d9643a6-5911-4ac0-801f-76b377b9e520",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "87ffdee8-c3cb-431d-bff5-20c1c3b31c40",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "e4df6682-e111-4cbd-9856-4057e9fdf76a",
                                                    "requirements": "Moderate coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e1ccba61-db0d-4e31-b34a-c0afa1da4854",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a6706334-2df0-4835-8684-c7fe99435127",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "6eb85703-0c42-4194-870c-536f54ee0b32",
                                            "requirements": "Moderate coreset has been evaluated on the SVHM benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "58dcd492-3f8f-40c9-8782-38cb5256f0bd",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4358ac88-0dc9-4013-abf4-cf1863046c01",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "0d43ccee-d08a-4c3c-8940-1a3df0d84e0f",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "8eaca93b-3fd3-4784-9c10-ddb2aca14d7e",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3293eac8-be9d-431d-91f0-ea082a549bb0",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "3ac205ae-f429-4de2-9304-7d355cd9ae90",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "07a0a495-60c4-4db9-bb54-f354d2269474",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c5a8c47b-1f05-4283-83e9-f93212f3bb1b",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "3de829b6-8705-457f-9e15-33494db2d454",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "272a176b-375b-42da-9096-138e2478ae52",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c78e4d3a-a187-4311-ac87-c809fba9582d",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "2280f5ca-810d-4397-8ead-cc9b85a7975d",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "e87bd591-2942-4c6d-a617-ca8f358229e1",
                                            "requirements": "Moderate coreset has been evaluated on the CIFAR-10 benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "837a5109-81ef-4693-964a-b1d73fd50ace",
                                                    "requirements": "Moderate coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "29d20351-65c2-41fd-a4e3-12416932a989",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "e2e13a3b-562e-49df-b363-0599bacac407",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9b5b40da-a3e4-488b-852a-1ea0a599c836",
                                                    "requirements": "Moderate coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c7bd14b3-3836-4957-b84c-432641a5c855",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "d7ee3643-6223-42e0-8152-39309fc71263",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d9cd9034-7338-4cfb-aec4-fff41727107a",
                                                    "requirements": "Moderate coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "62ad8c3b-96cb-4f49-9ec7-9f60b4d6bd08",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "fc07691d-13ac-4584-a7ce-9738514c882f",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "a355bd40-a157-4916-b7c8-ddb59ff6c919",
                                                    "requirements": "Moderate coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5070e67f-f511-40c6-be60-b6009482eb0e",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "7bd1d53c-1ecd-4ee9-a9ff-ba3eb2b7d0bf",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "5c56bc1b-fe70-4a17-b528-202340462c75",
                                    "requirements": "CCS has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various LBCS-determined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "605c9797-e90f-41a2-8080-69b96b0a1288",
                                            "requirements": "CCS has been evaluated on the F-MNIST benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "84a57728-ed59-4aa3-94e4-74dbc2016e0e",
                                                    "requirements": "CCS has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c913c920-33f6-4a2b-8555-7b48dd9fe383",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "61fc4a1a-8831-4397-9f0e-ee6a57f20c32",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "420e0bc3-212d-4b90-bee2-3c4c3d10e947",
                                                    "requirements": "CCS has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a99254a9-b0d4-43f5-bea0-06bb6aa4e93e",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "f93b2b3f-e410-45b4-9a29-4a12545901bd",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "4eee1305-f977-48cb-8c99-b432378c0076",
                                                    "requirements": "CCS has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ffa06f72-a383-4e6f-9b01-eb753952e16c",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "3a69540b-e5cf-4ad2-8e6b-c31d8a5b73e3",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "242d3571-66b8-4ad8-8e63-fb4b7e58507b",
                                                    "requirements": "CCS has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "76e42189-d9f2-4326-8535-63b39fbcae1e",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "459c59fb-e233-4f91-8299-3d4bdf539d81",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "ac7419d6-d2df-4de4-8b6c-1df015b5e5a8",
                                            "requirements": "CCS has been evaluated on the SVHM benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "4c3498e3-22fa-40cb-80f6-994ebc2095bd",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "477c5ffa-9439-484b-ba83-1ea96b5a01c1",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "3ef3106e-cb72-459d-aeea-68c36a5820c1",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "1ed9dbfd-0570-40cf-8fcf-95d24c2f0192",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "6402623f-1109-438f-9b6b-102223d44e15",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "d5de5dae-8a95-458c-942c-489fab4d79ec",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c75c969d-f104-4251-bfd6-f81b5384f80d",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9778b54b-b65a-4984-ada0-a506fffdd913",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "aad3e802-d521-484b-9b94-9384dd9bfea7",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d90e0a15-b25c-4d82-87c5-9d040591240b",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "265a8d42-4927-46c4-8afe-89516d9fb3e6",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "f47a428b-dc86-434d-929f-38ce713596d9",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "1a36a3e1-0dfc-4651-8c4b-abf7e0a7f844",
                                            "requirements": "CCS has been evaluated on the CIFAR-10 benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "b46d9d7a-903b-4785-be3b-37986817576f",
                                                    "requirements": "CCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f0ffd55b-af30-42ca-abe1-3af30bb9213f",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "1461a0b8-867d-453a-a5c6-33fa920d3961",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ae712417-8f21-43a8-ab02-b35cde2326a7",
                                                    "requirements": "CCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d855e37d-5ee9-4804-8077-e2377ec97a29",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "63f289a6-6980-4e26-8b40-42a4250cc8dc",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "22ec045f-bc4a-42bb-a7bb-6636145676a9",
                                                    "requirements": "CCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "20e16c58-e5fa-4368-86d2-d1a6a03a93a9",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4a7278ee-0912-4b04-b0bf-1dddf7312767",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9ec86221-970a-4076-a7c7-3cf0891c2a8d",
                                                    "requirements": "CCS has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e7f82a22-f584-4a7b-b021-f2cb667e2738",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4520ea08-7792-46cd-a3f9-ec4d5d4243d8",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "82c3c09d-aa49-4410-93f1-412dc0b04a5b",
                                    "requirements": "Probabilistic coreset has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various LBCS-determined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "eb62a912-9ebc-4b8f-a734-c2abd91025f7",
                                            "requirements": "Probabilistic coreset has been evaluated on the F-MNIST benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "a9d718f9-4000-45b6-8908-0f0b31b810be",
                                                    "requirements": "Probabilistic coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d8eb1158-ecc7-45ee-b24f-f54165f5989e",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "7f0ef7db-9a06-4854-aa49-4bad7a072064",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "376a7bc6-419b-40f2-a7d7-c53b5f95a074",
                                                    "requirements": "Probabilistic coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9a01611f-29c5-472b-a42f-39ade402d912",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "1318a497-1720-49d6-aeef-a6cf00cd4afd",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b3920e5b-38ff-47b0-a2fe-281fa19a15b3",
                                                    "requirements": "Probabilistic coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "551e7429-148e-493f-a4aa-dcee44137250",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "1a36f526-b290-4cc5-9e57-6a3095e956e8",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b2fbcaa6-54f5-475f-a4d2-2a9418f90fe5",
                                                    "requirements": "Probabilistic coreset has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "60ecf0ee-cb31-4212-926a-52dd1eded42d",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "29edc8f4-14b8-4346-ae67-9245e09568fc",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "82e908f0-a719-4044-b106-12b580392ed1",
                                            "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "45507166-f05d-4a45-99a4-406a42ca12eb",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "781dc49c-9e2a-4233-8416-bd322f7cb4d3",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "5dc16ab3-b324-46fc-b401-8163e66dc09d",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9c47e7d2-7942-4773-86e8-099f23b40a3c",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a5c9e5df-80e9-4009-aaee-a3d9ccb7ac2f",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "cb02bb53-8873-408e-8aaa-b7cb6208859c",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "36f32e7d-08ac-487f-89e0-0a0bd88d1f82",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "92692b1e-7f8a-477e-8a1d-03997c0edae0",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "5514295d-5993-4527-a5bc-329df17a9a65",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b97d4d57-6b52-458a-ac55-323dea601736",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "0ba93f7e-5840-41e0-b178-af4dc2784636",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "964e31bf-da23-4020-9ce2-0b6d3db4d081",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "4ff0a9c7-e176-43da-a949-f2b6e846078f",
                                            "requirements": "Probabilistic coreset has been evaluated on the CIFAR-10 benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "e226ce10-9363-4ca0-8bc7-990ffa837068",
                                                    "requirements": "Probabilistic coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "6eb2e184-7c6c-43dd-9bb4-ebc86d602702",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "666b9ca8-8f4e-446d-afc1-89f1373c1dfb",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "96eb047c-2489-4f7a-a2f9-5f6395db0c03",
                                                    "requirements": "Probabilistic coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "61de7b17-b2ca-4240-800e-dd47740c5902",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "b32d1344-5e81-4f4f-9416-dca570a44431",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "1316ab86-29fe-4934-b6a4-0cc47af26006",
                                                    "requirements": "Probabilistic coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5af9c653-2325-4afc-b3cc-871ba0e5a7cd",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "86d5ad22-1c8a-49cf-9dc7-651f64d4fb2e",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c5318533-26a1-4d2f-a53f-7d205b2b2dc3",
                                                    "requirements": "Probabilistic coreset has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c0521ee2-3200-49da-87d1-124315a2543d",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "d33701e1-d028-4513-b24a-ac343c008e8b",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "0b0db965-8e0b-49a1-8743-4942a8ea4701",
                                    "requirements": "GraNd has been evaluated on the F-MNIST, SVHM and CIFAR-10 benchmarks at various LBCS-determined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "078cb0c1-bd41-4a61-bb48-63bdaf6057e3",
                                            "requirements": "GraNd has been evaluated on the F-MNIST benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "c87bfd32-49c9-43e1-aae0-aca73a32af50",
                                                    "requirements": "GraNd has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "b3f9dc28-cb83-44c8-a840-829677f8f5af",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "b2f1f048-92b9-4621-a422-f9a09c4c443e",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ae7080a5-3dcc-4359-af7d-24bf868f44de",
                                                    "requirements": "GraNd has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "520d9ec8-2e25-4976-b5c8-21e216c04de0",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "bd3a1d57-45f8-4160-bc02-304e83705c9e",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "23addaa4-916e-4cb3-af74-26978746f35c",
                                                    "requirements": "GraNd has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "058262ac-9a67-4c42-ac65-6c9bbc9af40e",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "dfa291c7-cfed-49e3-bba7-d1b3dee86ff9",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "00739dd4-7cb5-42d6-9848-c7b6baed3f87",
                                                    "requirements": "GraNd has been evaluated on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c402d4f6-ea03-4604-9529-acc1d42685e5",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a78f5ad0-3d78-4db9-a56f-ae50db44fb1a",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "e96880df-10e0-4073-9b0f-a686229aa096",
                                            "requirements": "GraNd has been evaluated on the SVHM benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "b2443791-ca7c-4d07-b591-1253dde5978d",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a9427a4c-6480-4ffc-949f-e00c67df430d",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "141eca20-37ae-4c3a-a0f3-0b2048fef39c",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "78692c69-2cc0-4b11-955a-887b3b4bebac",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "98740f1c-81a9-462e-a8d6-24f6290f676b",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "2eee5971-fbf5-47aa-a175-e8cacefa3d8f",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "5b80a315-d38b-499c-b674-aece5b90cf8b",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "7b75d0c7-9cc6-47d8-9a67-ab64feea28c2",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "cda85483-3d49-4fc8-b0f0-324488d31074",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "08cf33f2-b2b9-4fee-af82-4e5ea135c5c3",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "7a2017f1-b839-4baa-a041-1503d13ddeaa",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9c5d7f4f-89cc-41e8-bad4-2c0726130d0a",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the CNN (Table 7, center column) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "1162f5a8-9819-42ff-abc1-cf5f30ec96f8",
                                            "requirements": "GraNd has been evaluated on the CIFAR-10 benchmark at various LBCS-determined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ebd699de-2dad-4b51-9d9f-3d95c9976ad7",
                                                    "requirements": "GraNd has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c7a139ee-a238-4f46-8f27-d0d670f1be28",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "b798b6fe-c2aa-4cac-a071-2287f01b6aca",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=1000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "4b1a9e46-4c41-4b47-b2d2-498bb67db7fe",
                                                    "requirements": "GraNd has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ecec41aa-82c0-40bb-9658-325bb5964336",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4d7d69b6-c9c8-43a7-8089-dbb19f2f77d7",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=2000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "8c3ab7a0-61ae-42a8-8b82-383912d256e3",
                                                    "requirements": "GraNd has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "71026622-9a5b-4d81-980c-fbe71058d786",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "d1087175-f59b-4f4c-aedf-0e1207ef37a4",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=3000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "5f1e7615-6ea2-46c4-a15a-0bdc0a7b03e0",
                                                    "requirements": "GraNd has been evaluated on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "069c454a-02cc-4c8d-b5f7-787bccbbeb65",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the CIFAR-10 benchmark with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "2f84d0f6-25a1-45a2-9fed-99685250b490",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size equivalent to the coreset size found by running LBCS on the same setup at k=4000, for constructing the optimal coreset for training a ResNet18 on CIFAR-10. The CNN from Table 7, right column was used as the proxy model during coreset selection. The test accuracy of the ResNet-18 trained on the constructed coreset on the CIFAR-10 test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "9740542a-f9d4-45b8-a464-3872d7f4cbe2",
                            "requirements": "The measured test set accuracy on the F-MNIST, SVHM, and CIFAR across the coreset sizes achieved by LBCS show that at these sizes, LBCS either outperforms or matches all other baselines.",
                            "weight": 2,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "a94a0ffd-bd45-4d54-8acd-3c9d56c77b79",
            "requirements": "The results of Section 5.3 have been reproduced",
            "weight": 2,
            "sub_tasks": [
                {
                    "id": "c10241e2-9884-4a34-bfee-89766eaffd0d",
                    "requirements": "The results shown in Figure 2a and Figure 4 have been reproduced",
                    "weight": 2,
                    "sub_tasks": [
                        {
                            "id": "1c8f023b-4113-43bb-b8c1-f117c508d848",
                            "requirements": "LBCS and the 7 baselines have been evaluated for selecting the optimal coreset to train on 30% and 50% noised F-MNIST",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "78fc3eea-086e-4108-93a3-3df3af977dcb",
                                    "requirements": "Code that is agnostic to the predefined coreset size and benchmark has been implemented",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "82a75f42-a920-4c22-a101-b15b52ad1969",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the noised F-MNIST benchmarks, a LeNet can be used as the proxy network used for coreset selection",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "cf00c488-ba7f-4538-8811-3cb34543dcfe",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the noised F-MNIST benchmarks, when training the proxy network for coreset selection, this network can be trained using an Adam optimizer with a learning rate of 0.001",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "a9bad17f-eabf-4f9d-8173-ba34f4028ff5",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the noised F-MNIST benchmarks, the test accuracy of the model trained on the selected coreset and evaluated on the on the vanilla F-MNIST test sets can be measured",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "a20ef457-cdd6-41b9-9412-5cb9a4ec0283",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the noised F-MNIST benchmarks, a LeNet can be used as the network trained after coreset selection on the selected coreset and evaluated on the vanilla F-MNIST test sets",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "cc85453d-68a3-4b07-8c8c-81ebc6d0e093",
                                    "requirements": "LBCS and the 7 Baselines have been evaluated on the 30% noised F-MNIST",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "4ffcff0a-f8a4-4d4d-83a9-dbdd514dc5d0",
                                            "requirements": "30% noised F-MNIST can be used for training (while testing on vanilla)",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "3085bbd6-700c-428e-bf87-d207ae2ea45c",
                                                    "requirements": "Code has been implemented such that a symmetric label noise can been applied to a random 30% of the F-MNIST train set (the test set is kept vanilla), as described in section 5.3",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Data Processing & Preparation"
                                                },
                                                {
                                                    "id": "4be70e99-34b3-416f-8ba8-7fb4dd34002a",
                                                    "requirements": "A symmetric label noise has been applied to a random 30% of the F-MNIST train set (the test set is kept vanilla), as described in section 5.3",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Data Processing & Preparation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "b7f7180b-6fc3-4188-b1d4-c14a1ec044fb",
                                            "requirements": "LBCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "fc762cbf-ab4e-4f09-94ee-f7b4c50874d6",
                                                    "requirements": "Code has been implemented such that to evaluate LBCS on the 30% noised F-MNIST benchmark at a given predefined coreset size using a LeNet after coreset selection, the outer loop can run for 500 iterations (i.e. T=500)",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "678c3022-a475-457e-ac65-f0d5650af85c",
                                                    "requirements": "Code has been implemented such that to evaluate LBCS on the 30% noised F-MNIST benchmark at a given predefined coreset size using a LeNet after coreset selection, the voluntary performance compromise can be set to $\\epsilon=0.2$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "fc64eedf-c360-4c16-9e61-726ae5383f62",
                                                    "requirements": "LBCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "943fb93f-d041-478e-8006-ce70d20a2a6d",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=1000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "736b8af7-24bf-4a42-82e7-1c5421dc8d7b",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "5b340c99-42ee-43a4-a2e1-9a61bef323aa",
                                                    "requirements": "LBCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "21086ad4-4659-44a0-a54a-1f663d390ba4",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "b25bf7e7-27ad-4860-b2c7-df51c9e624cb",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "fc7495d4-dd4a-4154-a08a-c3fda8eda7cc",
                                                    "requirements": "LBCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "94c7d92b-dd04-4d07-b81a-cfe8c0f15a45",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a6be3583-fbcf-4af6-b905-42f4ab7b5834",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "040e4678-c9e9-4cb2-b717-6aec8000e422",
                                                    "requirements": "LBCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d7dc7903-6f04-4110-9987-a2681dbc9729",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "54e36f77-ba7a-48a9-955b-ba26225afa89",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "c66a1ce4-d82f-4808-a37c-4f161d9b83fa",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "031c10d1-c4e7-4b7d-94b6-4f71da9719dc",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "67f81a5f-7d86-465f-bb76-18e4c0494aa1",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "50f6c386-d6cd-4196-95ec-2b77f1dff2de",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "f8735c0b-6d99-40c1-a0a7-45fead901a1a",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "7e762a8c-07db-4a4c-8537-ed41c02fd374",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "8acf217b-aac8-419e-b4b2-6d017e179b6c",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "5f55e92c-d0bf-4fbe-8da9-3bfa72b1b7ee",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "244ceabc-c1e5-4cc9-948c-eff45bbd3232",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "c55c4c82-7d3c-4583-80fe-be097be2d887",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "e140928b-dd78-4ccb-a18a-ff3fd8d18c2c",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "1a25433c-a7fe-4128-b03c-8bffda668c42",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "068a8abb-5a6c-4d56-91c4-56f14ac266d3",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "c473137f-e7ad-4570-94ee-61d14166b815",
                                            "requirements": "EL2N has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "9b88fd2d-fdf5-496a-b5b8-982063164dd8",
                                                    "requirements": "EL2N has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "dcdb20e3-99f7-433d-b987-d722779f816c",
                                                            "requirements": "EL2N has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "3ffdd605-d339-45f5-8bd0-d683eb4f5b9e",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "458fa16b-e881-4b92-8874-f370185910c4",
                                                    "requirements": "EL2N has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "691ade63-c0a0-48b6-84a0-a32df7aa0390",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "d6088e9f-d45f-414a-bcec-d98eb4546fa4",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "dc07e603-9be7-4fda-8a8b-4374b42d229f",
                                                    "requirements": "EL2N has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f65c5db9-5478-48bc-a595-ffed9b192164",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "58146277-0af5-4f1c-bd47-478b69dd0642",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "36fb7b9c-4fd4-46b4-a424-2c926c856cac",
                                                    "requirements": "EL2N has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4c3b3501-87fc-4577-aa35-92fedf3c947b",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "34625f66-2bb7-4911-a1b0-2f4d26e1e6a3",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "c5e9bfc6-a945-411e-8230-293715b04d06",
                                            "requirements": "GraNd has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "7ccf3160-2ae0-43b3-9899-6bd4f5037f0b",
                                                    "requirements": "GraNd has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ef81e7aa-4430-4d4f-9008-10add11133e3",
                                                            "requirements": "GraNd has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "b01e10cd-89b2-4149-ad54-3e66a92a70bd",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "f7d1caa8-c7dc-4a40-bd8e-6d4d82f8d3c0",
                                                    "requirements": "GraNd has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "37c65907-3de6-4a2e-a506-1c99ca71a58e",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "2e97e6f1-7dbd-4e40-94bc-755181319278",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "f5f80cb3-f93c-4f5c-a77c-662c1a779a7c",
                                                    "requirements": "GraNd has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "8eb04e99-ad2e-4bbc-aaeb-973645a44655",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "d912014c-9c9f-49d7-81d7-65adfddb39ef",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d03f7da4-0e1e-48f7-9625-9d014f69c5c1",
                                                    "requirements": "GraNd has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "1e7e5b48-51f8-4b74-acb0-995e928a751b",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "d1219e14-b194-49be-b66c-25697dcce27e",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "6225d8b3-bcc5-4f80-ae93-2c232bc9858d",
                                            "requirements": "Influential coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ce8cb9b1-84e5-4056-8a16-ce7811bd0428",
                                                    "requirements": "Influential coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9e285e26-7538-42c7-b510-b18d343f3fcb",
                                                            "requirements": "Influential coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "5e052530-9ffb-4843-864c-2dad4c83956d",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "0f2d513d-e1c0-45b8-a6a6-bfe9a7168cde",
                                                    "requirements": "Influential coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c27488bd-c1cc-41a0-8d90-ce3ef097bfde",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "59e857e3-42d6-431e-bacb-bb57f159bf8f",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "81a144e6-c16b-4f5b-9cf8-83de7e89c84e",
                                                    "requirements": "Influential coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "7b80a579-5bf4-42fc-b2eb-9308b3e976fd",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c9652e26-60d9-455a-af79-4e7c7c8a9210",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "8e751fbc-f2fb-4e00-affc-ce4600083336",
                                                    "requirements": "Influential coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "0bf8083d-c7a0-4b9a-98e2-88a9f52e0b20",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "799ed8e8-f24d-4984-9c7a-7bafbf75930d",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "bb3c8af2-f758-4955-b8e9-7b4673d45a0c",
                                            "requirements": "Moderate coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "6a750b1e-5cbf-4a7b-acd1-2846ab884ff4",
                                                    "requirements": "Moderate coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9449d7d2-ac9f-4fe9-81ab-7fbb1777561a",
                                                            "requirements": "Moderate coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "db68ceb7-79e9-43ed-a286-d1ebbe6666d4",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "0b5f731e-f07b-4d72-b447-86b66a086d92",
                                                    "requirements": "Moderate coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "71ea56ee-bad7-45ee-839e-08d6a2823ec1",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "51902606-7b69-4ecd-b054-d2524d4684b3",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "39974ea2-4114-441a-8244-d1d9c5851543",
                                                    "requirements": "Moderate coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2e5c496b-d522-442b-95c4-def786f61710",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "166a30c5-90f4-4f24-afbb-530fc4939d6a",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "84b09ebf-254d-43d8-bc6a-f2c4e8bd0de4",
                                                    "requirements": "Moderate coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4ae5466d-67a1-4c81-addf-05d252e86811",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "88a9adbb-bb70-4281-8a5d-c74bf38c5686",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "63a75dce-e6d1-4eb6-a3bd-ca99293915e6",
                                            "requirements": "CCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "badb21a7-9484-45ef-8641-38bd8fbe481f",
                                                    "requirements": "CCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "29b133de-0fd0-4f98-aef1-16d8644d97e1",
                                                            "requirements": "CCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "e2c0b7f9-3fb9-460f-afec-95fbd0c6653d",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c2ed997d-66c9-4f04-bc03-766446f1e12c",
                                                    "requirements": "CCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ede91c5f-fe32-4a82-91ba-8b0fb83e7636",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "84be3b2a-82b5-4ea3-a2ff-f810470143ce",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b2badf23-2a99-4d94-925d-243b389462e0",
                                                    "requirements": "CCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "8245a7ad-b2f9-4eb0-834b-028dd505feca",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "0b44736a-afa9-484a-ac8b-c6e749603d32",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "5d704be7-1986-4a21-9713-a31d0ffb3df4",
                                                    "requirements": "CCS has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "af129b6b-05c4-43e6-8676-4431783ebf44",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "f6cb645f-75b2-4bc4-bb68-5538a2e04d79",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "be3d6356-9792-40b1-8f68-9b9a512e3abe",
                                            "requirements": "Probabilistic coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "d88ad4ee-dcdd-4edd-8175-1dc6509d909a",
                                                    "requirements": "Probabilistic coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f83a4cec-51c4-4a33-8544-9ab63d84cd6b",
                                                            "requirements": "Probabilistic coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "7e3dfa20-b248-4798-b48a-872169374fce",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9c2196e7-7c72-41e8-a8d7-b099a1699aa4",
                                                    "requirements": "Probabilistic coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a59a3a7b-90ea-464b-a6db-667b047a44d4",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "446f3c8c-58ef-4936-9335-d3661cac1b97",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "82b5f5f4-2799-49cc-b564-e15542dd8c30",
                                                    "requirements": "Probabilistic coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "12afc425-5be6-4238-8e73-efb17104d1c5",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "db0e9914-e1cb-484f-a2c9-d2731780991d",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c6e7ea41-11e4-4455-8867-e9375ca8a2d7",
                                                    "requirements": "Probabilistic coreset has been evaluated on the 30% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d45436ce-cf41-487a-844b-ee4e6c5172a4",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the 30% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "6101343c-f5d1-42d9-9948-43baeb85c79c",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 30% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "efe1afe8-2fc1-4370-9dbe-fe0e3d3e3311",
                                    "requirements": "LBCS and the 7 Baselines have been evaluated on the 50% noised F-MNIST",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "70b3897f-2feb-4e41-b4f7-afddb5579839",
                                            "requirements": "50% noised F-MNIST can be used for training (while testing on vanilla)",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "5c8e319a-01b6-434f-a0b9-1dd9878511a7",
                                                    "requirements": "Code has been implemented such that a symmetric label noise can been applied to a random 50% of the F-MNIST train set (the test set is kept vanilla), as described in section 5.3",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Data Processing & Preparation"
                                                },
                                                {
                                                    "id": "57e0a4b1-ed05-429e-875e-c11e9c2c66f8",
                                                    "requirements": "A symmetric label noise has been applied to a random 50% of the F-MNIST train set (the test set is kept vanilla), as described in section 5.3",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Data Processing & Preparation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "463b9602-00f8-497e-9f63-5388c93ed5bb",
                                            "requirements": "LBCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "500e30ac-f8fc-4642-9d68-5ace86220493",
                                                    "requirements": "Code has been implemented such that to evaluate LBCS on the 50% noised F-MNIST benchmark at a given predefined coreset size using a LeNet after coreset selection, the outer loop can run for 500 iterations (i.e. T=500)",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "233f95ed-0dd1-4324-946d-a694493650f9",
                                                    "requirements": "Code has been implemented such that to evaluate LBCS on the 50% noised F-MNIST benchmark at a given predefined coreset size using a LeNet after coreset selection, the voluntary performance compromise can be set to $\\epsilon=0.2$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "bf61a2bc-30b0-4bb5-be16-aaa63a177cc4",
                                                    "requirements": "LBCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "6d750071-552f-4170-b704-991dd14102cb",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=1000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "2e3feb65-7da1-4649-b98d-c16f931d60f7",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "7c462f6a-3f21-4a6d-b98e-4060a93ae0c4",
                                                    "requirements": "LBCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3448fa35-b052-4fb4-a35a-4b35a8ab28f4",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "3f4cf387-39aa-4efb-9023-6a64c930281c",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "078fc064-37b9-4226-94d0-845852f5f43c",
                                                    "requirements": "LBCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4a5ee741-11a5-414c-a6a8-2dc467717b37",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "2d39547b-f4a2-45b9-9b1f-7ba8f35f55bd",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "44061f6b-d27a-44d4-a0e1-ee54e76b5fff",
                                                    "requirements": "LBCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "1b5983a5-acd8-426d-a676-b7ba30110d86",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "8ee30d01-dee3-48d3-93b0-5c94b14c432a",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "403a27d2-4945-43c8-9f6c-3f93e6d4de69",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "860e5d73-4e1e-45fa-a1f4-a78b5505681e",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "103062b4-dcdb-4d03-af02-89bf10a2c572",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "0d523955-e08e-40ab-945b-8628ea515fca",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "0f2a0c11-735c-49f1-b016-711c7379c268",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f2ee66f5-f3a5-4320-8b29-90eb423693a9",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "e8ba2910-027e-4526-a17e-881375008c16",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d996c5ea-f1f1-4044-b46c-c97b8a7990e9",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5a46ae65-ee7c-4a20-ac4f-2a8891edee1b",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "c3bc62b6-b6d8-41fb-94f2-c1380eaa6487",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "0e3a1171-029f-431e-83a3-1e964a7f4072",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2366a8f2-1f00-4774-a28a-6627e57c4bf3",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "24892231-0b7c-4a51-bf9f-f23ea77a0e84",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "d1bfc396-d50c-45cb-b181-d169d4606afa",
                                            "requirements": "EL2N has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "6587a5ca-7b50-4e46-820a-c0ea608ea0f1",
                                                    "requirements": "EL2N has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "bdb095ab-3c03-4a5d-a795-97fe67959b0f",
                                                            "requirements": "EL2N has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "5c73f767-53d2-41f1-a70c-77393bce3aba",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "fd248848-02cd-4bd8-b5d0-ba3bbabbd7ac",
                                                    "requirements": "EL2N has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5ce0a003-5d23-46fc-acad-e8258dc891b8",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "6b73941f-1057-498d-b29f-509b2cfdd72e",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c2c15701-2c19-45c7-af0c-16c1829fd9d2",
                                                    "requirements": "EL2N has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "752d41f2-5c24-42d2-9970-22df8ceffd07",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "cb995cf0-fada-45d7-b9bf-76edfbe26469",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "1c0001b8-7449-46a0-ac45-57182e02cab9",
                                                    "requirements": "EL2N has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "787ae1c0-7a08-4707-8e4f-6a2d50817d53",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "057b9dae-73c4-4326-9322-9c20ef9ae1c4",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "98c57f57-f9cb-41cd-bc94-30b6153a53fc",
                                            "requirements": "GraNd has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "6589a202-bd8c-4b36-b15f-a23c8f28fbc8",
                                                    "requirements": "GraNd has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "11b21b8e-ae74-424b-a549-245f7c14161d",
                                                            "requirements": "GraNd has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a7c8d395-de2c-4c30-a4d5-57c9b365983e",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "5ccdbc15-a36f-4451-a481-8492579bd4e1",
                                                    "requirements": "GraNd has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "67b6b631-57d0-49f9-99c8-22b8279b93cc",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4c33ffd1-e447-4fd8-9767-e09ad5738399",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "4b604959-8669-4d44-9fe5-369a3d2998da",
                                                    "requirements": "GraNd has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c3d1aa8b-3e5e-4a0c-ac12-b3485b0d3562",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "f13c3637-8af6-48e7-ac77-2117da6b4096",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "432f0f3f-0b2b-4f90-a557-cf119c38b3a2",
                                                    "requirements": "GraNd has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a8c595a2-e90a-410c-a6bb-2a6c6b458db7",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "1a18ce10-59b9-41f7-943d-d933b38e5b16",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "42feb4b0-bf0d-4450-bc63-db37e0291013",
                                            "requirements": "Influential coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "a6f17f14-3bc8-4876-984e-c049d2489117",
                                                    "requirements": "Influential coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "0bfd491c-525d-4715-9ed9-bdc21f62c422",
                                                            "requirements": "Influential coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "d2a60206-82f9-4499-9f6d-c7341f8f5b51",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b52ca55b-3406-4db4-b651-e2919dc2f280",
                                                    "requirements": "Influential coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c72831e5-67f6-4f9c-8d61-938a20345295",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "72296674-a1f7-4f2d-b30b-634f30f663f6",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "3236b3c8-2445-4938-a1df-1a8da73543b5",
                                                    "requirements": "Influential coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "1c1fc13f-6056-4fcc-b215-cbccd7bd6ee2",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "ea484399-2dea-4c85-8391-cb5445861134",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "1df1ab38-902d-4bd7-b75d-4477d96bc870",
                                                    "requirements": "Influential coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9cc0d46f-a5c6-4bea-85d5-d493dbad1a37",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4f8d7a9e-7eab-4b38-b403-e90b80f46e4d",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "9d38da76-86d9-4976-a496-e0e170f1f787",
                                            "requirements": "Moderate coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "a6a012f8-68c9-4dab-8476-4559b85318fe",
                                                    "requirements": "Moderate coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5cd46f4b-411a-4bee-bd05-1e6179736f90",
                                                            "requirements": "Moderate coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a57ca522-0f8d-4c49-9fee-866842816f4f",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "13d77db0-9b3b-4ff7-b9d5-b564d861ec30",
                                                    "requirements": "Moderate coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4a416604-23c9-4de8-88b6-3b43f31157ad",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "1c30b5df-af3a-4f93-bc76-317e6f1f5f08",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "49651e37-a029-4c45-98d9-99138f7ebea7",
                                                    "requirements": "Moderate coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "714c54d1-bafc-4799-b65a-d0dd1bd49b08",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "345fb151-5c85-4432-94a7-cee155f7a96a",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "24cf4172-7986-4d07-af3c-1cb1c53c76ce",
                                                    "requirements": "Moderate coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "77c0b36f-a362-408f-a159-a8f8294c1558",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "6ca9df48-2bed-453d-b667-5863cef271ec",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "34c7ed45-5a21-4eb0-862c-e1a79b16527e",
                                            "requirements": "CCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "187755aa-d987-4731-83b7-dd24dc717e6c",
                                                    "requirements": "CCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "6ec4dc6c-02e6-4458-821a-24d31821ce86",
                                                            "requirements": "CCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "b75e2f7d-6aeb-4fb1-abfe-9c2688a97cfe",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "72fa19e9-5470-49d9-b0d9-f0d5033bcbcf",
                                                    "requirements": "CCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "7423d197-91f4-48f6-89be-ddc98ef19b45",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "e3a47d91-4015-497d-bd1b-a35d89ad038f",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "761abc5d-d28f-4fea-aa37-3a52cfed711a",
                                                    "requirements": "CCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "aaee9ac6-2108-4ce9-bc7b-9ac68d821a90",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "62ed9509-a6a9-4373-9303-0bfc2ccf3fbf",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "6911ca7e-0b7f-4f38-a4bb-a99a8515dca4",
                                                    "requirements": "CCS has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d0f59c57-95a6-4174-a3e7-654d95140541",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "9c0c70a6-ac03-46de-9e71-575de4373c9a",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "33dbd854-d161-4173-9a65-057c54025ba6",
                                            "requirements": "Probabilistic coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "6451062d-c746-4796-8530-722d9a4bffb0",
                                                    "requirements": "Probabilistic coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d3c4ec39-463b-4950-9108-383656ba67f2",
                                                            "requirements": "Probabilistic coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "ea3cc1ab-010c-4e14-8d91-d98941cb63cb",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c900f8bb-b096-4543-85eb-86abd6b004e7",
                                                    "requirements": "Probabilistic coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "166bc445-f6da-4695-b7d4-e2b3c704e380",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "20ab4170-d43d-4e24-8b17-113d44cfa81b",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "2b05677a-5970-49fc-976d-21634ffd248d",
                                                    "requirements": "Probabilistic coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "261ee630-f9fd-49e1-bd1d-43ba783cc6fc",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "df1de2be-fbaf-4a21-a1bc-3493b731a73d",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "63309546-a2f4-49ae-9fd5-1403ae4d5cc1",
                                                    "requirements": "Probabilistic coreset has been evaluated on the 50% noised F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d00b5219-1fd3-4ea7-a375-e87113c00215",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the 50% noised F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "3cd15aaf-ec75-456e-8da5-164abe050f90",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on 50% noised F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "3873966a-1fe5-47cd-9f3c-f7d4760e6220",
                            "requirements": "The test accuracy measured on the 30% and vanilla F-MNIST test set shows that across all methods and predefined coreset sizes, the model trained on the coreset selected via LBCS always achieves the highest test accuracy",
                            "weight": 2,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "5170b55e-2ac7-4e6b-9d66-ef17665bcbd9",
                    "requirements": "The results shown in Figure 2b have been reproduced",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "f747fada-ca11-4abf-8313-5bf6112b956a",
                            "requirements": "LBCS and the 7 Baselines have been evaluated on the class-imbalanced F-MNIST",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "ac5c415c-a648-433b-8990-10772bdf7c57",
                                    "requirements": "class-imbalanced F-MNIST can be used for training (while testing on vanilla)",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "930a8e27-8816-4a03-a71b-d1da50d16a7c",
                                            "requirements": "Code has been implemented such that a class-imbalanced version of F-MNIST train set (the test set is kept vanilla) can be constructed, as described in section 5.3 and in the addendum",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        },
                                        {
                                            "id": "2f267f5d-3940-4dff-99c7-ae9e7263cece",
                                            "requirements": "Class-imbalanced versions of the F-MNIST train set (the test set is kept vanilla) have been created, as described in section 5.3 and in the addendum",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Data Processing & Preparation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "1cd19b9c-d2c8-4c7c-9be5-a0a8300ede86",
                                    "requirements": "LBCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "513aed24-c9d4-4fbb-b234-30afd6695e1b",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the class-imbalanced F-MNIST benchmark at a given predefined coreset size using a LeNet after coreset selection, the outer loop can run for 500 iterations (i.e. T=500)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "258784e2-2e44-4596-ad10-19ccc320fc5b",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the class-imbalanced F-MNIST benchmark at a given predefined coreset size using a LeNet after coreset selection, the voluntary performance compromise can be set to $\\epsilon=0.2$",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "d1cbc1a9-48d4-47a1-b5de-ded24e4fb149",
                                            "requirements": "LBCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "25fbbf63-c0e0-493b-bb63-413dcbecf8ed",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=1000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "3f4635e9-4523-4241-b911-0b99345bd5db",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "28ea1410-6ada-4d06-afd1-0b68ab6abb89",
                                            "requirements": "LBCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "99b3c8c4-a588-4fc6-911b-91d70970c06e",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "2500121c-fd63-40ed-adef-2a882043d993",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "1992b73b-773c-4aed-95f5-1ec598be8ddd",
                                            "requirements": "LBCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "54620b7e-0cfb-4648-b74d-cc744cb3caa0",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c8446f48-9746-409b-88d4-4c07dda2a105",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "63f879c4-c8b9-41db-aa20-dc283e825391",
                                            "requirements": "LBCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "41bf54af-859b-4a65-99d4-f87f5d771659",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "95dbdcf3-9e8d-40e9-9868-22a61e0e9ed3",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "a277915b-c45e-42d9-bcc5-0e8bbfb30843",
                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "64daf93b-aa57-468b-a8a1-b9e0e8ab2ad7",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "4638e9e2-e048-4874-9cb0-26233368e485",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "4028cb4c-9150-4355-97b2-57ed0fef2a3f",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "af81e6b2-f4c3-4643-a2bd-b1b1a9439c36",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "d777ee74-d13b-447b-bd08-041724846d8e",
                                                    "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "5e6f2524-912c-4b59-9473-57de15b3084c",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "3b2b8d67-610e-4894-813e-e3ceeae92ae7",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "0fd2fe83-5e04-4f97-8d73-4491487a007f",
                                                    "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "a39df9b2-0ce3-48f7-8bf0-78f0a4a23631",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "80039129-d7e7-40ec-9358-bc35ecd8bef2",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "8e343793-5bcd-4536-8b11-f9be08699bf1",
                                                    "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "835a2adb-f9dd-43f4-aab5-b60fa0cadd97",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "98a0ae26-0eca-42c5-8a57-ddcd9d099716",
                                    "requirements": "EL2N has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "d6f3f4be-4676-4dda-a232-1b30ea8ce1a7",
                                            "requirements": "EL2N has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "947be243-6155-4a23-929d-ef70f269f569",
                                                    "requirements": "EL2N has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "3f3dbe50-bd5d-48a3-9bc1-9ffb87f56b52",
                                                    "requirements": "EL2N has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "45e40270-13c8-4b47-853c-6fc4417af5b2",
                                            "requirements": "EL2N has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "464cff24-9d62-4677-984c-47751e397a6f",
                                                    "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c200d688-130e-4d37-a256-33bb6f86b57d",
                                                    "requirements": "EL2N has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "342247a1-35db-48dd-a065-7df5a503b2d6",
                                            "requirements": "EL2N has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "0564b2f0-436c-49dc-bdf3-811628ea6443",
                                                    "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "c5ac458a-1592-4198-98e0-18291f57815e",
                                                    "requirements": "EL2N has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "e1d3c148-9682-443c-a038-cc70cd21c353",
                                            "requirements": "EL2N has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "0c386c7a-ffa5-40b5-9c2b-4129ce443e95",
                                                    "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "cccb4461-092a-487f-b51f-7cdbc39fdd0f",
                                                    "requirements": "EL2N has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "8788bac4-8f09-4fa1-b224-81604ecbd0b7",
                                    "requirements": "GraNd has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "7db87bd5-774c-4e5f-a5b9-9b68e1401e92",
                                            "requirements": "GraNd has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "f29ad235-8048-4613-b4dc-9d8ed632fd27",
                                                    "requirements": "GraNd has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "5ff66795-921d-418c-8ddb-2527bf802944",
                                                    "requirements": "GraNd has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "afc3bdf1-8332-4099-b07c-5eadd83400dc",
                                            "requirements": "GraNd has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "d0b1c40c-9d94-474a-8e6b-172176b96826",
                                                    "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "87fcf7f9-ec29-422a-ba8b-da7996e83493",
                                                    "requirements": "GraNd has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "9ad82027-71d4-4ae4-b654-5134330bf78c",
                                            "requirements": "GraNd has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ffd15c79-7e89-43ff-b95a-f530329b0f2c",
                                                    "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "ed0afabf-4bf3-4267-83c9-0361c7cd367f",
                                                    "requirements": "GraNd has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "081b8da7-7c34-4d49-abf5-9f1a26aeb8ee",
                                            "requirements": "GraNd has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "b9ad4349-5ca7-4bdc-972c-33ea0d2d56cd",
                                                    "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "a13d07d3-a0c4-4444-9be3-2a16b37c688e",
                                                    "requirements": "GraNd has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "a1742c98-379f-43dd-be06-649bf6722a05",
                                    "requirements": "Influential coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "11b64403-4df3-4cef-acfc-441130dc9f96",
                                            "requirements": "Influential coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "62887b49-2388-4816-8705-de0411f55b9d",
                                                    "requirements": "Influential coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "1481a490-e2bf-40fd-8c06-d04ac715ae8f",
                                                    "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "1041b70e-d13d-4b27-a436-bc2c66dee776",
                                            "requirements": "Influential coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "5d8bcaa9-b0f7-43ee-8b2b-33e0041b5671",
                                                    "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "78f8babb-ae3d-4762-932c-c608a654ef3f",
                                                    "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "81737a9e-bbc5-46f3-ac35-a94252fe3a3a",
                                            "requirements": "Influential coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "53997471-59d9-4b1b-b688-d2fd78ae653f",
                                                    "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "00d40179-e45a-435b-ac19-267d3a95e093",
                                                    "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "0b2437e1-8eae-4c62-abe1-4b3b376232b7",
                                            "requirements": "Influential coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "3df589f7-5769-4ad4-9d64-33d95b99f4ff",
                                                    "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "19ff6624-d843-4439-a730-741ed16d69b1",
                                                    "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "8a643331-d1d3-44cd-a312-edd0fa290a24",
                                    "requirements": "Moderate coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "2c505dc7-8022-4999-8d7c-8076461d3a03",
                                            "requirements": "Moderate coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "93bdc5c6-8501-4ec5-a2ea-48d515ef8651",
                                                    "requirements": "Moderate coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "8d91803b-ef13-435b-b5c0-ad2f669a4db4",
                                                    "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "1a4ee946-ad80-4c64-9415-8b90d6fc1b9a",
                                            "requirements": "Moderate coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "516d3b43-0f68-4d64-93c2-41c5eebb30aa",
                                                    "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "8c79bb94-a5d8-40f6-a36d-3017d3c71ca0",
                                                    "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "b7a95b5b-5241-4216-9fdd-bd9d32379b94",
                                            "requirements": "Moderate coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ca61d3ed-8c78-43d0-b255-624a251574ae",
                                                    "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "04f9e827-f7fa-46a5-9c76-5649160171ba",
                                                    "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "89819da7-6a3c-45b6-8291-2c42d1be2b6a",
                                            "requirements": "Moderate coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "a5e308a7-6223-46b5-b6b6-df7efd9ecc22",
                                                    "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "64d67d8f-223a-4a5c-bf33-74cb0b754f68",
                                                    "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "9e2bac7a-07a2-442b-adee-0872c3780821",
                                    "requirements": "CCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "9b706e61-48c3-4c95-ba80-b8f61a33b358",
                                            "requirements": "CCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "276ceb61-6288-430f-9b8c-3a142b9cab15",
                                                    "requirements": "CCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "375c0c18-8a97-47c8-a800-95aaf0d63aeb",
                                                    "requirements": "CCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "b114fabb-ece1-43a1-bfcd-458ed0600146",
                                            "requirements": "CCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "1a39c5b7-4b04-4301-bfad-e8597531a079",
                                                    "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "3d2b2c72-935d-443e-820d-b5d94709d0b7",
                                                    "requirements": "CCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "64905c07-14bb-47ad-9866-a2507e543ac5",
                                            "requirements": "CCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "6b845394-4022-49cd-843f-b24865303e64",
                                                    "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "112d98cc-ea46-4229-beb5-d6822624da3f",
                                                    "requirements": "CCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "0fba0f5e-63e2-4a31-86ea-bb4236788a53",
                                            "requirements": "CCS has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "2739a340-b573-49eb-9b59-57cb03f6919a",
                                                    "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "328b084a-4eed-4159-857d-1626a6df8182",
                                                    "requirements": "CCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "726b95ca-a2f7-4954-a0f0-a6fc1712790b",
                                    "requirements": "Probabilistic coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "8d496c4f-2c67-4988-8897-c0d8c077bce8",
                                            "requirements": "Probabilistic coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ca3e414b-941f-412f-bead-649db50aa7ff",
                                                    "requirements": "Probabilistic coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "b4cabd86-bcc7-4198-a63d-6ae61c97acdd",
                                                    "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "e9301dd8-b194-42bd-922e-eccd39dc0786",
                                            "requirements": "Probabilistic coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=2000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "3f17d3d5-6b9a-43a9-8065-9afe6561e08b",
                                                    "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=2000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9aca04ea-e434-4158-8b51-1551003b1b69",
                                                    "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "26879888-8cd1-4035-8cba-431555d36b7c",
                                            "requirements": "Probabilistic coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=3000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "925b0684-3038-4966-9712-aa953ee07e91",
                                                    "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=3000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "663d6f90-4e6c-445a-b0a6-e1fcf2e3dab7",
                                                    "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "676b6878-2a37-436b-875e-a8d1a36d1ba8",
                                            "requirements": "Probabilistic coreset has been evaluated on the class-imbalanced F-MNIST benchmark using a LeNet after coreset selection with a predefined coreset size of k=4000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "9f51191b-e458-4427-8dda-a6042540d1fe",
                                                    "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the class-imbalanced F-MNIST benchmark with a predefined coreset size of k=4000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "16096984-1dfd-4353-a9a4-f4cc3e79e369",
                                                    "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on class-imbalanced F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of a LeNet trained on the constructed coreset on the vanilla F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "a5326cbf-f961-4067-aeb7-9ec8958a3ac0",
                            "requirements": "The test accuracy measured on the vanilla F-MNIST test set shows that across all methods and predefined coreset sizes, the model trained on the coreset selected via LBCS always achieves the highest test accuracy",
                            "weight": 2,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "052205bd-5ae0-4e4b-992d-2fd90fb0596b",
            "requirements": "The results of Section 6 have been reproduced",
            "weight": 3,
            "sub_tasks": [
                {
                    "id": "0a1a0526-702e-4348-8c56-2cdc94e39770",
                    "requirements": "The results of Table 9 have been reproduced",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "4193972e-c772-432e-839f-c3b10bb6eb9f",
                            "requirements": "LBCS has been evaluated on F-MNIST at increasing search times (i.e. number of outer loop iterations, T) values, at k=1000 and k=2000. The final coreset size and test accuracy have been measured",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "2686a92a-050c-451f-810a-adb66b47bdf5",
                                    "requirements": "Code that is agnostic to the predefined coreset size and and search time has been implemented",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "a684b3a9-1503-4cca-9da0-44e77485524e",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST benchmark at different search times, a LeNet can be used as the proxy network used for coreset selection",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "048d126e-8111-4bca-8b99-68d7f5ea6426",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST benchmark at different search times, when training the proxy network for coreset selection, this network can be trained using an Adam optimizer with a learning rate of 0.001",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "006eb509-27e6-4a52-a6be-bc0d98262038",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST benchmark at different search times, a LeNet can be used as the network trained after coreset selection on the selected coreset and evaluated on the F-MNIST test set",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "1465d976-1ca1-445f-b5ff-841be5fa8c60",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST benchmark at different search times, the test accuracy of the model trained on the selected coreset and evaluated on the benchmark test set can be measured",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "5e856e01-f270-4917-93d4-0bddaa7de547",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST benchmark at different search times, the final coreset size at the end of LBCS can be measured",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "2fbe75d2-6546-4ac7-a91f-d9069990520a",
                                            "requirements": "Code has been implemented such that to evaluate LBCS on the F-MNIST benchmark at different search times, the voluntary performance compromise can be set to $\\epsilon=0.2$",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "32eb329d-0c9b-44e0-b305-f7d14af6aee0",
                                    "requirements": "LBCS has been evaluated on F-MNIST at increasing search times (i.e. number of outer loop iterations, T) values, at k=1000. The final coreset size and test accuracy have been measured",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "02768271-7a77-470a-9c9e-8801c989f8aa",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=1000 and a search time of T = 100.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "3a774b08-ecb4-40ee-9b72-67626d257749",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000 and a search time of T = 100, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "03172991-43c0-4d99-aa95-87dd02b9ccf8",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 and search time of T = 100 for constructing the optimal coreset for training a LeNet on F-MNIST.  A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "e4e27a1c-f7a5-4dac-bf0b-7794c4b63ed9",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=1000 and a search time of T = 200.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "06748d42-3ff8-4ed1-b3f8-793daeae54bf",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000 and a search time of T = 200, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "68257fc1-b32f-45f5-ab8c-bbf4c3e69c4b",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 and search time of T = 200 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "65c22473-09b0-4abb-97a7-549d9aa35f12",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=1000 and a search time of T = 300.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "7e52b162-63e9-438a-8113-5bb64f38548f",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000 and a search time of T = 300, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "de023211-56d6-4b96-bcad-9585f8fd65e5",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 and search time of T = 300 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "05ee557a-4fa3-42c1-9f15-b0284592536c",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=1000 and a search time of T = 500.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "360df93f-20f3-454a-bdb8-8e93d81e65e5",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000 and a search time of T = 500, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "07780070-7254-49cb-a68b-c25f6f1816a7",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 and search time of T = 500 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "d86e0e16-4a12-4f56-9be9-5a6eaa8556a5",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=1000 and a search time of T = 800.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "00ebd352-4b48-4c1a-bc7d-ed67bde8703c",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000 and a search time of T = 800, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "28be3c4b-b948-44b4-b3a6-ec7fdda9d1fe",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 and search time of T = 800 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "51e855ca-818d-42af-8ac0-09357931274f",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=1000 and a search time of T = 1500.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "c4290c64-c9a9-4472-9014-3762c5f9e822",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000 and a search time of T = 1500, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "b7f2fa7a-9cba-403d-a291-b877dc55b4f1",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 and search time of T = 1500 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "d8025af5-fe80-43c8-a715-d79dc313c86d",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=1000 and a search time of T = 2000.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "4b1292d8-f63f-421a-aa5c-1658c46f7f09",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000 and a search time of T = 2000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "4eb8aa86-bd31-4278-8869-6b92f9b32a67",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 and search time of T = 2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "d4188c88-15d8-4cd9-8131-db429b42633f",
                                    "requirements": "LBCS has been evaluated on F-MNIST at increasing search times (i.e. number of outer loop iterations, T) values, at k=2000. The final coreset size and test accuracy have been measured",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "a110bae4-311b-472f-8abf-b93c70c9957d",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=2000 and a search time of T = 100.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "a8386a42-a2ae-4bd8-8bff-fee977653863",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000 and a search time of T = 100, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "5aded0f0-2d75-4be1-8261-508cc04f985a",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 and search time of T = 100 for constructing the optimal coreset for training a LeNet on F-MNIST.  A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "ae208364-1d44-4b66-9421-718a130a23b7",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=2000 and a search time of T = 200.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ee06987d-790a-4a86-89bd-5fef44909257",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000 and a search time of T = 200, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "a54e60d0-8c21-462d-b56a-3bc4aeeb722d",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 and search time of T = 200 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "98f33abd-7966-48b1-afbf-efbd18fda61e",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=2000 and a search time of T = 300.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "9a1437f5-2f53-4d72-b734-3b3e6d9ff1e2",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000 and a search time of T = 300, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9eb2fa4e-eac0-4fe1-9497-dfc2f08e171e",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 and search time of T = 300 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "135b8ac9-4860-4657-bcbb-1ea4962f76ec",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=2000 and a search time of T = 500.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "5982a7b3-fd48-4ccb-9fbe-24d890e7779b",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000 and a search time of T = 500, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "1f5efdbd-d821-403d-b87f-b53237c3a0b3",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 and search time of T = 500 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "0101086c-c831-46bd-af7f-362852b1abb1",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=2000 and a search time of T = 800.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "ac415b95-b72e-41c9-b06e-5a92746905dc",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000 and a search time of T = 800, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "483d8469-f3d6-40ac-872c-b98b47e514b0",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 and search time of T = 800 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "8a59e063-ce0f-4577-a105-885236223f82",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=2000 and a search time of T = 1500.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "888be93e-d881-45d3-859a-50288664a66e",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000 and a search time of T = 1500, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "b33c473b-4f3e-49f7-a0e3-bcfe76937930",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 and search time of T = 1500 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "568db59b-b973-4f6e-abe7-ab1571e22bca",
                                            "requirements": "LBCS has been evaluated on F-MNIST with a predefined coreset size of k=2000 and a search time of T = 2000.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "f396f0ea-862f-406d-9334-185cd5f484ab",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000 and a search time of T = 2000, using a LeNet after coreset selection",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Method Implementation"
                                                },
                                                {
                                                    "id": "ddb4cb7f-f48d-4f4a-9a78-b915843fc175",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 and search time of T = 2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded. The coreset size selected by LBCS process has been recorded",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "cedc2923-c691-4e7b-84c7-14b5506ff5b7",
                            "requirements": "The results of Table 9 have been reproduced",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "c6d42b4f-cb8e-4448-a01a-ea7f8986fb22",
                                    "requirements": "The measured test accuracy over the various search times shows that as search time increases, test accuracy increases before eventually plateauing",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "4b6fc77d-cfbe-4e91-832a-85e64123f803",
                                    "requirements": "The final coreset sizes recorded over the various search times shows that as search time increases, the coreset size decreases before eventually plateauing",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                },
                                {
                                    "id": "28408d11-c185-4f76-8641-0ac4d42fbc91",
                                    "requirements": "The final coreset sizes and test accuracies recorded over the various search times shows that as search time increases, the coreset size decrease plateaus after the test accuracy increase plateaus. In other words, we can observe further reductions in coreset size after the maximum test accuracy has been reached, until coreset size also converges",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "fdd60619-2185-4b5f-882d-bd0f4861e26d",
                    "requirements": "The results of Table 5 have been reproduced",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "10a2793f-c528-494c-90b1-655ccfc056e9",
                            "requirements": "LBCS and LBCS+Moderate have been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "0425beab-8188-45ba-a1fe-d0e8fc0b30b4",
                                    "requirements": "Code that is agnostic to the predefined coreset size and coreset selection method has been implemented",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "d3d922c8-c10b-4911-993d-6000fb145c3c",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and LBCS+Moderate on the F-MNIST benchmark, a LeNet can be used as the proxy network used for coreset selection",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "851244dd-fd31-49a1-9ef2-fdd81d8d6eca",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and LBCS+Moderate on the F-MNIST benchmark, when training the proxy network for coreset selection, this network can be trained using an Adam optimizer with a learning rate of 0.001",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "317c6539-9700-4e66-bfd7-142a0ae2e463",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and LBCS+Moderate on the F-MNIST benchmark, a LeNet can be used as the network trained after coreset selection on the selected coreset and evaluated on the F-MNIST test set",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "71db6074-9a6d-414d-88dc-5e4b27f27e5b",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and LBCS+Moderate on the F-MNIST benchmark, the test accuracy of the model trained on the selected coreset and evaluated on the benchmark test set can be measured",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "aa53806a-0ded-4b2e-97eb-c05fb0b9c68c",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and LBCS+Moderate on the F-MNIST benchmark, the final coreset size at the end of LBCS can be measured",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "10731700-5392-4ca9-9460-ebbb4f62cc4b",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and LBCS+Moderate on the F-MNIST, the voluntary performance compromise can be set to $\\epsilon=0.2$",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "e08b118b-1aea-4a28-b97a-60bc3a4fb85c",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and LBCS+Moderate on the F-MNIST, the outer loop can run for 500 iterations (i.e. T=500)",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "dfbed6ce-e186-4cfb-8004-21d49e0a7b0b",
                                    "requirements": "LBCS has been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "335d73bd-1a5a-4397-b9e1-ce65ea4eb64f",
                                            "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "73eb3ef1-4039-4e33-a348-f84bc0e86829",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "819e1cb5-d904-4b3a-9fdd-a21a4a427b85",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "9a7ba67d-f940-462d-8771-5bcd7a0e816a",
                                            "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "8b9d17b8-1b51-44cd-8063-4bfef223b097",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "dde6bb9c-5a85-4228-9af9-7acfaa1c6895",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "6244f3c4-d902-4d06-b3f7-91b1fc3f3f5c",
                                            "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "cd09db17-d148-4909-8fc4-aba6f652cd71",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "9ec3bfe8-1fd0-484e-912d-2773ca2b643f",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "2a25a5e3-617d-4afb-8681-effef9568bdf",
                                            "requirements": "LBCS has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "0750d144-6172-4fac-90e2-6b2b43b8c4d5",
                                                    "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "cd6e343e-e2c3-4ad5-8b97-b8e8e4094b73",
                                                    "requirements": "LBCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "326d7bdb-50ca-451d-af81-818d31fb8406",
                                    "requirements": "LBCS+Moderate has been evaluated on the F-MNIST benchmark at various predefined coreset sizes",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "fe601b7d-c9fe-4ee9-bc8e-27e341bd6b33",
                                            "requirements": "LBCS+Moderate has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "e23baee9-0c30-48be-aa59-74eb435ef900",
                                                    "requirements": "Code has been implemented such that LBCS+Moderate can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "de6d64cd-a66e-4531-b902-4c91458ac00b",
                                                    "requirements": "LBCS+Moderate has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "9df326a2-45b2-4de4-99c5-7693e8e7ba07",
                                            "requirements": "LBCS+Moderate has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "d57b2411-af36-4a4b-a857-d8055b7f1082",
                                                    "requirements": "Code has been implemented such that LBCS+Moderate can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "37dd1b0c-a1df-4521-857f-b1a2d6b045bb",
                                                    "requirements": "LBCS+Moderate has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "b97b7abf-b8bf-4f65-9d05-443a523b7e0f",
                                            "requirements": "LBCS+Moderate has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "28cfc788-2c26-4167-9af5-f3b4bae9c983",
                                                    "requirements": "Code has been implemented such that LBCS+Moderate can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "b767a3a7-0397-4f57-bf7e-0a91b1a45d01",
                                                    "requirements": "LBCS+Moderate has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "64746167-1eb1-4526-b784-f02ceb419ce7",
                                            "requirements": "LBCS+Moderate has been evaluated on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "136efe47-8225-42aa-becf-7dd03efeb222",
                                                    "requirements": "Code has been implemented such that LBCS+Moderate can be evaluated for coreset selection on the F-MNIST benchmark with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "73526f6c-3a96-4e23-9633-4392ddb77c15",
                                                    "requirements": "LBCS+Moderate has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a LeNet on F-MNIST. A LeNet was used as the proxy model during coreset selection. The test accuracy of the LeNet trained on the constructed coreset on the F-MNIST test set has been recorded.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "27eff4f5-35db-4771-96c5-64c3f95a20d1",
                            "requirements": "The measured test set accuracy on F-MNIST by the LeNet trained on the coresets selected by LBCS and the coresets selected by LBCS+Moderate shows that across all predefined coreset sizes, LBCS+Moderate achieves the highest test accuracy.",
                            "weight": 2,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "0808a52d-3935-4e08-a04c-5e1567ed67f7",
                    "requirements": "The results of Table 6 have been reproduced",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "9270db2c-e23c-45b8-9078-b9e04e65726b",
                            "requirements": "LBCS and the 7 Baselines have been evaluated on the SVHM benchmark at various predefined coreset sizes using different model architectures after coreset selection",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "6cf8e5ac-123f-4dc7-9aef-a3bfec2d7c6b",
                                    "requirements": "Code that is agnostic to the predefined coreset size and evaluated model architecture has been implemented",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "15fa61e5-85da-4571-bf8a-002fa0f61631",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the SVHM benchmark using different model architectures after coreset selection, the CNN in the left column of Table 7 can be used as the proxy network used for coreset selection",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "6bf53170-7227-46ac-8b39-6a42423dfc50",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the SVHM benchmark using different model architectures after coreset selection, when training the proxy network for coreset selection, this network can be trained using an Adam optimizer with a learning rate of 0.001",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "dc278f5a-25d5-44ce-81d5-37cb5e62b140",
                                            "requirements": "Code has been implemented such that to evaluate LBCS and the 7 baselines on the SVHM benchmark using different model architectures after coreset selection, the test accuracy of the model trained on the selected coreset and evaluated on the SVHM test set can be measured",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "bbe5ff71-223a-4507-9a7d-486524c13fe0",
                                    "requirements": "LBCS and the 7 Baselines have been evaluated on the SVHM benchmark at various predefined coreset sizes using a ViT-small after coreset selection",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "c844703a-bf49-4098-ac34-1c624c448056",
                                            "requirements": "LBCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "e8496a0e-4d4d-420e-aacc-f9687efc5cb4",
                                                    "requirements": "Code has been implemented such that to evaluate LBCS on the SVHM benchmark at a given predefined coreset size using a ViT-small after coreset selection, the outer loop can run for 500 iterations (i.e. T=500)",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "fe3aaa7c-5ff9-44d1-8dbe-350deac38853",
                                                    "requirements": "Code has been implemented such that to evaluate LBCS on the SVHM benchmark at a given predefined coreset size using a ViT-small after coreset selection, the voluntary performance compromise can be set to $\\epsilon=0.2$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "6005590d-4533-46a1-8144-17ecdaec00e8",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "c39b2d71-96fd-467a-8ff2-3113047133de",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=1000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "042dc190-d166-4afa-ab5c-5bc0d70b8a7c",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9c5c30a3-3f0f-4252-a069-f2172e4e0499",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "3f192c34-fb54-4745-9d22-140bd1db2039",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "8ad03b9c-60b4-4da3-98e4-7054cdb3e164",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "961021d8-0569-43ca-b488-b18b89bfde51",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ec712d88-3cae-488a-a829-0bb678843b92",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "dc0a9a11-37b5-4a9f-9db6-c431da4c1fa0",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "f5510bd0-c1ff-45a7-bcae-45269fa50b44",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "314ac60d-894b-46be-af10-369951b4d698",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "afdd82ff-9941-4d7c-9035-17bd007dbfbd",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "5d7edcdd-4eff-45b4-9a05-ad45736d5c0d",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a ViT-small after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "2e5ad0d6-e79f-4512-bb94-88e69c051e4d",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "493683be-9cc0-41b5-aa2f-c9a6cec40e33",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4f5a5efc-bb7f-4c6d-881b-fa1f3dc2fcf2",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c35fd061-13ad-42bf-9d2f-254b417aa468",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "621b8e74-e301-4ec8-83d2-0e3e02cbdf34",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "1f9323f4-b3fb-4a22-905c-31b0e0739e1c",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d50b980a-143b-4867-b16f-20b6c1758a84",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e927811c-939c-49bd-8287-15677a171951",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "4a00328d-6535-4b78-b0d2-13d0e44ac382",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "abc316cd-f6be-461d-9c87-5435c00eb5b6",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "cb281b54-c77f-4965-b430-a977844cde85",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "77cf4b44-452a-4c45-8412-4ff4406a324d",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "d445abf3-5af9-48e3-912c-138ab91ff208",
                                            "requirements": "EL2N has been evaluated on the SVHM benchmark using a ViT-small after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "e7b50198-8a47-476c-a67f-66aaf372f1aa",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f504b203-69c8-4fb4-bbe4-6c7bcf328ea1",
                                                            "requirements": "EL2N has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "33c906a1-b004-482d-9c5d-961a6bb49d19",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "0c2017cc-5463-4ae8-93a9-3368e861c5ac",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2ee604b1-c348-45d3-ba98-78c1e11f1121",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "6a5dd2c2-a504-4c86-ae9c-bdcd48bf63df",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "53634e64-de17-4ad0-8b8c-2ba24bc87375",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "8a236880-c104-4378-93c5-5f12ab82cc0b",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "7eaecd22-0bb0-4b8d-85dd-d11ff41edf2d",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ce9fd142-fd0c-431d-ac1d-32527e129bcb",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "47e00313-636b-40fb-a5ca-1586965e7abd",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "b780dfae-c2c1-404c-b8a9-bb1346c632e4",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "24c66506-0e8b-4ceb-b26d-28201c600175",
                                            "requirements": "GraNd has been evaluated on the SVHM benchmark using a ViT-small after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "bb2d719f-81f2-44b4-b976-1604b5adb0b2",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "15339279-ece3-4bbb-bc3e-ed71d6da51e8",
                                                            "requirements": "GraNd has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "683a4c5b-3782-4397-83da-075ef81eeb67",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "3000e00e-3a39-424a-b2af-3ec70b6ff635",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "84db21e6-e77a-476f-89ff-02fd3d93e58e",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "ae339c2e-88b3-4ad6-a295-74b3753e1211",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "2cbb8498-5038-4191-bf79-55fe26d5e092",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "35b3ce48-a060-4d2a-bb14-a844e34e3537",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "023ab642-6324-471d-a7b7-99234619bef2",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "f39a7fe0-03c5-4b47-b366-bc6827ab964b",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "1e1033e9-2a2e-41d3-896f-e05bc1832582",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "7821fed1-bb86-44b9-8ae8-9e2b482e3bf5",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "28d762fc-2c48-43f0-bf85-89168b5c0ad6",
                                            "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "3e1689be-a3c0-4f56-bb2d-eb500f79b6c8",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "887261bd-9878-410d-b42e-e95dbd4780ce",
                                                            "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "3d75d9fb-88b1-4195-80bf-a82d1254eda5",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "f51ea453-aadd-41e2-8905-e02316e974b9",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "8226e421-848f-48a4-8740-c0dfbb458ad0",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "df62bc66-d762-45b0-8809-0ca295ba57e6",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "407ba4d4-89ee-478b-88af-1449466db8fb",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "00bec2bd-cfe3-47b0-b30a-d981638777ca",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9171e7b2-7e9c-4c53-9cde-1e73879177aa",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "00cc7857-f378-4395-a2b9-39e09585ced1",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "db4a838a-5d95-484f-a2db-5e793cd0e680",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "5f14fa97-1bca-415e-a6a7-34d551e99d45",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "e9f80776-659d-4d0c-8c6d-24d7176b4c13",
                                            "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "92b22565-3f6c-4d51-9882-040ae5298f56",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2aad894d-f614-4325-937c-71ecb02be3cc",
                                                            "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "4f7b3e46-47bc-4714-b7fb-fc6021a6158a",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c0149567-fed7-424d-9eac-f58f24932e37",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a8c081cc-b6be-46de-8217-ecc966286d57",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "1ab3f9f5-0fe1-4df8-a095-f79e232ef5c3",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "611c4979-94b0-4ae6-8818-53e70fdf5d2c",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "5154eb03-023f-4e98-b6fd-978d2d930070",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "0f2116c7-1c88-43f9-8e6d-18f4c5152c74",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "77509adf-522f-4255-8307-e911bfd434b8",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "2becc98f-7385-45da-9f0d-0036700a3c3e",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "07d02c05-fe9e-4651-8b9a-dc68ee2468ee",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "e7adb4a2-a3bc-4976-8d74-4fa6973c9692",
                                            "requirements": "CCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "e04285a1-1f7b-42da-bb7c-cb74481a7e77",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f94221e9-622f-44e1-83d4-118d806ab115",
                                                            "requirements": "CCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "cc221b9d-0ea7-44cf-bd9a-753415b21daf",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ef270645-8000-48f1-b0c0-1de28cbb7b81",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9865100a-05f2-4d4e-baf6-b3dd02c41dc3",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "19efa63e-63a8-4e7c-b2d0-102effe8a0cb",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "eb9185a2-b51b-43ee-a1e5-53588f4c1b1e",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "6e5dc902-14f8-4ee6-ae03-2b980b798501",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "8d6e7a81-c43e-4077-8e3d-837acb6ea8c8",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "f8dc56fb-73a4-4260-9538-a4705adf0830",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9edf04e4-c3c7-48ac-ad55-ef1c5e7db632",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "46317804-5f19-4e37-b4a5-dc40b35faddc",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "0c6f0b62-2fbe-4f0a-bf8b-25a81a00e24a",
                                            "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "8c1fec4c-0cd1-4355-90cd-b33245cfe4fa",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "b269c648-5975-47f7-82ca-c299b978c724",
                                                            "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "f271d0ca-9a3e-48b6-bd9f-e94c4ad5a3cb",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "2cce5838-a505-496a-9ef2-0f3271866f58",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "686a3c1d-1f14-422d-ad92-7ae021aaaa2b",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "639100a0-5d86-4e19-bf03-af9ed13f1805",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "e5957c23-2ac3-4dde-83a5-a26a9403096a",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "27c0ff56-8efc-4981-8d93-af3a0e577105",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "ca946417-90fe-48cc-9ad3-119d4525813f",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a ViT-small on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d3f29ff1-97a3-4305-9e2c-cdd6fce2d9a2",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a ViT-small after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "85e7ac35-92a7-4c08-b3d7-63e9ad94c654",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a ViT-small after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "eeb676bf-5ec4-4e02-b59e-6f35a08aee35",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the ViT-small trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "e2a3d11a-23ab-490d-bb3d-2e960d958822",
                                    "requirements": "LBCS and the 7 Baselines have been evaluated on the SVHM benchmark at various predefined coreset sizes using a WideResNet (W-NET) after coreset selection",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "51a4b0d4-485d-4c01-9fbb-429c43710fd1",
                                            "requirements": "LBCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "4e0f9f64-8acb-43b3-a62c-3c30e4272981",
                                                    "requirements": "Code has been implemented such that to evaluate LBCS on the SVHM benchmark at a given predefined coreset size using a WideResNet (W-NET) after coreset selection, the outer loop can run for 500 iterations (i.e. T=500)",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "187944a9-89db-4011-94f9-26c5ec834562",
                                                    "requirements": "Code has been implemented such that to evaluate LBCS on the SVHM benchmark at a given predefined coreset size using a WideResNet (W-NET) after coreset selection, the voluntary performance compromise can be set to $\\epsilon=0.2$",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "1c7399a9-e345-4163-b389-cc981985db4c",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "d87a61e3-f3d3-47ff-9343-b4b96da56112",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=1000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "0da37014-db30-4f62-9a6b-d973bdda082b",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "66cd949d-2954-48cd-aa45-ac07058ad78f",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "994bd16c-00e8-4672-9d0a-c8ad346d5094",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "2ab54b6f-ca63-44fb-bc11-75025498525d",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "8f5749c2-b4c8-4348-b9b9-fa813005f3fe",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "6548b549-5fcf-4f82-ac6b-728c327768fd",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "fbc659f0-13fa-46a6-820b-cc3a39d53d4f",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "d0191cfb-f74c-42fd-b27c-2c287d8a7056",
                                                    "requirements": "LBCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "52998e12-7645-4d82-9632-626d89716840",
                                                            "requirements": "Code has been implemented such that LBCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "03128495-e405-4d1c-b069-14aa4fc77f1f",
                                                            "requirements": "LBCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "4a6e18bc-c5e1-40b0-a55b-4beb9cd63bd8",
                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "8db6f281-466c-4693-bbf3-c1993b78c988",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9cfb83b0-d23e-4de7-8edb-91b4ca191de9",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "7db29f0b-bb4e-46a1-9acf-81045ebf7c44",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9423e82f-7a0d-4909-82dc-ed5c791dd191",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "4435987a-c13b-43ea-b52a-68d85f26a1fe",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "93720b12-464b-43f3-9ea5-591bf97b4f74",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "75a0e6ff-09c2-4260-8327-d9d52b887ea2",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "1fed0985-b628-4891-8b52-9a9c3b9af5f4",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "74a7b202-678a-4a2e-9ac2-41f43a43e613",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "c9b9db60-9f6d-4783-a5d9-b51fd5a6dc91",
                                                    "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "66aab0c5-f7fd-41c3-9a4b-f912a391d7e1",
                                                            "requirements": "Code has been implemented such that Uniform sampling coreset selection ('Uniform') can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "7a306cd3-8ead-409c-beb7-a62e816db9f3",
                                                            "requirements": "Uniform sampling coreset selection ('Uniform') has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "de59b0dd-551a-4bfa-85bc-4b8632f89c74",
                                            "requirements": "EL2N has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "85590fd3-5df1-40fc-b94d-2c84b87e8a36",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "8c0bbba2-cc84-445f-8832-b1929ac2c00a",
                                                            "requirements": "EL2N has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "08173690-ca0b-47bf-a9a7-8ee1ab92231c",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "79a04e0b-a33c-4443-aeb0-4aff1cff9420",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "eff46c1c-69ec-4ac3-a730-0ea0e1b6497e",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "e01f23a7-f8c8-455f-8a5b-67b4c95d95b1",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "98bfc7d8-f88f-41eb-8277-ae715edb9c41",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "719b5dc5-512f-42b6-b6b8-259c21a0f12d",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a2bf273c-1299-45ae-94d9-6d22b89aaf4c",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "ffb6cb9e-d719-425f-b8d4-04f24929a809",
                                                    "requirements": "EL2N has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "866a4613-586e-4ce6-bb7d-a1c7e99c986d",
                                                            "requirements": "Code has been implemented such that EL2N can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "aec0ab30-8253-468b-9991-d1e382a601f0",
                                                            "requirements": "EL2N has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "340f05a8-fb56-4ec1-82e9-0b1907a1ebf1",
                                            "requirements": "GraNd has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "15d827fc-a2b1-4459-b5ea-cf7c3ffda4f7",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "856f5198-7b5d-4689-bdca-79696dda6c30",
                                                            "requirements": "GraNd has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "38600193-fcfa-4c9e-81ca-286c9adcb1c9",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9841133d-402f-457f-b44e-f46eb6d955bd",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "770cc40f-892a-4161-9c88-1b85a7f04fe2",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "23f1ed75-d9a2-47df-a4d0-a3f90c9716f2",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "0e4e35f3-b74f-495c-b533-b7a7ea07037b",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "75111a91-8741-4ba1-a9d7-67eacb24850e",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "08f579ce-1091-4bb4-8b25-37a6b9e7e8ee",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "3c055705-ac4c-47e6-bc0b-1d638f601896",
                                                    "requirements": "GraNd has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "9e8b9c7b-c911-4837-b3ca-8ff05f8faa28",
                                                            "requirements": "Code has been implemented such that GraNd can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "27ce5067-768c-49ce-bf68-a7fda473ddc9",
                                                            "requirements": "GraNd has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "7f65060d-ef6e-4719-96a3-c525b2b838b6",
                                            "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "e8dcb47b-9a07-4cce-90fa-eff9d564cf60",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "da6c61f5-a220-4bbd-930f-55669021ecea",
                                                            "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "3aa52714-51ae-4cb0-897b-67dddb793670",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "1df51206-62b0-45a1-b180-37080e084122",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ad02f78f-563a-496f-af7f-bb2928294a0f",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "02543486-a36d-488c-b97b-a4ece9aa57e1",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "8e25fcd8-c90f-47f0-bcce-599205ce554e",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "83a59a74-8add-4b82-9d02-774c929764d7",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "440022c4-9cfa-4a6d-8a2b-3468800faa58",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "e977ab32-ce44-4e6e-9bbc-3530e2ae217a",
                                                    "requirements": "Influential coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "196adc5d-0ee7-469b-bb19-070f91bc02a4",
                                                            "requirements": "Code has been implemented such that Influential coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "ea692f08-05cf-4c6c-91e3-b948b33e940d",
                                                            "requirements": "Influential coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "13c5abf7-18df-43b8-9d45-638391557eb1",
                                            "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "e846d387-83bf-42b6-9f71-159ec6829dd9",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "53d4e311-a415-421e-96dc-b96767b9d155",
                                                            "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "faa71e91-4535-4573-a19e-71c1ae6fcc81",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "2e832188-2bd2-41e0-b84c-5c32aa89546d",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "71adba71-c3ea-4561-b5a8-49f8ba1fb638",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "b2c8a304-7d1e-4d60-9958-12ec06d7c003",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "9f8ce9fa-c169-4d9a-b066-86d29202c651",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "a5145277-aa76-432a-b75e-0e75dcae1ef3",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "49336672-f24e-46f0-972c-766285803548",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "911aaa0d-bd92-4308-9c5c-18de43c805d5",
                                                    "requirements": "Moderate coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "eb2db30a-cd6f-46a9-8884-4ee5f00818dd",
                                                            "requirements": "Code has been implemented such that Moderate coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "8d6cedc1-8471-46e4-96bf-29d300d39247",
                                                            "requirements": "Moderate coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "38d32153-0cb3-4594-ac2e-063f570e0045",
                                            "requirements": "CCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "70ee0c2d-052d-4641-ae36-364d856c44be",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f54b6601-7951-4141-b5e1-01677df52fbc",
                                                            "requirements": "CCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "60a50f6c-1a59-427b-8a06-1f379ff1fe26",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b5e8dcc6-bfa5-4728-9d0f-b01bc7aa5e99",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "f0de89ab-89a8-4032-8f93-cb4c854a6951",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Experimental Setup"
                                                        },
                                                        {
                                                            "id": "988b0836-9eda-4b8a-886b-e519a6c490cc",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "e3eef60f-4d00-4d2f-975d-143f33db2f66",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "24959bd4-fe35-42c6-ad2d-5f7c42ecce19",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "6a2e65d1-3624-41ec-a3e5-d09652babfac",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "b20d659f-3911-4db6-b1c9-d6b4820ebe74",
                                                    "requirements": "CCS has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "991de362-e1ab-47f9-98b4-e7c418fef81e",
                                                            "requirements": "Code has been implemented such that CCS can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a634d65b-9853-44d1-ad83-c6bde500f6e4",
                                                            "requirements": "CCS has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "d7b5c211-5c9b-484f-9480-dab6f45e172c",
                                            "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection at various predefined coreset sizes",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "52e70b91-6496-4383-8cf0-2fc965abc618",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e4ffb484-4673-42dc-9f22-6f20919f77fc",
                                                            "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=1000",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "9859684c-16d6-4025-bdfd-40b4819fea7c",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=1000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "df390a00-5e1f-4bbb-817d-a69b5604b315",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=2000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "ee9ebde6-03e4-41a1-92f8-76e94f3046f9",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=2000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "13f4ef00-4b55-4852-9bc3-4a905ac9bd4f",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=2000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "47844eec-c815-42f0-9e67-271eb720af7f",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=3000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "13460f4b-622e-4542-974f-2e8fb18dd60f",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=3000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "a0ae5f01-c835-4ebc-b868-8e877318aeee",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=3000 for constructing the optimal coreset for training a WideResNet (W-NET) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "cf5346c5-774a-438d-b178-4f218013e6de",
                                                    "requirements": "Probabilistic coreset has been evaluated on the SVHM benchmark using a WideResNet (W-NET) after coreset selection with a predefined coreset size of k=4000",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "e06b61c0-0651-47b4-a514-7c2da16405bc",
                                                            "requirements": "Code has been implemented such that Probabilistic coreset can be evaluated for coreset selection on the SVHM benchmark with a predefined coreset size of k=4000, using a WideResNet (W-NET) after coreset selection",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Development",
                                                            "finegrained_task_category": "Method Implementation"
                                                        },
                                                        {
                                                            "id": "2e6c0a7f-4f64-4069-bb4c-d82022e778f9",
                                                            "requirements": "Probabilistic coreset has been evaluated with a predefined coreset size of k=4000 for constructing the optimal coreset for training a CNN (Table 7, center column) on SVHM. The CNN from Table 7, left column was used as the proxy model during coreset selection. The test accuracy of the WideResNet (W-NET) trained on the constructed coreset on the SVHM test set has been recorded.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "86e03fa2-da88-4776-919a-482ecf0a1f60",
                            "requirements": "The results of Table 6 have been reproduced",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "92c3bf8d-59e4-462c-a2b4-6e42fcc3ec84",
                                    "requirements": "The measured test set accuracy on the SVHN test-set achieved by the ViT trained on the coresets selected by the various coreset selection methods shows that across all methods and all predefined coreset sizes, training on the coreset selected by LBCS always achieves the highest test set accuracy on the SVHN test-set",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "069c26fe-8b36-475d-9b49-e8dcee725a04",
                                    "requirements": "The measured test set accuracy on the SVHN test-set achieved by the W-NET trained on the coresets selected by the various coreset selection methods shows that training on the coreset selected by LBCS achieves the highest test set accuracy most of the time, and when it doesn't the test set accuracy achieved via the LBCS-selected coreset remains competitive with (i.e. there is an overlap in values when considering the standard deviations over at least 10 repeats) the best performing coreset selection method",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        }
    ],
    "task_category": null,
    "finegrained_task_category": null
}