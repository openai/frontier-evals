{
    "id": "root",
    "requirements": "The BBOX-ADAPTER approach for adapting black-box LLMs has been reproduced completely.",
    "weight": 1,
    "sub_tasks": [
        {
            "id": "core-implementation",
            "requirements": "Algorithm 1 (Online Adaptation) has been implemented correctly.",
            "weight": 3,
            "sub_tasks": [
                {
                    "id": "model-components",
                    "requirements": "The core model components required for Algorithm 1 have been implemented.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "energy-based-model",
                            "requirements": "The joint model parameterization $p_{\\theta}(y|x) = \\exp(g_{\\theta}(s_{1:L},x))\\prod_l p_{LLM}(s_l|x,s_{1:l-1})$ has been implemented with the correct adapter architecture as described in Section 3.3.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "adapter-backbone",
                                    "requirements": "The adapter backbone models have been implemented as specified in Appendix H.2.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "deberta-base-tasks",
                                            "requirements": "The deberta-v3-base (0.1B) model has been implemented for StrategyQA, GSM8K, and ScienceQA tasks.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "deberta-base-strategyqa",
                                                    "requirements": "The deberta-v3-base model has been implemented for StrategyQA with the hyperparameters specified in Appendix H.2.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "deberta-base-gsm8k",
                                                    "requirements": "The deberta-v3-base model has been implemented for GSM8K with the hyperparameters specified in Appendix H.2.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "deberta-base-scienceqa",
                                                    "requirements": "The deberta-v3-base model has been implemented for ScienceQA with the hyperparameters specified in Appendix H.2.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "deberta-large-tasks",
                                            "requirements": "The deberta-v3-large (0.3B) model has been implemented for StrategyQA, GSM8K, and ScienceQA tasks.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "deberta-large-strategyqa",
                                                    "requirements": "The deberta-v3-large model has been implemented for StrategyQA with the hyperparameters specified in Appendix H.2.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "deberta-large-gsm8k",
                                                    "requirements": "The deberta-v3-large model has been implemented for GSM8K with the hyperparameters specified in Appendix H.2.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                },
                                                {
                                                    "id": "deberta-large-scienceqa",
                                                    "requirements": "The deberta-v3-large model has been implemented for ScienceQA with the hyperparameters specified in Appendix H.2.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Experimental Setup"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "bert-base-tasks",
                                            "requirements": "The bert-base-cased (110M) model has been implemented for TruthfulQA with the hyperparameters specified in Appendix H.2.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "adapter-inputs",
                                    "requirements": "The adapter accepts input text pairs (x,y) and processes them through the DeBERTa encoder.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "adapter-outputs",
                                    "requirements": "The adapter outputs a scalar score $g_{\\theta}(x,y)$ representing the energy value for the input pair.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "nce-loss",
                            "requirements": "The adapter training loss from Equation 3 has been implemented with spectral normalization and training process from Section 3.2.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "loss-components",
                                    "requirements": "The NCE loss components have been implemented.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "positive-terms",
                                            "requirements": "The positive sample terms $-\\mathbb{E}_{y^+ \\sim p_{data}(y|x)}[g_\\theta(x,y^+)] + \\alpha\\mathbb{E}[g_\\theta(x,y^+)^2]$ have been implemented.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "negative-terms",
                                            "requirements": "The negative sample terms $\\mathbb{E}_{y^- \\sim p_\\theta(y|x)}[g_\\theta(x,y^-)] + \\alpha\\mathbb{E}[g_\\theta(x,y^-)^2]$ have been implemented.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "training-implementation",
                                    "requirements": "The training process components have been implemented.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "adapter-training-execution",
                                            "requirements": "The adapter has been trained using the NCE loss and spectral normalization for the specified number of steps.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Execution",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "loss-computation",
                                            "requirements": "The NCE loss has been implemented according to Equation (3) in the paper, which includes: $\\nabla_{\\theta}\\ell(\\theta) = \\nabla_{\\theta}\\{-\\mathbb{E}_{y+\\sim p_{data}(y|x)}[g_{\\theta}(x,y+)] + \\alpha\\mathbb{E}[g_{\\theta}(x,y+)^2] + \\mathbb{E}_{y-\\sim p_{\\theta}(y|x)}[g_{\\theta}(x,y-)] + \\alpha\\mathbb{E}[g_{\\theta}(x,y-)^2]\\}$, incorporating both positive and negative sample terms with regularization.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "gradient-updates",
                                            "requirements": "The gradient updates $\\nabla_{\\theta} \\mathcal{L}_{NCE}$ have been implemented with $\\eta=5e-6$ as specified in Appendix H.2.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "spectral-normalization",
                                            "requirements": "Spectral normalization has been applied to the energy model $g_{\\theta}$ to increase gradient stability.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "beam-search",
                            "requirements": "The adapted inference mechanism using beam search has been implemented, combining the black-box LLM's proposal with adapter scoring.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "sentence-level-factorization",
                                    "requirements": "The sentence-level factorization of the adapted inference process has been implemented.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "sequence-decomposition",
                                            "requirements": "The decomposition of complete solution $y$ into sentence-level sequences $[s_1, s_2, ..., s_L]$ has been implemented.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "autoregressive-scoring",
                                            "requirements": "The autoregressive scoring of sequences using both LLM probabilities and adapter scores has been implemented.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "beam-management",
                                    "requirements": "The beam management system for tracking and updating candidate solutions has been implemented.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "candidate-generation",
                                            "requirements": "The generation of $M$ samples per beam at each step $l$ based on $p_{LLM}(s_l|x,s_{1:l-1})$ has been implemented.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "beam-scoring",
                                            "requirements": "The scoring of $nk$ candidate chains using the adapter $g_\\theta(s_{1:l},x)$ has been implemented.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "beam-pruning",
                                            "requirements": "The selection of top-k beams based on adapter scores has been implemented.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "stopping-criteria",
                                    "requirements": "The stopping criteria and final selection process have been implemented.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "termination-check",
                                            "requirements": "The checking for either reaching $L$ iterations or encountering stop signals has been implemented.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "final-selection",
                                            "requirements": "The selection of the highest-scoring complete solution from the $k$ final candidates has been implemented.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "adapter-variants",
                            "requirements": "Both single-step and full-step variants of the adapter have been implemented.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "single-step-implementation",
                                    "requirements": "The single-step adapter variant has been implemented.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "single-step-generation",
                                            "requirements": "The base model generates a set of complete answers in a single step.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "single-step-selection",
                                            "requirements": "The adapter selects the best answer from the candidates as the final response.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "full-step-implementation",
                                    "requirements": "The full-step adapter variant with beam search has been implemented.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "full-step-generation",
                                            "requirements": "The base model generates multiple solution paths using beam search.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "full-step-selection",
                                            "requirements": "The adapter scores and selects the top-$k$ paths at each step, maintaining a beam size of $k=3$ by default as specified in the paper.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "base-llm",
                            "requirements": "The base LLM (either GPT-3.5 Turbo or Mixtral-8x7B) has been integrated as a black-box model.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "llm-generation",
                                    "requirements": "The LLM can generate text completions given input prompts.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "prompt-handling",
                                            "requirements": "Code has been written to properly format and send prompts to the LLM API.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "completion-handling",
                                            "requirements": "Code has been written to parse completion responses from the LLM API.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "generation-params",
                                    "requirements": "The LLM generation parameters have been configured correctly.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "temperature-setting",
                                            "requirements": "The temperature is set to 1.0 for generation as specified in Appendix H.2.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "max-length-setting",
                                            "requirements": "The maximum generation length is set to 512 as specified in Appendix H.2.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "adapter-integration",
                                    "requirements": "The LLM outputs can be used as proposals in the adapter framework.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "proposal-generation",
                                            "requirements": "Code has been written such that the LLM can generate candidate proposals for the adapter to score.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "black-box-usage",
                                            "requirements": "Code has been written such that the LLM is treated as a black box without accessing internal parameters or probabilities.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "online-adaptation-algorithm",
                    "requirements": "Algorithm 1 (Online Adaptation) has been implemented correctly.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "initialization",
                            "requirements": "The initialization steps of Algorithm 1 have been implemented.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "random-init",
                                    "requirements": "Random initialization of adapter parameters $\\theta_0$ has been implemented.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "initial-sampling",
                                    "requirements": "Initial sampling of $K$ responses for each input query has been implemented: ${y_{i,j}}^K_{j=1} \\sim p_{LLM}(y|x_i)$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "initial-selection",
                                    "requirements": "Initial positive/negative sample selection has been implemented with the appropriate method based on data availability.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "ground-truth-selection",
                                            "requirements": "When ground truth data is available, positive samples are taken from ground truth solutions while negative samples are generated using an adapter with random parameters.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        },
                                        {
                                            "id": "ai-feedback-selection",
                                            "requirements": "When ground truth data is unavailable, positive samples are selected based on AI feedback (using GPT-4) from generated candidates, while remaining candidates serve as negative samples.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "adaptation-loop",
                            "requirements": "The main adaptation loop from Algorithm 1 has been implemented.",
                            "weight": 2,
                            "sub_tasks": [
                                {
                                    "id": "eq4-implementation",
                                    "requirements": "Sampling $M$ candidates from adapted inference has been implemented as described in Equation 4 i.e., ${\\hat{y}_{i,m}}^M_{m=1} \\sim p_{\\theta_t}(y|x_i)$",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "eq5-implementation",
                                    "requirements": "The update of positive samples has been implemented as described in Equation 5 i.e., $y^{(t)}_{i+} = \\text{SEL}(y^{(t-1)}_{i+}, {\\hat{y}_{i,m}}^M_{m=1})$",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "eq6-implementation",
                                    "requirements": "The update of negative samples has been implemented as described in Equation 6 i.e., $y^{(t)}_{i-} = {\\hat{y}_{i,m} | \\hat{y}_{i,m} \\neq y^{(t)}_{i+}}^M_{m=1}$",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "eq3-implementation",
                                    "requirements": "The computation of the loss gradient has been implemented as described in Equation 3 i.e., $\\nabla_\\theta \\ell(\\theta_t)$ using $y^{(t)}_{i+}$ and $y^{(t)}_{i-}$",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                },
                                {
                                    "id": "eq7-implementation",
                                    "requirements": "The parameter update has been implemented as described in Equation 7 i.e., $\\theta_{t+1} = \\theta_t - \\eta \\nabla_\\theta \\ell(\\theta_t)$",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Method Implementation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "evaluation-setup",
            "requirements": "The evaluation environments and datasets have been set up for GPT-3.5 Turbo and Mixtral-8x7B.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "dataset-preparation",
                    "requirements": "The evaluation datasets have been prepared, including train/test splits and data preprocessing.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "gsm8k-setup",
                            "requirements": "The GSM8K dataset has been downloaded and split into train and test splits, as described in Appendix F.1.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "gsm8k-download-code",
                                    "requirements": "Code has been written to download the GSM8K questions and step-by-step solutions.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Dataset and Model Acquisition"
                                },
                                {
                                    "id": "gsm8k-download-exec",
                                    "requirements": "The GSM8K questions and step-by-step solutions have been downloaded.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Dataset and Model Acquisition"
                                },
                                {
                                    "id": "gsm8k-split-code",
                                    "requirements": "Code has been written to split the GSM8K dataset into 7473 training and 1319 test samples.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "gsm8k-split-exec",
                                    "requirements": "The GSM8K dataset has been split into 7473 training and 1319 test samples.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "strategyqa-setup",
                            "requirements": "The StrategyQA dataset has been downloaded and split into train and test splits, as described in Appendix F.1.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "strategyqa-download-code",
                                    "requirements": "Code has been written to download the StrategyQA questions and reasoning steps.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Dataset and Model Acquisition"
                                },
                                {
                                    "id": "strategyqa-download-exec",
                                    "requirements": "The StrategyQA questions and reasoning steps have been downloaded.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Dataset and Model Acquisition"
                                },
                                {
                                    "id": "strategyqa-split-code",
                                    "requirements": "Code has been written to split the StrategyQA dataset into 2059 training and 229 test samples.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "strategyqa-split-exec",
                                    "requirements": "The StrategyQA dataset has been split into 2059 training and 229 test samples.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "truthfulqa-setup",
                            "requirements": "The TruthfulQA dataset has been downloaded and split into train and test splits, as described in Appendix F.1.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "truthfulqa-download-code",
                                    "requirements": "Code has been written to download the TruthfulQA questions.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Dataset and Model Acquisition"
                                },
                                {
                                    "id": "truthfulqa-download-exec",
                                    "requirements": "The TruthfulQA questions have been downloaded.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Dataset and Model Acquisition"
                                },
                                {
                                    "id": "truthfulqa-split-code",
                                    "requirements": "Code has been written to randomly sample 100 questions for the test set and use the remaining 717 samples for training.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "truthfulqa-split-exec",
                                    "requirements": "The TruthfulQA dataset has been split into 717 training and 100 test samples.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "scienceqa-setup",
                            "requirements": "The ScienceQA dataset has been downloaded and split into train and test splits, as described in Appendix F.1.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "scienceqa-download-code",
                                    "requirements": "Code has been written to download the non-image ScienceQA questions.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Dataset and Model Acquisition"
                                },
                                {
                                    "id": "scienceqa-download-exec",
                                    "requirements": "The non-image ScienceQA questions have been downloaded.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Dataset and Model Acquisition"
                                },
                                {
                                    "id": "scienceqa-split-code",
                                    "requirements": "Code has been written to randomly select 2000 questions for training and 500 for testing from the original splits.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "scienceqa-split-exec",
                                    "requirements": "The ScienceQA dataset has been split into 2000 training and 500 test samples.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "base-model-setup",
                    "requirements": "The base models have been set up for evaluation with correct configurations, as specified in Appendix H.2.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "gpt-setup",
                            "requirements": "The GPT-3.5 Turbo model has been set up for evaluation with the correct configurations.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "azure-api-setup",
                                    "requirements": "API access has been set up for text generation using GPT-3.5 Turbo, supporting the following features: (1) prompt-based text generation, (2) adjustable sampling temperature, and (3) control over maximum output length.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Environment & Infrastructure Setup"
                                },
                                {
                                    "id": "gpt-generation-params",
                                    "requirements": "The model is configured with temperature 1.0 and a maximum length of 512 tokens for generation.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "gpt-finetune-params",
                                    "requirements": "The fine-tuning hyperparameters have been configured with number of epochs set to 5.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "mixtral-setup",
                            "requirements": "The Mixtral-8x7B model has been set up for evaluation with correct configurations.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "mixtral-model-loading",
                                    "requirements": "The mixtral-8x7B-v0.1 model has been loaded from HuggingFace in half-precision.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Dataset and Model Acquisition"
                                },
                                {
                                    "id": "mixtral-generation-params",
                                    "requirements": "The model is configured with temperature 1.0 and a maximum length of 512 tokens for generation.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "adapter-model-setup",
                    "requirements": "The adapter backend models have been set up with correct configurations.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "deberta-setup",
                            "requirements": "The DeBERTa models have been set up to be evaluated on the StrategyQA, GSM8K, and ScienceQA datasets.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "deberta-base-setup",
                                    "requirements": "The deberta-v3-base model has been properly loaded and configured.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "model-loading",
                                            "requirements": "Code has been written to load and initialize the deberta-v3-base model (86M) with correct model weights.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "classification-head",
                                            "requirements": "The final layer has been modified to a classification head with an output dimension of 1 to ensure the adapter outputs a scalar score value.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "deberta-large-setup",
                                    "requirements": "The deberta-v3-large model has been properly loaded and configured.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "model-loading-large",
                                            "requirements": "Code has been written to load and initialize the deberta-v3-large model (304M) with correct model weights.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "classification-head-large",
                                            "requirements": "The final layer has been modified to a classification head with an output dimension of 1 to ensure the adapter outputs a scalar score value.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "bert-setup",
                            "requirements": "The bert-base-cased model has been set up to be evaluated on TruthfulQA.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "bert-model-loading",
                                    "requirements": "The bert-base-cased model has been properly loaded and configured.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "model-loading-bert",
                                            "requirements": "Code has been written to load the weights of the bert-base-cased (110M) model.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Dataset and Model Acquisition"
                                        },
                                        {
                                            "id": "classification-head-bert",
                                            "requirements": "The final layer has been modified to a classification head with an output dimension of 1 to ensure the adapter outputs a scalar score value.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Method Implementation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "bert-inference-check",
                                    "requirements": "Code has been written to query the model on TruthfulQA samples.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "training-config",
                            "requirements": "The training loop for the adapter modules has been implemented.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "optimizer-setup",
                                    "requirements": "The AdamW optimizer has been configured with learning rate 5e-6 and weight decay 0.01.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "batch-config",
                                    "requirements": "The training loop has been implemented to process data in batches of size 64 and run for 6000 training steps as specified in Appendix H.2.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "baseline-impl",
            "requirements": "The baseline models have been implemented and/or configured for evaluations.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "d88d22d8-e5cc-4248-bbe7-cddb35005c17",
                    "requirements": "The Chain-of-Thought using GPT-3.5 Turbo baseline has been implemented.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "ab87b0ff-7caf-4678-89f5-8341600cebe9",
                            "requirements": "The two-shot prompt for StrategyQA has been implemented as specified in Appendix J.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "d865c8bb-b7e2-4908-94cf-d1f854319112",
                            "requirements": "The four-shot prompt from Chain-of-Thought Hub has been implemented for GSM8K, as specified in Appendix J.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "86dd3099-e471-46fc-bd98-b49e899ba498",
                            "requirements": "The one-shot prompt for ScienceQA has been implemented as specified in Appendix J.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "azure-sft-impl",
                    "requirements": "The Azure-SFT baseline using OpenAI fine-tuning service has been implemented.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "azure-sft-setup",
                            "requirements": "The Azure OpenAI fine-tuning service has been set up.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "data-formatting",
                                    "requirements": "The training data has been formatted according to Azure fine-tuning API requirements.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Data Processing & Preparation"
                                },
                                {
                                    "id": "hyperparameter-config",
                                    "requirements": "The fine-tuning hyperparameters (epochs=3, batch size and learning rate as Azure OpenAI service default values) have been configured.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "azure-sft-training",
                            "requirements": "The fine-tuning process has been executed using Azure service.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "azure-sft-implementation",
                                    "requirements": "Code has been written to execute fine-tuning jobs through the Azure OpenAI API.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "azure-sft-execution",
                                    "requirements": "The fine-tuning jobs have been executed successfully for all tasks.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "training-monitoring",
                                    "requirements": "The training loss curves have been saved during Azure-SFT fine-tuning.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "loss-tracking-implementation",
                                            "requirements": "Code has been written to save the training loss curves during Azure-SFT fine-tuning for the StrategyQA, TruthfulQA, and ScienceQA datasets.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "7e2f154e-02a3-43a6-bf8e-2bfb5cc3711e",
                                                    "requirements": "Code has been implemented to compute and save the training loss curves for the StrategyQA fine-tuning process, following the specifications in Appendix H.2.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "357edc2c-417b-49ff-b3fd-59af7134f147",
                                                    "requirements": "Code has been implemented to compute and save the training loss curves for the TruthfulQA fine-tuning process, following the specifications in Appendix H.2.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "c4d72598-0892-4d1a-98a7-9fa92fe0fbd7",
                                                    "requirements": "Code has been implemented to compute and save the training loss curves for the ScienceQA fine-tuning process, following the specifications in Appendix H.2.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "loss-tracking-execution",
                                            "requirements": "The training loss curves have been generated and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "strategyqa-loss-curves",
                                                    "requirements": "Training loss curves have been saved for StrategyQA fine-tuning.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "truthfulqa-loss-curves",
                                                    "requirements": "Training loss curves have been saved for TruthfulQA fine-tuning.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "scienceqa-loss-curves",
                                                    "requirements": "Training loss curves have been saved for ScienceQA fine-tuning.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "lora-ft-mix",
                    "requirements": "The LoRA fine-tuning baseline for Mixtral-8x7B has been implemented",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "lora-setup",
                            "requirements": "The LoRA fine-tuning setup has been implemented.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "lora-config",
                                    "requirements": "The LoRA hyperparameters have been configured correctly.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "lora-rank-small",
                                            "requirements": "The rank parameter $r$ has been set to 128 for the 0.1B adapter comparison.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "lora-rank-large",
                                            "requirements": "The rank parameter $r$ has been set to 384 for the 0.3B adapter comparison.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "lora-alpha",
                                            "requirements": "The scaling parameter $\\alpha$ has been set to $2r$ (256 and 768 respectively) for both adapter versions.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "training-setup",
                                    "requirements": "The training hyperparameters have been configured correctly.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "learning-rate",
                                            "requirements": "The learning rate has been set to 2e-4.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "weight-decay",
                                            "requirements": "The weight decay has been set to 0.001.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "batch-size",
                                            "requirements": "The batch size per GPU has been set to 8.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        },
                                        {
                                            "id": "other-params",
                                            "requirements": "The remaining parameters have been configured: LoRA dropout is set to 0.1, number of epochs is set to 3, maximum gradient norm is set to 0.3, optimizer is set to Paged AdamW 32bit, and scheduler is set to Cosine.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Experimental Setup"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "lora-training",
                            "requirements": "The LoRA fine-tuning process has been executed.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "lora-training-implementation",
                                    "requirements": "Code has been written to fine-tune Mixtral-8x7B using LoRA adaptation. The hyperparameters used for fine-tuning, listed in Table 8, include a LoRA dropout of 0.1, 3 epochs, a learning rate of 2e-4, weight decay of 0.001, and a batch size of 8 per GPU.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "lora-training-execution",
                                    "requirements": "Mixtral-8x7B using LoRA adaptation has been fine-tuned for 3 epochs.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "gradient-clipping",
                                    "requirements": "Gradient clipping with max norm 0.3 has been implemented.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "baseline-comparison",
            "requirements": "Table 2 has been reproduced.",
            "weight": 2,
            "sub_tasks": [
                {
                    "id": "cot-evaluation",
                    "requirements": "The GPT-3.5 Turbo with Chain-of-Thought baseline has been evaluated.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "cot-execution",
                            "requirements": "The Chain-of-Thought baseline has been evaluated on the test splits of all datasets using GPT-3.5 Turbo.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "cot-performance-calculation",
                            "requirements": "The metrics for the base GPT-3.5 Turbo model have been calculated on all datasets (StrategyQA, GSM, TruthfulQA, ScienceQA).",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "cot-strategyqa-accuracy",
                                    "requirements": "The accuracy of the base GPT-3.5 Turbo model on the StrategyQA dataset has been calculated.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "cot-gsm8k-accuracy",
                                    "requirements": "The accuracy of the base GPT-3.5 Turbo model on the GSM8K dataset has been calculated.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "cot-truthfulqa-accuracy",
                                    "requirements": "The True+Info metric of the base GPT-3.5 Turbo model on the TruthfulQA dataset has been calculated.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "cot-scienceqa-accuracy",
                                    "requirements": "The accuracy of the base GPT-3.5 Turbo model on the ScienceQA dataset has been calculated.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "azure-sft-eval",
                    "requirements": "The GPT-3.5 Turbo model, fine-tuned using Azure-SFT, has been evaluated.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "sft-execution",
                            "requirements": "The Azure-SFT fine-tuned model has been evaluated on the test splits of all datasets.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "2c90777a-b539-4e37-8108-b7a62a741a9e",
                                    "requirements": "The Azure-SFT fine-tuned model has been evaluated on the StrategyQA test split.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "c6f6c8d9-e975-4cad-91df-08df536f0d0a",
                                    "requirements": "The Azure-SFT fine-tuned model has been evaluated on the GSM8K test split.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "9a21233a-43e3-4bee-ae5f-11cea32568f6",
                                    "requirements": "The Azure-SFT fine-tuned model has been evaluated on the TruthfulQA test split.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "02f77608-6c71-4e6a-aeb3-82f7017eaf00",
                                    "requirements": "The Azure-SFT fine-tuned model has been evaluated on the ScienceQA test split.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "sft-performance-calculation",
                            "requirements": "The metrics for Azure-SFT and base model have been calculated on all datasets (StrategyQA, GSM8K, TruthfulQA, and ScienceQA).",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "sft-strategyqa-calculation",
                                    "requirements": "The accuracy metrics for Azure-SFT and base model have been calculated on StrategyQA dataset.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "sft-gsm8k-calculation",
                                    "requirements": "The accuracy metrics for Azure-SFT and base model have been calculated on GSM8K dataset.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "sft-truthfulqa-calculation",
                                    "requirements": "The True + Info metrics for Azure-SFT and base model have been calculated on TruthfulQA dataset.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "sft-scienceqa-calculation",
                                    "requirements": "The accuracy metrics for Azure-SFT and base model have been calculated on ScienceQA dataset.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "adapter-training",
                    "requirements": "Task-specific adapters have been trained, with separate adapters initialized and trained for each task as described in the paper.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "small-adapter-training",
                            "requirements": "Task-specific 0.1B adapters have been trained separately for each dataset.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "strategyqa-small-adapter",
                                    "requirements": "The training process for a dedicated 0.1B adapter on the StrategyQA dataset has been executed.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "gsm8k-small-adapter",
                                    "requirements": "The training process for a dedicated 0.1B adapter on the GSM8K dataset has been executed.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "truthfulqa-small-adapter",
                                    "requirements": "The training process for a dedicated 0.1B adapter on the TruthfulQA dataset has been executed.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "scienceqa-small-adapter",
                                    "requirements": "The training process for a dedicated 0.1B adapter on the ScienceQA dataset has been executed.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "large-adapter-training",
                            "requirements": "Task-specific 0.3B adapters have been trained separately for each dataset.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "strategyqa-large-adapter",
                                    "requirements": "The training process for a dedicated 0.3B adapter on the StrategyQA dataset has been executed.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "gsm8k-large-adapter",
                                    "requirements": "The training process for a dedicated 0.3B adapter on the GSM8K dataset has been executed.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "truthfulqa-large-adapter",
                                    "requirements": "The training process for a dedicated 0.3B adapter on the TruthfulQA dataset has been executed.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "scienceqa-large-adapter",
                                    "requirements": "The training process for a dedicated 0.3B adapter on the ScienceQA dataset has been executed.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "best-performer-selection",
                            "requirements": "The best performing adapter size has been selected for each dataset based on validation performance.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "performance-comparison-code",
                                    "requirements": "Code has been written to compare adapter sizes and select the best performer.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "performance-comparison-exec",
                                    "requirements": "The performance comparison has been run and best performers selected.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "bbox-gt-eval",
                    "requirements": "BBox-Adapter (Ground-Truth) has been evaluated.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "gt-adapter-training",
                            "requirements": "The adapter has been trained using ground truth data.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "gt-evaluation",
                            "requirements": "The ground truth adapter has been evaluated on the test splits of all datasets.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "gt-metrics",
                            "requirements": "The performance metrics have been computed for StrategyQA, GSM8K, ScienceQA, and TruthfulQA.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "gt-acc-sqa",
                                    "requirements": "The accuracy has been computed for StrategyQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "gt-acc-gsm8k",
                                    "requirements": "The accuracy has been computed for GSM8K.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "gt-acc-scienceqa",
                                    "requirements": "The accuracy has been computed for ScienceQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "gt-acc-truthfulqa",
                                    "requirements": "The True+Info metric has been computed for TruthfulQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "bbox-ai-eval",
                    "requirements": "BBox-Adapter (AI Feedback) has been evaluated.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "ai-adapter-training",
                            "requirements": "The adapter has been trained using AI feedback.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "ai-evaluation",
                            "requirements": "The AI feedback adapter has been evaluated on the test splits of all datasets.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "ai-metrics",
                            "requirements": "The metrics have been computed for StrategyQA, GSM8K, TruthfulQA, and ScienceQA.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "gt-acc-strategyqa",
                                    "requirements": "The accuracy has been computed for StrategyQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "gt-acc-gsm8k",
                                    "requirements": "The accuracy has been computed for GSM8K.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "gt-acc-truthfulqa",
                                    "requirements": "The True+Info metric has been computed for TruthfulQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "gt-acc-scienceqa",
                                    "requirements": "The accuracy has been computed for ScienceQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "bbox-combined-eval",
                    "requirements": "BBox-Adapter (Combined) has been evaluated.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "combined-adapter-training",
                            "requirements": "The adapter has been trained using combined feedback.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "combined-evaluation",
                            "requirements": "The combined feedback adapter has been evaluated on the test splits of all datasets.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Execution",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "combined-metrics",
                            "requirements": "The performance metrics have been computed for StrategyQA, TruthfulQA, GSM8K, and ScienceQA.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "combined-strategyqa",
                                    "requirements": "The True+Info metric has been computed for StrategyQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "combined-truthfulqa",
                                    "requirements": "The True+Info metric has been computed for TruthfulQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "combined-gsm8k",
                                    "requirements": "The True+Info metric has been computed for GSM8K.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "combined-scienceqa",
                                    "requirements": "The True+Info metric has been computed for ScienceQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "table2-results",
                    "requirements": "The computed results match those presented in Table 2.",
                    "weight": 5,
                    "sub_tasks": [
                        {
                            "id": "baseline-performance",
                            "requirements": "The baseline performance matches the performance reported in Table 2.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "baseline-strategyqa",
                                    "requirements": "The baseline model achieves an accuracy of ~66.59% on StrategyQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "baseline-gsm8k",
                                    "requirements": "The baseline model achieves an accuracy of ~67.51% on GSM8K.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "baseline-truthfulqa",
                                    "requirements": "The baseline model achieves an accuracy of ~72.90% on ScienceQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "baseline-scienceqa",
                                    "requirements": "The baseline model achieves a True + Info score of ~77.00% on TruthfulQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "sft-improvements",
                            "requirements": "The Azure-SFT improvements match those reported in Table 2.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "sft-strategyqa-gain",
                                    "requirements": "The Azure-SFT model achieves an improvement of ~10.27% over the baseline model on StrategyQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "sft-gsm8k-gain",
                                    "requirements": "The Azure-SFT model achieves an improvement of ~2.43% over the baseline model on GSM8K.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "sft-truthfulqa-gain",
                                    "requirements": "The Azure-SFT model achieves an improvement of ~6.10% over the baseline model on ScienceQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "sft-scienceqa-gain",
                                    "requirements": "The Azure-SFT model achieves an improvement of ~18.00% over the baseline model on TruthfulQA.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "adapter-improvements",
                            "requirements": "The BBox-Adapter improvements match those reported in Table 2.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "gt-improvements",
                                    "requirements": "The Ground-Truth adapter improvements match those reported in Table 2.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "gt-strategyqa-gain",
                                            "requirements": "The Ground-Truth adapter achieves an improvement of ~5.03% on StrategyQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "gt-gsm8k-gain",
                                            "requirements": "The Ground-Truth adapter achieves an improvement of ~6.35% on GSM8K.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "gt-truthfulqa-gain",
                                            "requirements": "The Ground-Truth adapter achieves an improvement of ~2.70% on TruthfulQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "gt-scienceqa-gain",
                                            "requirements": "The Ground-Truth adapter achieves an improvement of ~5.63% on ScienceQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "adapter-ai-feedback-trends",
                                    "requirements": "The performance improvements for AI feedback match those reported in Table 2.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "ai-feedback-strategyqa-trend",
                                            "requirements": "The AI feedback adapter achieves an improvement of ~3.26% on StrategyQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "ai-feedback-gsm8k-trend",
                                            "requirements": "The AI feedback adapter achieves an improvement of ~5.99% on GSM8K.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "ai-feedback-scienceqa-trend",
                                            "requirements": "The AI feedback adapter achieves an improvement of ~5.40% on ScienceQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "ai-feedback-truthfulqa-trend",
                                            "requirements": "The AI feedback adapter achieves an improvement of ~5.10% on TruthfulQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "adapter-combined-trends",
                                    "requirements": "The performance improvements for combined feedback match those reported in Table 2.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "combined-strategyqa-trend",
                                            "requirements": "The Combined adapter achieves an improvement of ~5.68% on StrategyQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "combined-gsm8k-trend",
                                            "requirements": "The Combined adapter achieves an improvement of ~6.77% on GSM8K.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "combined-scienceqa-trend",
                                            "requirements": "The Combined adapter achieves an improvement of ~6.50% on ScienceQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "combined-truthfulqa-trend",
                                            "requirements": "The Combined adapter achieves an improvement of ~6.60% on TruthfulQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "plug-and-play",
            "requirements": "Table 3 has been reproduced.",
            "weight": 2,
            "sub_tasks": [
                {
                    "id": "davinci-adaptation",
                    "requirements": "The adapter trained on GPT-3.5 Turbo has been evaluated on davinci-002 without retraining.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "davinci-setup",
                            "requirements": "The davinci-002 model has been set up with the OpenAI API for text generation with the following capabilities: (1) prompt-based text generation, (2) adjustable sampling temperature, and (3) control over maximum output length",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "davinci-api-setup",
                                    "requirements": "API access has been configured to enable text generation using davinci-002",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Environment & Infrastructure Setup"
                                },
                                {
                                    "id": "davinci-generation-params",
                                    "requirements": "The model is configured with temperature 1.0 and a maximum length of 512 tokens for generation as specified in Appendix H.2",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "davinci-evaluation",
                            "requirements": "The evaluation of davinci-002 and adapted davinci-002 match those reported in Table 3.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "davinci-performance-calculation",
                                    "requirements": "The accuracy metrics for base and adapted davinci-002 have been calculated for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "base-davinci-metrics",
                                            "requirements": "The performance metrics for base davinci-002 have been calculated.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "base-davinci-strategyqa",
                                                    "requirements": "The accuracy of base davinci-002 on StrategyQA has been calculated.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "base-davinci-gsm8k",
                                                    "requirements": "The accuracy of base davinci-002 on GSM8K has been calculated.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "base-davinci-truthfulqa",
                                                    "requirements": "The True+Info metric of base davinci-002 on TruthfulQA has been calculated.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "adapted-davinci-metrics",
                                            "requirements": "The performance metrics for adapted davinci-002 have been calculated.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "adapted-davinci-strategyqa",
                                                    "requirements": "The accuracy of adapted davinci-002 on StrategyQA has been calculated.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "adapted-davinci-gsm8k",
                                                    "requirements": "The accuracy of adapted davinci-002 on GSM8K has been calculated.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "adapted-davinci-truthfulqa",
                                                    "requirements": "The True+Info metric of adapted davinci-002 on TruthfulQA has been calculated.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Execution",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "davinci-performance-trends",
                                    "requirements": "The performance improvements of adapted davinci-002 over base davinci-002 match those reported in Table 3.",
                                    "weight": 4,
                                    "sub_tasks": [
                                        {
                                            "id": "davinci-strategyqa-trend",
                                            "requirements": "The adapted davinci-002 achieves an improvement of ~15.42% on StrategyQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "davinci-gsm8k-trend",
                                            "requirements": "The adapted davinci-002 achieves an improvement of ~0.12% on GSM8K.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "davinci-truthfulqa-trend",
                                            "requirements": "The adapted davinci-002 achieves an improvement of ~5.00% on TruthfulQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "davinci-average-trend",
                                            "requirements": "The adapted davinci-002 achieves an average improvement of ~6.85% across all datasets.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Result Analysis",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "mixtral-adaptation",
                    "requirements": "The adapter trained on GPT-3.5 Turbo has been evaluated on Mixtral-8x7B without retraining.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "mixtral-baseline",
                            "requirements": "The baseline evaluation of Mixtral-8x7B has been conducted.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "baseline-inference-mixtral",
                                    "requirements": "Mixtral-8x7B has been evaluated on the StrategyQA test set, with the accuracy computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "baseline-metrics",
                                    "requirements": "The baseline performance metrics have been calculated.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "adapter-evaluation-exp",
                            "requirements": "The plug-and-play evaluation using the GPT-3.5 Turbo trained adapter has been conducted on Mixtral-8x7B.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "adapted-inference-mixtral",
                                    "requirements": "The inference with the adapted Mixtral-8x7B has been executed.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "performance-comparison-mix",
                                    "requirements": "The performance comparison between base and adapted Mixtral-8x7B match those reported in Table 3.",
                                    "weight": 4,
                                    "sub_tasks": [
                                        {
                                            "id": "performance-calculation-mix",
                                            "requirements": "Performance metrics have been calculated for both the base and adapted versions of Mixtral-8x7B for each dataset.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "base-mixtral-metrics",
                                                    "requirements": "Performance metrics for the base Mixtral-8x7B model have been calculated.",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "base-mixtral-strategyqa",
                                                            "requirements": "The accuracy of base Mixtral-8x7B on StrategyQA has been calculated.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "base-mixtral-gsm8k",
                                                            "requirements": "The accuracy of base Mixtral-8x7B on GSM8K has been calculated.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "base-mixtral-truthfulqa",
                                                            "requirements": "The True+Info metric of base Mixtral-8x7B on TruthfulQA has been calculated.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                },
                                                {
                                                    "id": "adapted-mixtral-metrics",
                                                    "requirements": "Performance metrics for the adapted Mixtral-8x7B model have been calculated.",
                                                    "weight": 1,
                                                    "sub_tasks": [
                                                        {
                                                            "id": "adapted-mixtral-strategyqa",
                                                            "requirements": "The accuracy of adapted Mixtral-8x7B on StrategyQA has been calculated.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "adapted-mixtral-gsm8k",
                                                            "requirements": "The accuracy of adapted Mixtral-8x7B on GSM8K has been calculated.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        },
                                                        {
                                                            "id": "adapted-mixtral-truthfulqa",
                                                            "requirements": "The True+Info metric of adapted Mixtral-8x7B on TruthfulQA has been calculated.",
                                                            "weight": 1,
                                                            "sub_tasks": [],
                                                            "task_category": "Code Execution",
                                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                        }
                                                    ],
                                                    "task_category": null,
                                                    "finegrained_task_category": null
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "performance-trends-mix",
                                            "requirements": "The performance improvements over base Mixtral-8x7B match those reported in Table 3.",
                                            "weight": 4,
                                            "sub_tasks": [
                                                {
                                                    "id": "mixtral-strategyqa-trend",
                                                    "requirements": "The adapted Mixtral-8x7B achieves an improvement of ~4.06% on StrategyQA.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Result Analysis",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "mixtral-gsm8k-trend",
                                                    "requirements": "The adapted Mixtral-8x7B achieves an improvement of ~0.15% on GSM8K.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Result Analysis",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "mixtral-truthfulqa-trend",
                                                    "requirements": "The adapted Mixtral-8x7B achieves an improvement of ~9.30% on TruthfulQA.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Result Analysis",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "mixtral-average-trend",
                                                    "requirements": "The adapted Mixtral-8x7B achieves an average improvement of ~4.50% across all datasets.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Result Analysis",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "scaling-analysis",
            "requirements": "Figure 3 has been reproduced.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "beam-size-analysis",
                    "requirements": "Figure 3(a) has been replicated.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "beam-experiments",
                            "requirements": "The experiments with different beam sizes have been conducted.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "beam-configurations",
                                    "requirements": "The adapter has been configured to run with beam sizes $k$ = 1, 3, and 5.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "beam-inference",
                                    "requirements": "The inference has been executed for each beam size configuration.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "beam-analysis",
                            "requirements": "The results evaluating the impact of beam size match those reported in Figure 3(a).",
                            "weight": 4,
                            "sub_tasks": [
                                {
                                    "id": "performance-tracking-beam",
                                    "requirements": "The performance changes across beam sizes ($k$ = 1, 3, 5) have been tracked and calculated.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "beam-size-trends",
                                    "requirements": "The results show that increasing the number of beams contributes to an average performance enhancement of ~2.41% across different adapter sizes (0.1B and 0.3B).",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "iteration-analysis",
                    "requirements": "Figure 3(b) has been replicated.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "iteration-experiments",
                            "requirements": "The experiments evaluating the impact of different iteration counts have been implemented and run.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "iteration-configurations",
                                    "requirements": "The online adaptation has been configured to run with $T$ = 0, 1, 2, 3, and 4 iterations.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "iteration-training",
                                    "requirements": "The training and inference has been executed for each iteration configuration.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Experimental Setup"
                                },
                                {
                                    "id": "performance-tracking-129838129",
                                    "requirements": "Code has been written to compute and save the performance changes across iteration counts.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Development",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "performance-tracking",
                                    "requirements": "The performance changes across iteration counts have been computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "iteration-results",
                            "requirements": "The results evaluating the impact of iteration count match those reported in Figure 3(b).",
                            "weight": 4,
                            "sub_tasks": [
                                {
                                    "id": "initial-performance-trend",
                                    "requirements": "The results show that the un-finetuned adapter ($T=0$) performs worse than the base model.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "adaptation-improvement-trend",
                                    "requirements": "The results show that the adapted LLM surpasses the performance of the base model after one round of adaptation.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "subsequent-iterations-trend",
                                    "requirements": "The results show that consistent improvements are observed with iterations up to $T=3$.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Result Analysis",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "cost-evaluation",
            "requirements": "Table 4 has been reproduced.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "training-cost",
                    "requirements": "The training cost comparison between BBOX-ADAPTER and baselines has been reproduced.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "azure-sft-cost",
                            "requirements": "The Azure OpenAI service costs have been computed and saved.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "azure-sft-training-costs",
                                    "requirements": "The training costs ($) have been computed and saved for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "azure-sft-strategyqa-cost",
                                            "requirements": "Code has been written to compute and save the training cost ($) for StrategyQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "azure-sft-gsm8k-cost",
                                            "requirements": "Code has been written to compute and save the training cost ($) for GSM8K.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "azure-sft-truthfulqa-cost",
                                            "requirements": "Code has been written to compute and save the training cost ($) for TruthfulQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "azure-sft-scienceqa-cost",
                                            "requirements": "Code has been written to compute and save the training cost ($) for ScienceQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Logging, Analysis & Presentation"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "azure-sft-inference-costs",
                                    "requirements": "The inference costs ($/1k questions) have been computed and saved for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "azure-sft-strategyqa-inf-cost",
                                            "requirements": "Code has been written to compute and save the inference cost ($/1k questions) for StrategyQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "azure-sft-gsm8k-inf-cost",
                                            "requirements": "Code has been written to compute and save the inference cost ($/1k questions) for GSM8K.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "azure-sft-truthfulqa-inf-cost",
                                            "requirements": "Code has been written to compute and save the inference cost ($/1k questions) for TruthfulQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "azure-sft-scienceqa-inf-cost",
                                            "requirements": "Code has been written to compute and save the inference cost ($/1k questions) for ScienceQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "azure-sft-eval-costs",
                                    "requirements": "The evaluation costs ($) for computing accuracy have been computed and saved for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "azure-sft-strategyqa-eval-cost",
                                            "requirements": "Code has been written to compute and save the cost ($) of computing accuracy for StrategyQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "azure-sft-gsm8k-eval-cost",
                                            "requirements": "Code has been written to compute and save the cost ($) of computing accuracy for GSM8K.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "azure-sft-truthfulqa-eval-cost",
                                            "requirements": "Code has been written to compute and save the cost ($) of computing True+Info scores for TruthfulQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "azure-sft-scienceqa-eval-cost",
                                            "requirements": "Code has been written to compute and save the cost ($) of computing accuracy for ScienceQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "adapter-training-cost",
                            "requirements": "The GPT-3.5 Turbo API costs have been computed and saved during adapter training.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "adapter-training-costs",
                                    "requirements": "The training costs ($) have been computed and saved for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "adapter-strategyqa-cost",
                                            "requirements": "Code has been written to compute and save the training cost ($) for StrategyQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Logging, Analysis & Presentation"
                                        },
                                        {
                                            "id": "adapter-gsm8k-cost",
                                            "requirements": "Code has been written to compute and save the training cost ($) for GSM8K.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Logging, Analysis & Presentation"
                                        },
                                        {
                                            "id": "adapter-truthfulqa-cost",
                                            "requirements": "Code has been written to compute and save the training cost ($) for TruthfulQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Logging, Analysis & Presentation"
                                        },
                                        {
                                            "id": "adapter-scienceqa-cost",
                                            "requirements": "Code has been written to compute and save the training cost ($) for ScienceQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "adapter-inference-costs",
                                    "requirements": "The inference costs ($/1k questions) have been computed and saved for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "adapter-strategyqa-inf-cost",
                                            "requirements": "Code has been written to compute and save the inference cost ($/1k questions) for StrategyQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "adapter-gsm8k-inf-cost",
                                            "requirements": "Code has been written to compute and save the inference cost ($/1k questions) for GSM8K.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "adapter-truthfulqa-inf-cost",
                                            "requirements": "Code has been written to compute and save the inference cost ($/1k questions) for TruthfulQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "adapter-scienceqa-inf-cost",
                                            "requirements": "Code has been written to compute and save the inference cost ($/1k questions) for ScienceQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "adapter-eval-costs",
                                    "requirements": "The evaluation costs ($) for computing accuracy have been computed and saved for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "adapter-strategyqa-eval-cost",
                                            "requirements": "Code has been written to compute and save the cost ($) of computing accuracy for StrategyQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "adapter-gsm8k-eval-cost",
                                            "requirements": "Code has been written to compute and save the cost ($) of computing accuracy for GSM8K.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "adapter-truthfulqa-eval-cost",
                                            "requirements": "Code has been written to compute and save the cost ($) of computing True+Info scores for TruthfulQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        },
                                        {
                                            "id": "adapter-scienceqa-eval-cost",
                                            "requirements": "Code has been written to compute and save the cost ($) of computing accuracy for ScienceQA.",
                                            "weight": 1,
                                            "sub_tasks": [],
                                            "task_category": "Code Development",
                                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "inference-cost",
                    "requirements": "The inference cost comparison for both single-step and full-step variants has been reproduced.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "single-step-evaluation",
                            "requirements": "The single-step variant costs have been evaluated.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "single-step-inference-costs",
                                    "requirements": "The inference costs ($/1k questions) have been computed and saved for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "single-step-strategyqa-inf-cost",
                                            "requirements": "The inference cost ($/1k questions) for StrategyQA have been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "single-step-strategyqa-inf-tracking",
                                                    "requirements": "Code has been written to track and log the API costs during single-step StrategyQA inference.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "single-step-strategyqa-inf-calculation",
                                                    "requirements": "Code has been written to calculate the cost per 1000 questions from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "single-step-gsm8k-inf-cost",
                                            "requirements": "The inference cost ($/1k questions) for GSM8K have been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "single-step-gsm8k-inf-tracking",
                                                    "requirements": "Code has been written to track and log the API costs during single-step GSM8K inference.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "single-step-gsm8k-inf-calculation",
                                                    "requirements": "Code has been written to calculate the cost per 1000 questions from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "single-step-truthfulqa-inf-cost",
                                            "requirements": "The inference cost ($/1k questions) for TruthfulQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "single-step-truthfulqa-inf-tracking",
                                                    "requirements": "Code has been written to track and log the API costs during single-step TruthfulQA inference.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "single-step-truthfulqa-inf-calculation",
                                                    "requirements": "Code has been written to calculate the cost per 1000 questions from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "single-step-scienceqa-inf-cost",
                                            "requirements": "The inference cost ($/1k questions) for ScienceQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "single-step-scienceqa-inf-tracking",
                                                    "requirements": "Code has been written to track and log the API costs during single-step ScienceQA inference.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "single-step-scienceqa-inf-calculation",
                                                    "requirements": "Code has been written to calculate the cost per 1000 questions from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "single-step-eval-costs",
                                    "requirements": "The evaluation costs ($) for computing accuracy have been tracked for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "single-step-strategyqa-eval-cost",
                                            "requirements": "The cost ($) of computing accuracy for StrategyQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "single-step-strategyqa-eval-tracking",
                                                    "requirements": "Code has been written to track and log API costs during accuracy computation for StrategyQA.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "single-step-strategyqa-eval-calculation",
                                                    "requirements": "Code has been written to calculate the total evaluation cost from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "single-step-gsm8k-eval-cost",
                                            "requirements": "The cost ($) of computing accuracy for GSM8K has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "single-step-gsm8k-eval-tracking",
                                                    "requirements": "Code has been written to track and log API costs during accuracy computation for GSM8K.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "single-step-gsm8k-eval-calculation",
                                                    "requirements": "Code has been written to calculate the total evaluation cost from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "single-step-truthfulqa-eval-cost",
                                            "requirements": "The cost ($) of computing True+Info scores for TruthfulQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "single-step-truthfulqa-eval-tracking",
                                                    "requirements": "Code has been written to track and log API costs during True+Info computation for TruthfulQA.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "single-step-truthfulqa-eval-calculation",
                                                    "requirements": "Code has been written to calculate the total evaluation cost from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "single-step-scienceqa-eval-cost",
                                            "requirements": "The cost ($) of computing accuracy for ScienceQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "single-step-scienceqa-eval-tracking",
                                                    "requirements": "Code has been written to track and log API costs during accuracy computation for ScienceQA.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "single-step-scienceqa-eval-calculation",
                                                    "requirements": "Code has been written to calculate the total evaluation cost from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "full-step-evaluation",
                            "requirements": "The full-step variant costs have been evaluated.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "full-step-inference-costs",
                                    "requirements": "The inference costs ($/1k questions) have been computed and saved for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "full-step-strategyqa-inf-cost",
                                            "requirements": "The inference cost ($/1k questions) for StrategyQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "full-step-strategyqa-inf-tracking",
                                                    "requirements": "Code has been written to track and log the API costs during full-step StrategyQA inference.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "full-step-strategyqa-inf-calculation",
                                                    "requirements": "Code has been written to calculate the cost per 1000 questions from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "full-step-gsm8k-inf-cost",
                                            "requirements": "The inference cost ($/1k questions) for GSM8K has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "full-step-gsm8k-inf-tracking",
                                                    "requirements": "Code has been written to track and log the API costs during full-step GSM8K inference.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "full-step-gsm8k-inf-calculation",
                                                    "requirements": "Code has been written to calculate the cost per 1000 questions from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "full-step-truthfulqa-inf-cost",
                                            "requirements": "The inference cost ($/1k questions) for TruthfulQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "full-step-truthfulqa-inf-tracking",
                                                    "requirements": "Code has been written to track and log the API costs during full-step TruthfulQA inference.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "full-step-truthfulqa-inf-calculation",
                                                    "requirements": "Code has been written to calculate the cost per 1000 questions from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "full-step-scienceqa-inf-cost",
                                            "requirements": "The inference cost ($/1k questions) for ScienceQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "full-step-scienceqa-inf-tracking",
                                                    "requirements": "Code has been written to compute and save the API costs during full-step ScienceQA inference.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "full-step-scienceqa-inf-calculation",
                                                    "requirements": "Code has been written to calculate the cost per 1000 questions from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                },
                                {
                                    "id": "full-step-eval-costs",
                                    "requirements": "The evaluation costs ($) for computing accuracy have been computed and saved for each dataset.",
                                    "weight": 1,
                                    "sub_tasks": [
                                        {
                                            "id": "full-step-strategyqa-eval-cost",
                                            "requirements": "The cost ($) of computing accuracy for StrategyQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "full-step-strategyqa-eval-tracking",
                                                    "requirements": "Code has been written to track and log API costs during accuracy computation for StrategyQA.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "full-step-strategyqa-eval-calculation",
                                                    "requirements": "Code has been written to calculate the total evaluation cost from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "full-step-gsm8k-eval-cost",
                                            "requirements": "The cost ($) of computing accuracy for GSM8K has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "full-step-gsm8k-eval-tracking",
                                                    "requirements": "Code has been written to track and log API costs during accuracy computation for GSM8K.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                },
                                                {
                                                    "id": "full-step-gsm8k-eval-calculation",
                                                    "requirements": "Code has been written to calculate the total evaluation cost from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "full-step-truthfulqa-eval-cost",
                                            "requirements": "The cost ($) of computing performance metrics for TruthfulQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "full-step-truthfulqa-eval-tracking",
                                                    "requirements": "Code has been written to compute and save API costs during metric computation for TruthfulQA.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "full-step-truthfulqa-eval-calculation",
                                                    "requirements": "Code has been written to calculate the total evaluation cost from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        },
                                        {
                                            "id": "full-step-scienceqa-eval-cost",
                                            "requirements": "The cost ($) of computing accuracy for ScienceQA has been computed and saved.",
                                            "weight": 1,
                                            "sub_tasks": [
                                                {
                                                    "id": "full-step-scienceqa-eval-tracking",
                                                    "requirements": "Code has been written to compute and save API costs during accuracy computation for ScienceQA.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                                },
                                                {
                                                    "id": "full-step-scienceqa-eval-calculation",
                                                    "requirements": "Code has been written to calculate the total evaluation cost from the logged API usage.",
                                                    "weight": 1,
                                                    "sub_tasks": [],
                                                    "task_category": "Code Development",
                                                    "finegrained_task_category": "Logging, Analysis & Presentation"
                                                }
                                            ],
                                            "task_category": null,
                                            "finegrained_task_category": null
                                        }
                                    ],
                                    "task_category": null,
                                    "finegrained_task_category": null
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "training-cost-trends",
                    "requirements": "The cost efficiency trends match those presented in Table 4.",
                    "weight": 3,
                    "sub_tasks": [
                        {
                            "id": "training-reduction-trend",
                            "requirements": "The results show that BBOX-ADAPTER reduces training costs by ~31.30x compared to Azure-SFT.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "inference-reduction-trend",
                            "requirements": "The results show that BBOX-ADAPTER reduces inference costs by ~1.84x compared to Azure-SFT.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "single-step-trend-4",
                            "requirements": "The results show that the single-step variant reduces inference costs by ~6.27x compared to Azure-SFT.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "training-efficiency-trend",
                            "requirements": "The results show that BBOX-ADAPTER achieves these cost reductions while maintaining competitive performance (within ~4% of Azure-SFT).",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "full-step-trend",
                            "requirements": "The results show that the full-step variant reduces inference costs by ~1.84x compared to Azure-SFT.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Logging, Analysis & Presentation"
                        },
                        {
                            "id": "single-step-trend",
                            "requirements": "The results show that the single-step variant reduces inference costs by ~6.27x compared to Azure-SFT.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "performance-tradeoff-trend",
                            "requirements": "The results show that the single-step variant achieves ~3.45% improvement over the base model despite lower cost, compared to the full-step's ~5.90% improvement.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "ablation-studies",
            "requirements": "Table 5 has been reproduced.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "mlm-implementation",
                    "requirements": "The MLM baseline has been implemented.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "mlm-training",
                            "requirements": "The training pipeline using masked word supervision has been implemented.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        },
                        {
                            "id": "mlm-inference",
                            "requirements": "The inference process using masked word probability scoring has been implemented.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Method Implementation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "loss-comparison-eval",
                    "requirements": "The results match those presented in Table 5.",
                    "weight": 3,
                    "sub_tasks": [
                        {
                            "id": "size-performance-calculation",
                            "requirements": "The accuracy metrics for both 0.1B and 0.3B adapters have been calculated.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "mlm-size-trend",
                            "requirements": "The results show that the MLM-based adapter achieves 61.52% (0.1B) and 60.41% (0.3B) accuracy on StrategyQA.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "nce-size-trend",
                            "requirements": "The results show that the NCE-based adapter achieves 71.62% (0.1B) and 71.18% (0.3B) accuracy on StrategyQA, showing consistent improvement of ~10% over MLM regardless of adapter size.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        },
        {
            "id": "white-box-extension",
            "requirements": "Table 6 has been reproduced.",
            "weight": 1,
            "sub_tasks": [
                {
                    "id": "white-box-performance",
                    "requirements": "Mixtral-8x7B, Mixtral-8x7B + LoRA and Mixtral-8x7B + BBox-Adapter have been evaluated on the StrategyQA test set, with the accuracy and VRAM recorded.",
                    "weight": 1,
                    "sub_tasks": [
                        {
                            "id": "db39284a-0937-4175-a5b0-f69eb677c2c6",
                            "requirements": "Mixtral-8x7B has been loaded in half-precision.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Code Development",
                            "finegrained_task_category": "Experimental Setup"
                        },
                        {
                            "id": "mixtral-baseline-plug",
                            "requirements": "Mixtral-8x7B has been evaluated on the StrategyQA test set with its accuracy and VRAM computed and saved.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "baseline-inference-plug",
                                    "requirements": "Mixtral-8x7B on 0.1B parameters has been evaluated on the StrategyQA test set, with the accuracy computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "748c5996-02da-4ef5-a9e2-09aa848218f0",
                                    "requirements": "Mixtral-8x7B on 0.3B parameters has been evaluated on the StrategyQA test set, with the accuracy computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "baseline-metrics-plug",
                                    "requirements": "Mixtral-8x7B has been evaluated on the StrategyQA test set, with the VRAM computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "adapter-evaluation-wb",
                            "requirements": "Mixtral-8x7B + LoRA has been evaluated on the StrategyQA test set with its accuracy and VRAM computed and saved.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "adapted-inference-wb",
                                    "requirements": "Mixtral-8x7B with LoRA adaptation on 0.1B parameters has been evaluated on the StrategyQA test set, with the accuracy computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "e2171d3f-ab95-4daf-9f47-2439503f7ed0",
                                    "requirements": "Mixtral-8x7B with LoRA adaptation on 0.3B parameters has been evaluated on the StrategyQA test set, with the accuracy computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "performance-comparison-whitebox",
                                    "requirements": "Mixtral-8x7B with LoRA adaptation on 0.1B parameters has been evaluated on the StrategyQA test set, with the VRAM computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        },
                        {
                            "id": "505cbfd8-8eeb-4b6b-8290-0956efeeebdf",
                            "requirements": "Mixtral-8x7B + BBox-Adapter has been evaluated on the StrategyQA test set with its accuracy and VRAM computed and saved.",
                            "weight": 1,
                            "sub_tasks": [
                                {
                                    "id": "21c168ee-c5a1-4b10-be7a-bdd84f9be988",
                                    "requirements": "Mixtral-8x7B with BBox-Adapter adaptation on 0.1B parameters has been evaluated on the StrategyQA test set, with the accuracy computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "eaefd25e-575f-4c06-a2b1-6f61f4496e25",
                                    "requirements": "Mixtral-8x7B with BBox-Adapter adaptation on 0.3B parameters has been evaluated on the StrategyQA test set, with the accuracy computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                },
                                {
                                    "id": "b2407631-327e-4e5d-9a6d-579cb1ddad2e",
                                    "requirements": "Mixtral-8x7B with BBox-Adapter adaptation has been evaluated on the StrategyQA test set using the 0.1B parameter model, with the VRAM computed and saved.",
                                    "weight": 1,
                                    "sub_tasks": [],
                                    "task_category": "Code Execution",
                                    "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                                }
                            ],
                            "task_category": null,
                            "finegrained_task_category": null
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                },
                {
                    "id": "vram-measurement",
                    "requirements": "The results match those presented in Table 6.",
                    "weight": 3,
                    "sub_tasks": [
                        {
                            "id": "base-memory",
                            "requirements": "Mixtral-8x7B achieves an accuracy of 59.91% on the StrategyQA test set.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "adapter-memory",
                            "requirements": "Mixtral-8x7B takes up 90GB of VRAM during inference-time the StrategyQA test set.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Logging, Analysis & Presentation"
                        },
                        {
                            "id": "lora-memory",
                            "requirements": "Mixtral-8x7B + LoRA on 0.1B parameters achieves an accuracy of 73.80% on the StrategyQA test set.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "4ab94afb-e410-4732-9b88-96815e66e4eb",
                            "requirements": "Mixtral-8x7B + LoRA on 0.3B parameters achieves an accuracy of 73.80% on the StrategyQA test set.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "7c3f6fb5-590f-4e65-afcb-8e15c590287f",
                            "requirements": "Mixtral-8x7B + LoRA takes up 208GB of VRAM during train-time the StrategyQA test set.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Logging, Analysis & Presentation"
                        },
                        {
                            "id": "2eca0f28-5595-4957-857b-98208d886c3c",
                            "requirements": "Mixtral-8x7B + LoRA takes up 92GB of VRAM during inference-time the StrategyQA test set.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "100a78df-af5a-410c-a8c1-6eea2331c3ee",
                            "requirements": "Mixtral-8x7B + Bbox-Adapter achieves an accuracy of 66.08% on the StrategyQA test set with the 0.1B parameter setting.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "504b46df-0b53-4f37-aa64-556b9cf108df",
                            "requirements": "Mixtral-8x7B + Bbox-Adapter achieves an accuracy of 65.26% on the StrategyQA test set with the 0.3B parameter setting.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Evaluation, Metrics & Benchmarking"
                        },
                        {
                            "id": "2067127d-80e8-4b1c-93a6-54aa352e7607",
                            "requirements": "Mixtral-8x7B + Bbox-Adapter takes up 105GB of VRAM during train-time the StrategyQA test set.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Logging, Analysis & Presentation"
                        },
                        {
                            "id": "52c38b9d-ce30-4d86-b7dc-90f31cf3ebb8",
                            "requirements": "Mixtral-8x7B + Bbox-Adapter takes up 92GB of VRAM during inference-time the StrategyQA test set.",
                            "weight": 1,
                            "sub_tasks": [],
                            "task_category": "Result Analysis",
                            "finegrained_task_category": "Logging, Analysis & Presentation"
                        }
                    ],
                    "task_category": null,
                    "finegrained_task_category": null
                }
            ],
            "task_category": null,
            "finegrained_task_category": null
        }
    ],
    "task_category": null,
    "finegrained_task_category": null
}