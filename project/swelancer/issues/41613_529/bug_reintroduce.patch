diff --git a/src/components/MoneyReportHeader.tsx b/src/components/MoneyReportHeader.tsx
index 12da12b8b15..026d97ad282 100644
--- a/src/components/MoneyReportHeader.tsx
+++ b/src/components/MoneyReportHeader.tsx
@@ -404,7 +404,6 @@ function MoneyReportHeader({policy, report: moneyRequestReport, transactionThrea
                     paymentType={paymentType}
                     chatReport={chatReport}
                     moneyRequestReport={moneyRequestReport}
-                    transactionCount={transactionIDs.length}
                 />
             )}
             <DelegateNoAccessModal
diff --git a/src/components/ProcessMoneyReportHoldMenu.tsx b/src/components/ProcessMoneyReportHoldMenu.tsx
index da572e4b1a7..70bf5198715 100644
--- a/src/components/ProcessMoneyReportHoldMenu.tsx
+++ b/src/components/ProcessMoneyReportHoldMenu.tsx
@@ -1,4 +1,4 @@
-import React, {useMemo} from 'react';
+import React from 'react';
 import type {OnyxEntry} from 'react-native-onyx';
 import useLocalize from '@hooks/useLocalize';
 import useResponsiveLayout from '@hooks/useResponsiveLayout';
@@ -38,9 +38,6 @@ type ProcessMoneyReportHoldMenuProps = {
 
     /** Type of action handled */
     requestType?: ActionHandledType;
-
-    /** Number of transaction of a money request */
-    transactionCount: number;
 };
 
 function ProcessMoneyReportHoldMenu({
@@ -52,7 +49,6 @@ function ProcessMoneyReportHoldMenu({
     paymentType,
     chatReport,
     moneyRequestReport,
-    transactionCount,
 }: ProcessMoneyReportHoldMenuProps) {
     const {translate} = useLocalize();
     const isApprove = requestType === CONST.IOU.REPORT_ACTION_TYPE.APPROVE;
@@ -71,19 +67,12 @@ function ProcessMoneyReportHoldMenu({
         onClose();
     };
 
-    const promptText = useMemo(() => {
-        if (nonHeldAmount) {
-            return translate(isApprove ? 'iou.confirmApprovalAmount' : 'iou.confirmPayAmount');
-        }
-        return translate(isApprove ? 'iou.confirmApprovalAllHoldAmount' : 'iou.confirmPayAllHoldAmount', {count: transactionCount});
-    }, [nonHeldAmount, transactionCount, translate, isApprove]);
-
     return (
         <DecisionModal
             title={translate(isApprove ? 'iou.confirmApprove' : 'iou.confirmPay')}
             onClose={onClose}
             isVisible={isVisible}
-            prompt={promptText}
+            prompt={translate(isApprove ? 'iou.confirmApprovalAmount' : 'iou.confirmPayAmount')}
             firstOptionText={nonHeldAmount ? `${translate(isApprove ? 'iou.approveOnly' : 'iou.payOnly')} ${nonHeldAmount}` : undefined}
             secondOptionText={`${translate(isApprove ? 'iou.approve' : 'iou.pay')} ${fullAmount}`}
             onFirstOptionSubmit={() => onSubmit(false)}
diff --git a/src/components/ReportActionItem/ReportPreview.tsx b/src/components/ReportActionItem/ReportPreview.tsx
index 2dfc44b4d2f..b4cf1975341 100644
--- a/src/components/ReportActionItem/ReportPreview.tsx
+++ b/src/components/ReportActionItem/ReportPreview.tsx
@@ -586,7 +586,6 @@ function ReportPreview({
                     paymentType={paymentType}
                     chatReport={chatReport}
                     moneyRequestReport={iouReport}
-                    transactionCount={numberOfRequests}
                 />
             )}
         </OfflineWithFeedback>
diff --git a/src/languages/en.ts b/src/languages/en.ts
index 6d579a2af2d..4262d78176f 100755
--- a/src/languages/en.ts
+++ b/src/languages/en.ts
@@ -40,7 +40,6 @@ import type {
     ChangeTypeParams,
     CharacterLengthLimitParams,
     CharacterLimitParams,
-    CompanyCardFeedNameParams,
     ConfirmThatParams,
     ConnectionNameParams,
     ConnectionParams,
@@ -980,17 +979,9 @@ const translations = {
         reviewDuplicates: 'Review duplicates',
         keepAll: 'Keep all',
         confirmApprove: 'Confirm approval amount',
-        confirmApprovalAmount: 'Approve only compliant expenses, or approve the entire report.',
-        confirmApprovalAllHoldAmount: () => ({
-            one: 'This expense is on hold. Do you want to approve anyway?',
-            other: 'These expenses are on hold. Do you want to approve anyway?',
-        }),
+        confirmApprovalAmount: "Approve what's not on hold, or approve the entire report.",
         confirmPay: 'Confirm payment amount',
-        confirmPayAmount: "Pay what's not on hold, or pay the entire report.",
-        confirmPayAllHoldAmount: () => ({
-            one: 'This expense is on hold. Do you want to pay anyway?',
-            other: 'These expenses are on hold. Do you want to pay anyway?',
-        }),
+        confirmPayAmount: "Pay what's not on hold, or pay all out-of-pocket spend.",
         payOnly: 'Pay only',
         approveOnly: 'Approve only',
         holdEducationalTitle: 'This expense is on',
@@ -3148,7 +3139,6 @@ const translations = {
                 cardFeedRestrictDeletingTransaction: 'Restrict deleting transactions',
                 cardFeedAllowDeletingTransaction: 'Allow deleting transactions',
                 removeCardFeed: 'Remove card feed',
-                removeCardFeedTitle: ({feedName}: CompanyCardFeedNameParams) => `Remove ${feedName} feed`,
                 removeCardFeedDescription: 'Are you sure you want to remove this card feed? This will unassign all cards.',
                 error: {
                     feedNameRequired: 'Card feed name is required.',
diff --git a/src/languages/es.ts b/src/languages/es.ts
index cb19b091b05..e7b1b124b8d 100644
--- a/src/languages/es.ts
+++ b/src/languages/es.ts
@@ -38,7 +38,6 @@ import type {
     ChangeTypeParams,
     CharacterLengthLimitParams,
     CharacterLimitParams,
-    CompanyCardFeedNameParams,
     ConfirmThatParams,
     ConnectionNameParams,
     ConnectionParams,
@@ -972,17 +971,9 @@ const translations = {
         reviewDuplicates: 'Revisar duplicados',
         keepAll: 'Mantener todos',
         confirmApprove: 'Confirmar importe a aprobar',
-        confirmApprovalAmount: 'Aprueba sólo los gastos conformes, o aprueba todo el informe.',
-        confirmApprovalAllHoldAmount: () => ({
-            one: 'Este gasto está bloqueado. ¿Quieres aprobarlo de todos modos?',
-            other: 'Estos gastos están bloqueados. ¿Quieres aprobarlos de todos modos?',
-        }),
+        confirmApprovalAmount: 'Aprueba lo que no está bloqueado, o aprueba todo el informe.',
         confirmPay: 'Confirmar importe de pago',
-        confirmPayAmount: 'Paga lo que no está bloqueado, o paga el informe completo.',
-        confirmPayAllHoldAmount: () => ({
-            one: 'Este gasto está bloqueado. ¿Quieres pagarlo de todos modos?',
-            other: 'Estos gastos están bloqueados. ¿Quieres pagarlos de todos modos?',
-        }),
+        confirmPayAmount: 'Paga lo que no está bloqueado, o paga todos los gastos por cuenta propia.',
         payOnly: 'Solo pagar',
         approveOnly: 'Solo aprobar',
         hold: 'Bloquear',
@@ -3187,7 +3178,6 @@ const translations = {
                 cardFeedRestrictDeletingTransaction: 'Restringir eliminación de transacciones',
                 cardFeedAllowDeletingTransaction: 'Permitir eliminación de transacciones',
                 removeCardFeed: 'Quitar la alimentación de tarjetas',
-                removeCardFeedTitle: ({feedName}: CompanyCardFeedNameParams) => `Eliminar el feed de ${feedName}`,
                 removeCardFeedDescription: '¿Estás seguro de que deseas eliminar esta fuente de tarjetas? Esto anulará la asignación de todas las tarjetas.',
                 error: {
                     feedNameRequired: 'Se requiere el nombre de la fuente de la tarjeta.',
diff --git a/src/languages/types.ts b/src/languages/types.ts
index 0bdf740d982..d322a69d26e 100644
--- a/src/languages/types.ts
+++ b/src/languages/types.ts
@@ -94,4 +94,173 @@ type TranslationParameters<TKey extends TranslationPaths> = FlatTranslationsObje
         : Args
     : never[];
 
-export type {DefaultTranslation, TranslationDeepObject, TranslationPaths, PluralForm, TranslationValue, FlatTranslationsObject, TranslationParameters};
+type ElectronicFundsParams = {percentage: string; amount: string};
+
+type LogSizeParams = {size: number};
+
+type HeldRequestParams = {comment: string};
+
+type DistanceRateOperationsParams = {count: number};
+
+type ReimbursementRateParams = {unit: Unit};
+
+type ChangeFieldParams = {oldValue?: string; newValue: string; fieldName: string};
+
+type ChangePolicyParams = {fromPolicy: string; toPolicy: string};
+
+type ChangeTypeParams = {oldType: string; newType: string};
+
+type DelegateSubmitParams = {delegateUser: string; originalManager: string};
+
+type ExportedToIntegrationParams = {label: string};
+
+type ForwardedParams = {amount: string; currency: string};
+
+type IntegrationsMessageParams = {
+    label: string;
+    result: {
+        code?: number;
+        messages?: string[];
+        title?: string;
+        link?: {
+            url: string;
+            text: string;
+        };
+    };
+};
+
+type MarkedReimbursedParams = {amount: string; currency: string};
+
+type MarkReimbursedFromIntegrationParams = {amount: string; currency: string};
+
+type ShareParams = {to: string};
+
+type UnshareParams = {to: string};
+
+type StripePaidParams = {amount: string; currency: string};
+
+type UnapprovedParams = {amount: string; currency: string};
+type RemoveMembersWarningPrompt = {
+    memberName: string;
+    ownerName: string;
+};
+
+export type {
+    AddressLineParams,
+    AdminCanceledRequestParams,
+    AlreadySignedInParams,
+    ApprovedAmountParams,
+    BeginningOfChatHistoryAdminRoomPartOneParams,
+    BeginningOfChatHistoryAnnounceRoomPartOneParams,
+    BeginningOfChatHistoryAnnounceRoomPartTwo,
+    BeginningOfChatHistoryDomainRoomPartOneParams,
+    CanceledRequestParams,
+    CharacterLimitParams,
+    ConfirmThatParams,
+    DateShouldBeAfterParams,
+    DateShouldBeBeforeParams,
+    DeleteActionParams,
+    DeleteConfirmationParams,
+    DidSplitAmountMessageParams,
+    DistanceRateOperationsParams,
+    EditActionParams,
+    ElectronicFundsParams,
+    EnglishTranslation,
+    EnterMagicCodeParams,
+    FormattedMaxLengthParams,
+    GoBackMessageParams,
+    GoToRoomParams,
+    HeldRequestParams,
+    InstantSummaryParams,
+    LocalTimeParams,
+    LogSizeParams,
+    LoggedInAsParams,
+    ManagerApprovedAmountParams,
+    ManagerApprovedParams,
+    SignUpNewFaceCodeParams,
+    NoLongerHaveAccessParams,
+    NotAllowedExtensionParams,
+    NotYouParams,
+    OOOEventSummaryFullDayParams,
+    OOOEventSummaryPartialDayParams,
+    OurEmailProviderParams,
+    PaidElsewhereWithAmountParams,
+    PaidWithExpensifyWithAmountParams,
+    ParentNavigationSummaryParams,
+    PaySomeoneParams,
+    PayerOwesAmountParams,
+    PayerOwesParams,
+    PayerPaidAmountParams,
+    PayerPaidParams,
+    PayerSettledParams,
+    ReimbursementRateParams,
+    RemovedTheRequestParams,
+    RenamedRoomActionParams,
+    ReportArchiveReasonsClosedParams,
+    ReportArchiveReasonsMergedParams,
+    ReportArchiveReasonsPolicyDeletedParams,
+    ReportArchiveReasonsRemovedFromPolicyParams,
+    RequestAmountParams,
+    RequestCountParams,
+    RequestedAmountMessageParams,
+    ResolutionConstraintsParams,
+    RoomNameReservedErrorParams,
+    RoomRenamedToParams,
+    SetTheDistanceParams,
+    SetTheRequestParams,
+    SettleExpensifyCardParams,
+    SettledAfterAddedBankAccountParams,
+    SizeExceededParams,
+    SplitAmountParams,
+    StepCounterParams,
+    TaskCreatedActionParams,
+    TermsParams,
+    ThreadRequestReportNameParams,
+    ThreadSentMoneyReportNameParams,
+    ToValidateLoginParams,
+    TransferParams,
+    TranslationBase,
+    TranslationFlatObject,
+    TranslationPaths,
+    UntilTimeParams,
+    UpdatedTheDistanceParams,
+    UpdatedTheRequestParams,
+    UsePlusButtonParams,
+    UserIsAlreadyMemberParams,
+    UserSplitParams,
+    ViolationsAutoReportedRejectedExpenseParams,
+    ViolationsCashExpenseWithNoReceiptParams,
+    ViolationsConversionSurchargeParams,
+    ViolationsInvoiceMarkupParams,
+    ViolationsMaxAgeParams,
+    ViolationsMissingTagParams,
+    ViolationsOverAutoApprovalLimitParams,
+    ViolationsOverCategoryLimitParams,
+    ViolationsOverLimitParams,
+    ViolationsPerDayLimitParams,
+    ViolationsReceiptRequiredParams,
+    ViolationsRterParams,
+    ViolationsTagOutOfPolicyParams,
+    ViolationsTaxOutOfPolicyParams,
+    WaitingOnBankAccountParams,
+    WalletProgramParams,
+    WeSentYouMagicSignInLinkParams,
+    WelcomeEnterMagicCodeParams,
+    WelcomeNoteParams,
+    WelcomeToRoomParams,
+    ZipCodeExampleFormatParams,
+    ChangeFieldParams,
+    ChangePolicyParams,
+    ChangeTypeParams,
+    ExportedToIntegrationParams,
+    DelegateSubmitParams,
+    ForwardedParams,
+    IntegrationsMessageParams,
+    MarkedReimbursedParams,
+    MarkReimbursedFromIntegrationParams,
+    ShareParams,
+    UnshareParams,
+    StripePaidParams,
+    UnapprovedParams,
+    RemoveMembersWarningPrompt,
+};
