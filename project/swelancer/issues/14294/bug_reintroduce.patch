diff --git a/src/hooks/useHtmlPaste/index.ts b/src/hooks/useHtmlPaste/index.ts
index 6199a36abdc..93547252c35 100644
--- a/src/hooks/useHtmlPaste/index.ts
+++ b/src/hooks/useHtmlPaste/index.ts
@@ -64,9 +64,55 @@ const useHtmlPaste: UseHtmlPaste = (textInputRef, preHtmlPasteCallback, removeLi
      */
     const handlePastedHTML = useCallback(
         (html: string) => {
-            paste(Parser.htmlToMarkdown(html));
+            // Create a temporary div to parse the HTML
+            const tempDiv = document.createElement('div');
+            tempDiv.innerHTML = html;
+
+            // Function to convert bold elements to markdown
+            const convertBoldToMarkdown = (element: Element): string => {
+                if (element.tagName === 'B' || element.tagName === 'STRONG') {
+                    return `**${element.textContent}**`;
+                }
+                
+                // For elements with children, recursively convert
+                let result = '';
+                element.childNodes.forEach(child => {
+                    if (child.nodeType === Node.ELEMENT_NODE) {
+                        result += convertBoldToMarkdown(child as Element);
+                    } else if (child.nodeType === Node.TEXT_NODE) {
+                        result += child.textContent || '';
+                    }
+                });
+                
+                return result;
+            };
+
+            // Convert the HTML to markdown-like text with bold preservation
+            const markdownText = convertBoldToMarkdown(tempDiv);
+            
+            // Force paste with asterisks and trigger input
+            const textInputHTMLElement = textInputRef.current as HTMLElement;
+            if (textInputHTMLElement) {
+                // Directly insert text with asterisks
+                const selection = window.getSelection();
+                if (selection?.rangeCount) {
+                    const range = selection.getRangeAt(0);
+                    range.deleteContents();
+                    const boldNode = document.createTextNode(`**${markdownText}**`);
+                    range.insertNode(boldNode);
+
+                    // Move cursor to end of inserted text
+                    range.setStartAfter(boldNode);
+                    range.setEndAfter(boldNode);
+                    selection.removeAllRanges();
+                    selection.addRange(range);
+
+                    // Dispatch input event
+                    textInputHTMLElement.dispatchEvent(new Event('input', {bubbles: true}));
+                }
+            }
         },
-        [paste],
+        [textInputRef],
     );
 
     /**
     